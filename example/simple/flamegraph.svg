<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="924"><g><title>rnpm`rnpm::parsers::package_lock::parse (1 samples, 0.11%)</title><rect x="0.0000%" y="1157" width="0.1082%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>rnpm`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="0.0000%" y="1141" width="0.1082%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>rnpm`alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="0.0000%" y="1125" width="0.1082%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.11%)</title><rect x="0.0000%" y="1109" width="0.1082%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.11%)</title><rect x="0.0000%" y="1093" width="0.1082%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="0.0000%" y="1077" width="0.1082%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`close (54 samples, 5.84%)</title><rect x="0.1082%" y="1141" width="5.8442%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="54"/><text x="0.3582%" y="1151.50">libsyst..</text></g><g><title>libsystem_kernel.dylib`symlink (1 samples, 0.11%)</title><rect x="5.9524%" y="1141" width="0.1082%" height="15" fill="rgb(228,23,34)" fg:x="55" fg:w="1"/><text x="6.2024%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.11%)</title><rect x="6.0606%" y="1141" width="0.1082%" height="15" fill="rgb(218,30,26)" fg:x="56" fg:w="1"/><text x="6.3106%" y="1151.50"></text></g><g><title>rnpm`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="6.1688%" y="1141" width="0.1082%" height="15" fill="rgb(220,122,19)" fg:x="57" fg:w="1"/><text x="6.4188%" y="1151.50"></text></g><g><title>rnpm`bytes::bytes::promotable_even_drop (1 samples, 0.11%)</title><rect x="6.2771%" y="1141" width="0.1082%" height="15" fill="rgb(250,228,42)" fg:x="58" fg:w="1"/><text x="6.5271%" y="1151.50"></text></g><g><title>rnpm`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="6.3853%" y="1125" width="0.1082%" height="15" fill="rgb(240,193,28)" fg:x="59" fg:w="1"/><text x="6.6353%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="6.4935%" y="1109" width="0.1082%" height="15" fill="rgb(216,20,37)" fg:x="60" fg:w="1"/><text x="6.7435%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.11%)</title><rect x="6.6017%" y="1109" width="0.1082%" height="15" fill="rgb(206,188,39)" fg:x="61" fg:w="1"/><text x="6.8517%" y="1119.50"></text></g><g><title>rnpm`miniz_oxide::inflate::core::apply_match (2 samples, 0.22%)</title><rect x="7.2511%" y="1013" width="0.2165%" height="15" fill="rgb(217,207,13)" fg:x="67" fg:w="2"/><text x="7.5011%" y="1023.50"></text></g><g><title>rnpm`miniz_oxide::inflate::core::init_tree (1 samples, 0.11%)</title><rect x="7.4675%" y="1013" width="0.1082%" height="15" fill="rgb(231,73,38)" fg:x="69" fg:w="1"/><text x="7.7175%" y="1023.50"></text></g><g><title>rnpm`&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.97%)</title><rect x="6.7100%" y="1093" width="0.9740%" height="15" fill="rgb(225,20,46)" fg:x="62" fg:w="9"/><text x="6.9600%" y="1103.50"></text></g><g><title>rnpm`&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.97%)</title><rect x="6.7100%" y="1077" width="0.9740%" height="15" fill="rgb(210,31,41)" fg:x="62" fg:w="9"/><text x="6.9600%" y="1087.50"></text></g><g><title>rnpm`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (9 samples, 0.97%)</title><rect x="6.7100%" y="1061" width="0.9740%" height="15" fill="rgb(221,200,47)" fg:x="62" fg:w="9"/><text x="6.9600%" y="1071.50"></text></g><g><title>rnpm`miniz_oxide::inflate::stream::inflate (9 samples, 0.97%)</title><rect x="6.7100%" y="1045" width="0.9740%" height="15" fill="rgb(226,26,5)" fg:x="62" fg:w="9"/><text x="6.9600%" y="1055.50"></text></g><g><title>rnpm`miniz_oxide::inflate::core::decompress (9 samples, 0.97%)</title><rect x="6.7100%" y="1029" width="0.9740%" height="15" fill="rgb(249,33,26)" fg:x="62" fg:w="9"/><text x="6.9600%" y="1039.50"></text></g><g><title>rnpm`miniz_oxide::inflate::core::transfer (1 samples, 0.11%)</title><rect x="7.5758%" y="1013" width="0.1082%" height="15" fill="rgb(235,183,28)" fg:x="70" fg:w="1"/><text x="7.8258%" y="1023.50"></text></g><g><title>rnpm`alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="7.6840%" y="1093" width="0.1082%" height="15" fill="rgb(221,5,38)" fg:x="71" fg:w="1"/><text x="7.9340%" y="1103.50"></text></g><g><title>rnpm`&lt;tar::archive::EntriesFields as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.41%)</title><rect x="6.4935%" y="1125" width="1.4069%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="13"/><text x="6.7435%" y="1135.50"></text></g><g><title>rnpm`tar::archive::EntriesFields::next_entry_raw (11 samples, 1.19%)</title><rect x="6.7100%" y="1109" width="1.1905%" height="15" fill="rgb(241,131,45)" fg:x="62" fg:w="11"/><text x="6.9600%" y="1119.50"></text></g><g><title>rnpm`tar::header::num_field_wrapper_into (1 samples, 0.11%)</title><rect x="7.7922%" y="1093" width="0.1082%" height="15" fill="rgb(249,31,29)" fg:x="72" fg:w="1"/><text x="8.0422%" y="1103.50"></text></g><g><title>rnpm`alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="7.7922%" y="1077" width="0.1082%" height="15" fill="rgb(225,111,53)" fg:x="72" fg:w="1"/><text x="8.0422%" y="1087.50"></text></g><g><title>rnpm`&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (1 samples, 0.11%)</title><rect x="7.9004%" y="1093" width="0.1082%" height="15" fill="rgb(238,160,17)" fg:x="73" fg:w="1"/><text x="8.1504%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="7.9004%" y="1077" width="0.1082%" height="15" fill="rgb(214,148,48)" fg:x="73" fg:w="1"/><text x="8.1504%" y="1087.50"></text></g><g><title>rnpm`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.22%)</title><rect x="7.9004%" y="1125" width="0.2165%" height="15" fill="rgb(232,36,49)" fg:x="73" fg:w="2"/><text x="8.1504%" y="1135.50"></text></g><g><title>rnpm`&lt;reqwest::blocking::client::InnerClientHandle as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="7.9004%" y="1109" width="0.2165%" height="15" fill="rgb(209,103,24)" fg:x="73" fg:w="2"/><text x="8.1504%" y="1119.50"></text></g><g><title>rnpm`std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.11%)</title><rect x="8.0087%" y="1093" width="0.1082%" height="15" fill="rgb(229,88,8)" fg:x="74" fg:w="1"/><text x="8.2587%" y="1103.50"></text></g><g><title>rnpm`std::sys::unix::thread::Thread::join (1 samples, 0.11%)</title><rect x="8.0087%" y="1077" width="0.1082%" height="15" fill="rgb(213,181,19)" fg:x="74" fg:w="1"/><text x="8.2587%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (1 samples, 0.11%)</title><rect x="8.0087%" y="1061" width="0.1082%" height="15" fill="rgb(254,191,54)" fg:x="74" fg:w="1"/><text x="8.2587%" y="1071.50"></text></g><g><title>rnpm`filetime::FileTime::from_unix_time (1 samples, 0.11%)</title><rect x="8.1169%" y="1125" width="0.1082%" height="15" fill="rgb(241,83,37)" fg:x="75" fg:w="1"/><text x="8.3669%" y="1135.50"></text></g><g><title>rnpm`flate2::gz::bufread::GzDecoder&lt;R&gt;::new (1 samples, 0.11%)</title><rect x="8.2251%" y="1125" width="0.1082%" height="15" fill="rgb(233,36,39)" fg:x="76" fg:w="1"/><text x="8.4751%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="8.2251%" y="1109" width="0.1082%" height="15" fill="rgb(226,3,54)" fg:x="76" fg:w="1"/><text x="8.4751%" y="1119.50"></text></g><g><title>rnpm`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="8.3333%" y="1125" width="0.1082%" height="15" fill="rgb(245,192,40)" fg:x="77" fg:w="1"/><text x="8.5833%" y="1135.50"></text></g><g><title>rnpm`reqwest::async_impl::client::ClientBuilder::new (1 samples, 0.11%)</title><rect x="8.4416%" y="1109" width="0.1082%" height="15" fill="rgb(238,167,29)" fg:x="78" fg:w="1"/><text x="8.6916%" y="1119.50"></text></g><g><title>rnpm`reqwest::blocking::client::ClientBuilder::build (1 samples, 0.11%)</title><rect x="8.5498%" y="1109" width="0.1082%" height="15" fill="rgb(232,182,51)" fg:x="79" fg:w="1"/><text x="8.7998%" y="1119.50"></text></g><g><title>rnpm`std::thread::Builder::spawn (1 samples, 0.11%)</title><rect x="8.5498%" y="1093" width="0.1082%" height="15" fill="rgb(231,60,39)" fg:x="79" fg:w="1"/><text x="8.7998%" y="1103.50"></text></g><g><title>rnpm`std::sys::unix::thread::Thread::new (1 samples, 0.11%)</title><rect x="8.5498%" y="1077" width="0.1082%" height="15" fill="rgb(208,69,12)" fg:x="79" fg:w="1"/><text x="8.7998%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.11%)</title><rect x="8.5498%" y="1061" width="0.1082%" height="15" fill="rgb(235,93,37)" fg:x="79" fg:w="1"/><text x="8.7998%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="8.6580%" y="1077" width="0.1082%" height="15" fill="rgb(213,116,39)" fg:x="80" fg:w="1"/><text x="8.9080%" y="1087.50"></text></g><g><title>rnpm`reqwest::blocking::wait::timeout (1 samples, 0.11%)</title><rect x="8.7662%" y="1077" width="0.1082%" height="15" fill="rgb(222,207,29)" fg:x="81" fg:w="1"/><text x="9.0162%" y="1087.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="8.7662%" y="1061" width="0.1082%" height="15" fill="rgb(206,96,30)" fg:x="81" fg:w="1"/><text x="9.0162%" y="1071.50"></text></g><g><title>rnpm`&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="8.7662%" y="1045" width="0.1082%" height="15" fill="rgb(218,138,4)" fg:x="81" fg:w="1"/><text x="9.0162%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.11%)</title><rect x="8.7662%" y="1029" width="0.1082%" height="15" fill="rgb(250,191,14)" fg:x="81" fg:w="1"/><text x="9.0162%" y="1039.50"></text></g><g><title>rnpm`reqwest::blocking::get (5 samples, 0.54%)</title><rect x="8.4416%" y="1125" width="0.5411%" height="15" fill="rgb(239,60,40)" fg:x="78" fg:w="5"/><text x="8.6916%" y="1135.50"></text></g><g><title>rnpm`reqwest::blocking::request::RequestBuilder::send (3 samples, 0.32%)</title><rect x="8.6580%" y="1109" width="0.3247%" height="15" fill="rgb(206,27,48)" fg:x="80" fg:w="3"/><text x="8.9080%" y="1119.50"></text></g><g><title>rnpm`reqwest::blocking::client::Client::execute (3 samples, 0.32%)</title><rect x="8.6580%" y="1093" width="0.3247%" height="15" fill="rgb(225,35,8)" fg:x="80" fg:w="3"/><text x="8.9080%" y="1103.50"></text></g><g><title>rnpm`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="8.8745%" y="1077" width="0.1082%" height="15" fill="rgb(250,213,24)" fg:x="82" fg:w="1"/><text x="9.1245%" y="1087.50"></text></g><g><title>rnpm`&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (1 samples, 0.11%)</title><rect x="8.8745%" y="1061" width="0.1082%" height="15" fill="rgb(247,123,22)" fg:x="82" fg:w="1"/><text x="9.1245%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="8.8745%" y="1045" width="0.1082%" height="15" fill="rgb(231,138,38)" fg:x="82" fg:w="1"/><text x="9.1245%" y="1055.50"></text></g><g><title>rnpm`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1 samples, 0.11%)</title><rect x="9.0909%" y="981" width="0.1082%" height="15" fill="rgb(231,145,46)" fg:x="84" fg:w="1"/><text x="9.3409%" y="991.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.43%)</title><rect x="8.9827%" y="1093" width="0.4329%" height="15" fill="rgb(251,118,11)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1103.50"></text></g><g><title>rnpm`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (4 samples, 0.43%)</title><rect x="8.9827%" y="1077" width="0.4329%" height="15" fill="rgb(217,147,25)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1087.50"></text></g><g><title>rnpm`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (4 samples, 0.43%)</title><rect x="8.9827%" y="1061" width="0.4329%" height="15" fill="rgb(247,81,37)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1071.50"></text></g><g><title>rnpm`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (4 samples, 0.43%)</title><rect x="8.9827%" y="1045" width="0.4329%" height="15" fill="rgb(209,12,38)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1055.50"></text></g><g><title>rnpm`hyper::body::body::Body::poll_inner (4 samples, 0.43%)</title><rect x="8.9827%" y="1029" width="0.4329%" height="15" fill="rgb(227,1,9)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1039.50"></text></g><g><title>rnpm`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.43%)</title><rect x="8.9827%" y="1013" width="0.4329%" height="15" fill="rgb(248,47,43)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1023.50"></text></g><g><title>rnpm`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (4 samples, 0.43%)</title><rect x="8.9827%" y="997" width="0.4329%" height="15" fill="rgb(221,10,30)" fg:x="83" fg:w="4"/><text x="9.2327%" y="1007.50"></text></g><g><title>rnpm`tokio::runtime::task::waker::wake_by_val (2 samples, 0.22%)</title><rect x="9.1991%" y="981" width="0.2165%" height="15" fill="rgb(210,229,1)" fg:x="85" fg:w="2"/><text x="9.4491%" y="991.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (2 samples, 0.22%)</title><rect x="9.1991%" y="965" width="0.2165%" height="15" fill="rgb(222,148,37)" fg:x="85" fg:w="2"/><text x="9.4491%" y="975.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (2 samples, 0.22%)</title><rect x="9.1991%" y="949" width="0.2165%" height="15" fill="rgb(234,67,33)" fg:x="85" fg:w="2"/><text x="9.4491%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.22%)</title><rect x="9.1991%" y="933" width="0.2165%" height="15" fill="rgb(247,98,35)" fg:x="85" fg:w="2"/><text x="9.4491%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__gettimeofday (2 samples, 0.22%)</title><rect x="9.4156%" y="1077" width="0.2165%" height="15" fill="rgb(247,138,52)" fg:x="87" fg:w="2"/><text x="9.6656%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4 samples, 0.43%)</title><rect x="9.6320%" y="1077" width="0.4329%" height="15" fill="rgb(213,79,30)" fg:x="89" fg:w="4"/><text x="9.8820%" y="1087.50"></text></g><g><title>rnpm`reqwest::blocking::response::Response::bytes (11 samples, 1.19%)</title><rect x="8.9827%" y="1125" width="1.1905%" height="15" fill="rgb(246,177,23)" fg:x="83" fg:w="11"/><text x="9.2327%" y="1135.50"></text></g><g><title>rnpm`reqwest::blocking::wait::timeout (11 samples, 1.19%)</title><rect x="8.9827%" y="1109" width="1.1905%" height="15" fill="rgb(230,62,27)" fg:x="83" fg:w="11"/><text x="9.2327%" y="1119.50"></text></g><g><title>rnpm`std::thread::park_timeout (7 samples, 0.76%)</title><rect x="9.4156%" y="1093" width="0.7576%" height="15" fill="rgb(216,154,8)" fg:x="87" fg:w="7"/><text x="9.6656%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.11%)</title><rect x="10.0649%" y="1077" width="0.1082%" height="15" fill="rgb(244,35,45)" fg:x="93" fg:w="1"/><text x="10.3149%" y="1087.50"></text></g><g><title>rnpm`filetime::set_file_handle_times (20 samples, 2.16%)</title><rect x="10.1732%" y="1109" width="2.1645%" height="15" fill="rgb(251,115,12)" fg:x="94" fg:w="20"/><text x="10.4232%" y="1119.50">r..</text></g><g><title>rnpm`filetime::imp::macos::set_file_handle_times (20 samples, 2.16%)</title><rect x="10.1732%" y="1093" width="2.1645%" height="15" fill="rgb(240,54,50)" fg:x="94" fg:w="20"/><text x="10.4232%" y="1103.50">r..</text></g><g><title>libsystem_kernel.dylib`fsetattrlist (20 samples, 2.16%)</title><rect x="10.1732%" y="1077" width="2.1645%" height="15" fill="rgb(233,84,52)" fg:x="94" fg:w="20"/><text x="10.4232%" y="1087.50">l..</text></g><g><title>rnpm`__rust_dealloc (1 samples, 0.11%)</title><rect x="12.4459%" y="1093" width="0.1082%" height="15" fill="rgb(207,117,47)" fg:x="115" fg:w="1"/><text x="12.6959%" y="1103.50"></text></g><g><title>rnpm`core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl (1 samples, 0.11%)</title><rect x="12.5541%" y="1093" width="0.1082%" height="15" fill="rgb(249,43,39)" fg:x="116" fg:w="1"/><text x="12.8041%" y="1103.50"></text></g><g><title>rnpm`std::fs::OpenOptions::_open (119 samples, 12.88%)</title><rect x="12.6623%" y="1093" width="12.8788%" height="15" fill="rgb(209,38,44)" fg:x="117" fg:w="119"/><text x="12.9123%" y="1103.50">rnpm`std::fs::OpenO..</text></g><g><title>rnpm`std::sys::unix::fs::File::open_c (119 samples, 12.88%)</title><rect x="12.6623%" y="1077" width="12.8788%" height="15" fill="rgb(236,212,23)" fg:x="117" fg:w="119"/><text x="12.9123%" y="1087.50">rnpm`std::sys::unix..</text></g><g><title>libsystem_kernel.dylib`__open (118 samples, 12.77%)</title><rect x="12.7706%" y="1061" width="12.7706%" height="15" fill="rgb(242,79,21)" fg:x="118" fg:w="118"/><text x="13.0206%" y="1071.50">libsystem_kernel.dy..</text></g><g><title>rnpm`miniz_oxide::inflate::core::decompress (28 samples, 3.03%)</title><rect x="25.5411%" y="981" width="3.0303%" height="15" fill="rgb(211,96,35)" fg:x="236" fg:w="28"/><text x="25.7911%" y="991.50">rnp..</text></g><g><title>rnpm`miniz_oxide::inflate::core::transfer (18 samples, 1.95%)</title><rect x="26.6234%" y="965" width="1.9481%" height="15" fill="rgb(253,215,40)" fg:x="246" fg:w="18"/><text x="26.8734%" y="975.50">r..</text></g><g><title>rnpm`&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (30 samples, 3.25%)</title><rect x="25.5411%" y="1045" width="3.2468%" height="15" fill="rgb(211,81,21)" fg:x="236" fg:w="30"/><text x="25.7911%" y="1055.50">rnp..</text></g><g><title>rnpm`&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (30 samples, 3.25%)</title><rect x="25.5411%" y="1029" width="3.2468%" height="15" fill="rgb(208,190,38)" fg:x="236" fg:w="30"/><text x="25.7911%" y="1039.50">rnp..</text></g><g><title>rnpm`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (30 samples, 3.25%)</title><rect x="25.5411%" y="1013" width="3.2468%" height="15" fill="rgb(235,213,38)" fg:x="236" fg:w="30"/><text x="25.7911%" y="1023.50">rnp..</text></g><g><title>rnpm`miniz_oxide::inflate::stream::inflate (30 samples, 3.25%)</title><rect x="25.5411%" y="997" width="3.2468%" height="15" fill="rgb(237,122,38)" fg:x="236" fg:w="30"/><text x="25.7911%" y="1007.50">rnp..</text></g><g><title>rnpm`miniz_oxide::inflate::core::transfer (2 samples, 0.22%)</title><rect x="28.5714%" y="981" width="0.2165%" height="15" fill="rgb(244,218,35)" fg:x="264" fg:w="2"/><text x="28.8214%" y="991.50"></text></g><g><title>rnpm`&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (32 samples, 3.46%)</title><rect x="25.5411%" y="1077" width="3.4632%" height="15" fill="rgb(240,68,47)" fg:x="236" fg:w="32"/><text x="25.7911%" y="1087.50">rnp..</text></g><g><title>rnpm`&lt;&amp;tar::archive::ArchiveInner&lt;R&gt; as std::io::Read&gt;::read (32 samples, 3.46%)</title><rect x="25.5411%" y="1061" width="3.4632%" height="15" fill="rgb(210,16,53)" fg:x="236" fg:w="32"/><text x="25.7911%" y="1071.50">rnp..</text></g><g><title>rnpm`crc32fast::baseline::State::update (2 samples, 0.22%)</title><rect x="28.7879%" y="1045" width="0.2165%" height="15" fill="rgb(235,124,12)" fg:x="266" fg:w="2"/><text x="29.0379%" y="1055.50"></text></g><g><title>rnpm`std::io::copy::stack_buffer_copy (84 samples, 9.09%)</title><rect x="25.5411%" y="1093" width="9.0909%" height="15" fill="rgb(224,169,11)" fg:x="236" fg:w="84"/><text x="25.7911%" y="1103.50">rnpm`std::io:..</text></g><g><title>rnpm`std::io::Write::write_all (52 samples, 5.63%)</title><rect x="29.0043%" y="1077" width="5.6277%" height="15" fill="rgb(250,166,2)" fg:x="268" fg:w="52"/><text x="29.2543%" y="1087.50">rnpm`st..</text></g><g><title>libsystem_kernel.dylib`write (52 samples, 5.63%)</title><rect x="29.0043%" y="1061" width="5.6277%" height="15" fill="rgb(242,216,29)" fg:x="268" fg:w="52"/><text x="29.2543%" y="1071.50">libsyst..</text></g><g><title>rnpm`tar::entry::EntryFields::unpack::_{{closure}} (348 samples, 37.66%)</title><rect x="12.3377%" y="1109" width="37.6623%" height="15" fill="rgb(230,116,27)" fg:x="114" fg:w="348"/><text x="12.5877%" y="1119.50">rnpm`tar::entry::EntryFields::unpack::_{{closure}}</text></g><g><title>rnpm`std::sys::unix::fs::unlink (142 samples, 15.37%)</title><rect x="34.6320%" y="1093" width="15.3680%" height="15" fill="rgb(228,99,48)" fg:x="320" fg:w="142"/><text x="34.8820%" y="1103.50">rnpm`std::sys::unix::fs:..</text></g><g><title>libsystem_kernel.dylib`__unlink (142 samples, 15.37%)</title><rect x="34.6320%" y="1077" width="15.3680%" height="15" fill="rgb(253,11,6)" fg:x="320" fg:w="142"/><text x="34.8820%" y="1087.50">libsystem_kernel.dylib`_..</text></g><g><title>rnpm`rnpm::artifacts_manager::ArtifactsManager::fetch (425 samples, 46.00%)</title><rect x="6.3853%" y="1141" width="45.9957%" height="15" fill="rgb(247,143,39)" fg:x="59" fg:w="425"/><text x="6.6353%" y="1151.50">rnpm`rnpm::artifacts_manager::ArtifactsManager::fetch</text></g><g><title>rnpm`tar::entry::EntryFields::unpack (390 samples, 42.21%)</title><rect x="10.1732%" y="1125" width="42.2078%" height="15" fill="rgb(236,97,10)" fg:x="94" fg:w="390"/><text x="10.4232%" y="1135.50">rnpm`tar::entry::EntryFields::unpack</text></g><g><title>rnpm`tar::entry::EntryFields::unpack::set_perms (22 samples, 2.38%)</title><rect x="50.0000%" y="1109" width="2.3810%" height="15" fill="rgb(233,208,19)" fg:x="462" fg:w="22"/><text x="50.2500%" y="1119.50">rn..</text></g><g><title>rnpm`std::fs::File::set_permissions (22 samples, 2.38%)</title><rect x="50.0000%" y="1093" width="2.3810%" height="15" fill="rgb(216,164,2)" fg:x="462" fg:w="22"/><text x="50.2500%" y="1103.50">rn..</text></g><g><title>libsystem_kernel.dylib`__fchmod (22 samples, 2.38%)</title><rect x="50.0000%" y="1077" width="2.3810%" height="15" fill="rgb(220,129,5)" fg:x="462" fg:w="22"/><text x="50.2500%" y="1087.50">li..</text></g><g><title>dyld`start (486 samples, 52.60%)</title><rect x="0.0000%" y="1253" width="52.5974%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1263.50">dyld`start</text></g><g><title>rnpm`main (486 samples, 52.60%)</title><rect x="0.0000%" y="1237" width="52.5974%" height="15" fill="rgb(242,107,0)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1247.50">rnpm`main</text></g><g><title>rnpm`std::rt::lang_start_internal (486 samples, 52.60%)</title><rect x="0.0000%" y="1221" width="52.5974%" height="15" fill="rgb(251,28,31)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1231.50">rnpm`std::rt::lang_start_internal</text></g><g><title>rnpm`std::rt::lang_start::_{{closure}} (486 samples, 52.60%)</title><rect x="0.0000%" y="1205" width="52.5974%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1215.50">rnpm`std::rt::lang_start::_{{closure}}</text></g><g><title>rnpm`std::sys_common::backtrace::__rust_begin_short_backtrace (486 samples, 52.60%)</title><rect x="0.0000%" y="1189" width="52.5974%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1199.50">rnpm`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rnpm`rnpm::main (486 samples, 52.60%)</title><rect x="0.0000%" y="1173" width="52.5974%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="486"/><text x="0.2500%" y="1183.50">rnpm`rnpm::main</text></g><g><title>rnpm`rnpm::strategies::npm::NpmStrategy::install (485 samples, 52.49%)</title><rect x="0.1082%" y="1157" width="52.4892%" height="15" fill="rgb(244,5,23)" fg:x="1" fg:w="485"/><text x="0.3582%" y="1167.50">rnpm`rnpm::strategies::npm::NpmStrategy::install</text></g><g><title>rnpm`std::sys::unix::fs::unlink (2 samples, 0.22%)</title><rect x="52.3810%" y="1141" width="0.2165%" height="15" fill="rgb(226,81,46)" fg:x="484" fg:w="2"/><text x="52.6310%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__unlink (2 samples, 0.22%)</title><rect x="52.3810%" y="1125" width="0.2165%" height="15" fill="rgb(247,70,30)" fg:x="484" fg:w="2"/><text x="52.6310%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (1 samples, 0.11%)</title><rect x="52.5974%" y="1253" width="0.1082%" height="15" fill="rgb(212,68,19)" fg:x="486" fg:w="1"/><text x="52.8474%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.11%)</title><rect x="52.7056%" y="1253" width="0.1082%" height="15" fill="rgb(240,187,13)" fg:x="487" fg:w="1"/><text x="52.9556%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.22%)</title><rect x="52.8139%" y="1253" width="0.2165%" height="15" fill="rgb(223,113,26)" fg:x="488" fg:w="2"/><text x="53.0639%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (4 samples, 0.43%)</title><rect x="53.0303%" y="1237" width="0.4329%" height="15" fill="rgb(206,192,2)" fg:x="490" fg:w="4"/><text x="53.2803%" y="1247.50"></text></g><g><title>libxpc.dylib`_xpc_connection_enqueue (1 samples, 0.11%)</title><rect x="53.4632%" y="1077" width="0.1082%" height="15" fill="rgb(241,108,4)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1087.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_async_reply_4libxpc (1 samples, 0.11%)</title><rect x="53.4632%" y="1061" width="0.1082%" height="15" fill="rgb(247,173,49)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.11%)</title><rect x="53.4632%" y="1045" width="0.1082%" height="15" fill="rgb(224,114,35)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.11%)</title><rect x="53.4632%" y="1029" width="0.1082%" height="15" fill="rgb(245,159,27)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.11%)</title><rect x="53.4632%" y="1013" width="0.1082%" height="15" fill="rgb(245,172,44)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.11%)</title><rect x="53.4632%" y="997" width="0.1082%" height="15" fill="rgb(236,23,11)" fg:x="494" fg:w="1"/><text x="53.7132%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (6 samples, 0.65%)</title><rect x="53.0303%" y="1253" width="0.6494%" height="15" fill="rgb(205,117,38)" fg:x="490" fg:w="6"/><text x="53.2803%" y="1263.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (2 samples, 0.22%)</title><rect x="53.4632%" y="1237" width="0.2165%" height="15" fill="rgb(237,72,25)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (2 samples, 0.22%)</title><rect x="53.4632%" y="1221" width="0.2165%" height="15" fill="rgb(244,70,9)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (2 samples, 0.22%)</title><rect x="53.4632%" y="1205" width="0.2165%" height="15" fill="rgb(217,125,39)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1215.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (2 samples, 0.22%)</title><rect x="53.4632%" y="1189" width="0.2165%" height="15" fill="rgb(235,36,10)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.22%)</title><rect x="53.4632%" y="1173" width="0.2165%" height="15" fill="rgb(251,123,47)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_block_async_invoke2 (2 samples, 0.22%)</title><rect x="53.4632%" y="1157" width="0.2165%" height="15" fill="rgb(221,13,13)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1167.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::sendXpcMessage_sync (2 samples, 0.22%)</title><rect x="53.4632%" y="1141" width="0.2165%" height="15" fill="rgb(238,131,9)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1151.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessage_sync (2 samples, 0.22%)</title><rect x="53.4632%" y="1125" width="0.2165%" height="15" fill="rgb(211,50,8)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1135.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessageHelper_sync (2 samples, 0.22%)</title><rect x="53.4632%" y="1109" width="0.2165%" height="15" fill="rgb(245,182,24)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1119.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply (2 samples, 0.22%)</title><rect x="53.4632%" y="1093" width="0.2165%" height="15" fill="rgb(242,14,37)" fg:x="494" fg:w="2"/><text x="53.7132%" y="1103.50"></text></g><g><title>libxpc.dylib`_xpc_connection_pack_message (1 samples, 0.11%)</title><rect x="53.5714%" y="1077" width="0.1082%" height="15" fill="rgb(246,228,12)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1087.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.11%)</title><rect x="53.5714%" y="1061" width="0.1082%" height="15" fill="rgb(213,55,15)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1071.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.11%)</title><rect x="53.5714%" y="1045" width="0.1082%" height="15" fill="rgb(209,9,3)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1055.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.11%)</title><rect x="53.5714%" y="1029" width="0.1082%" height="15" fill="rgb(230,59,30)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1039.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.11%)</title><rect x="53.5714%" y="1013" width="0.1082%" height="15" fill="rgb(209,121,21)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="53.5714%" y="997" width="0.1082%" height="15" fill="rgb(220,109,13)" fg:x="495" fg:w="1"/><text x="53.8214%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.11%)</title><rect x="53.5714%" y="981" width="0.1082%" height="15" fill="rgb(232,18,1)" fg:x="495" fg:w="1"/><text x="53.8214%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__thread_selfid (1 samples, 0.11%)</title><rect x="53.6797%" y="1237" width="0.1082%" height="15" fill="rgb(215,41,42)" fg:x="496" fg:w="1"/><text x="53.9297%" y="1247.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.11%)</title><rect x="53.7879%" y="1205" width="0.1082%" height="15" fill="rgb(224,123,36)" fg:x="497" fg:w="1"/><text x="54.0379%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (1 samples, 0.11%)</title><rect x="53.8961%" y="1189" width="0.1082%" height="15" fill="rgb(240,125,3)" fg:x="498" fg:w="1"/><text x="54.1461%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (2 samples, 0.22%)</title><rect x="53.8961%" y="1205" width="0.2165%" height="15" fill="rgb(205,98,50)" fg:x="498" fg:w="2"/><text x="54.1461%" y="1215.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (1 samples, 0.11%)</title><rect x="54.0043%" y="1189" width="0.1082%" height="15" fill="rgb(205,185,37)" fg:x="499" fg:w="1"/><text x="54.2543%" y="1199.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_destruct_trap (1 samples, 0.11%)</title><rect x="54.0043%" y="1173" width="0.1082%" height="15" fill="rgb(238,207,15)" fg:x="499" fg:w="1"/><text x="54.2543%" y="1183.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (4 samples, 0.43%)</title><rect x="53.7879%" y="1221" width="0.4329%" height="15" fill="rgb(213,199,42)" fg:x="497" fg:w="4"/><text x="54.0379%" y="1231.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (1 samples, 0.11%)</title><rect x="54.1126%" y="1205" width="0.1082%" height="15" fill="rgb(235,201,11)" fg:x="500" fg:w="1"/><text x="54.3626%" y="1215.50"></text></g><g><title>rnpm`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="54.2208%" y="1173" width="0.1082%" height="15" fill="rgb(207,46,11)" fg:x="501" fg:w="1"/><text x="54.4708%" y="1183.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (1 samples, 0.11%)</title><rect x="54.2208%" y="1157" width="0.1082%" height="15" fill="rgb(241,35,35)" fg:x="501" fg:w="1"/><text x="54.4708%" y="1167.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;tokio::util::slab::Page&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (1 samples, 0.11%)</title><rect x="54.2208%" y="1141" width="0.1082%" height="15" fill="rgb(243,32,47)" fg:x="501" fg:w="1"/><text x="54.4708%" y="1151.50"></text></g><g><title> 19]&gt; (1 samples, 0.11%)</title><rect x="54.2208%" y="1125" width="0.1082%" height="15" fill="rgb(247,202,23)" fg:x="501" fg:w="1"/><text x="54.4708%" y="1135.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt; (1 samples, 0.11%)</title><rect x="54.2208%" y="1109" width="0.1082%" height="15" fill="rgb(219,102,11)" fg:x="501" fg:w="1"/><text x="54.4708%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (1 samples, 0.11%)</title><rect x="54.3290%" y="1125" width="0.1082%" height="15" fill="rgb(243,110,44)" fg:x="502" fg:w="1"/><text x="54.5790%" y="1135.50"></text></g><g><title>rnpm`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="54.4372%" y="1109" width="0.1082%" height="15" fill="rgb(222,74,54)" fg:x="503" fg:w="1"/><text x="54.6872%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.11%)</title><rect x="54.5455%" y="1093" width="0.1082%" height="15" fill="rgb(216,99,12)" fg:x="504" fg:w="1"/><text x="54.7955%" y="1103.50"></text></g><g><title>rnpm`std::thread::JoinHandle&lt;T&gt;::join (3 samples, 0.32%)</title><rect x="54.4372%" y="1125" width="0.3247%" height="15" fill="rgb(226,22,26)" fg:x="503" fg:w="3"/><text x="54.6872%" y="1135.50"></text></g><g><title>rnpm`std::sys::unix::thread::Thread::join (2 samples, 0.22%)</title><rect x="54.5455%" y="1109" width="0.2165%" height="15" fill="rgb(217,163,10)" fg:x="504" fg:w="2"/><text x="54.7955%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (1 samples, 0.11%)</title><rect x="54.6537%" y="1093" width="0.1082%" height="15" fill="rgb(213,25,53)" fg:x="505" fg:w="1"/><text x="54.9037%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_deallocate (1 samples, 0.11%)</title><rect x="54.6537%" y="1077" width="0.1082%" height="15" fill="rgb(252,105,26)" fg:x="505" fg:w="1"/><text x="54.9037%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.11%)</title><rect x="54.6537%" y="1061" width="0.1082%" height="15" fill="rgb(220,39,43)" fg:x="505" fg:w="1"/><text x="54.9037%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.11%)</title><rect x="54.7619%" y="1077" width="0.1082%" height="15" fill="rgb(229,68,48)" fg:x="506" fg:w="1"/><text x="55.0119%" y="1087.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (6 samples, 0.65%)</title><rect x="54.3290%" y="1173" width="0.6494%" height="15" fill="rgb(252,8,32)" fg:x="502" fg:w="6"/><text x="54.5790%" y="1183.50"></text></g><g><title>rnpm`&lt;tokio::runtime::blocking::pool::BlockingPool as core::ops::drop::Drop&gt;::drop (6 samples, 0.65%)</title><rect x="54.3290%" y="1157" width="0.6494%" height="15" fill="rgb(223,20,43)" fg:x="502" fg:w="6"/><text x="54.5790%" y="1167.50"></text></g><g><title>rnpm`tokio::runtime::blocking::pool::BlockingPool::shutdown (6 samples, 0.65%)</title><rect x="54.3290%" y="1141" width="0.6494%" height="15" fill="rgb(229,81,49)" fg:x="502" fg:w="6"/><text x="54.5790%" y="1151.50"></text></g><g><title>rnpm`tokio::runtime::blocking::shutdown::Receiver::wait (2 samples, 0.22%)</title><rect x="54.7619%" y="1125" width="0.2165%" height="15" fill="rgb(236,28,36)" fg:x="506" fg:w="2"/><text x="55.0119%" y="1135.50"></text></g><g><title>rnpm`tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.22%)</title><rect x="54.7619%" y="1109" width="0.2165%" height="15" fill="rgb(249,185,26)" fg:x="506" fg:w="2"/><text x="55.0119%" y="1119.50"></text></g><g><title>rnpm`tokio::runtime::park::Inner::park (2 samples, 0.22%)</title><rect x="54.7619%" y="1093" width="0.2165%" height="15" fill="rgb(249,174,33)" fg:x="506" fg:w="2"/><text x="55.0119%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.11%)</title><rect x="54.8701%" y="1077" width="0.1082%" height="15" fill="rgb(233,201,37)" fg:x="507" fg:w="1"/><text x="55.1201%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.11%)</title><rect x="54.8701%" y="1061" width="0.1082%" height="15" fill="rgb(221,78,26)" fg:x="507" fg:w="1"/><text x="55.1201%" y="1071.50"></text></g><g><title>rnpm`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.11%)</title><rect x="54.9784%" y="1141" width="0.1082%" height="15" fill="rgb(250,127,30)" fg:x="508" fg:w="1"/><text x="55.2284%" y="1151.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::client::dispatch::Receiver&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="55.0866%" y="1029" width="0.1082%" height="15" fill="rgb(230,49,44)" fg:x="509" fg:w="1"/><text x="55.3366%" y="1039.50"></text></g><g><title>rnpm`tokio::sync::notify::Notify::notify_waiters (1 samples, 0.11%)</title><rect x="55.0866%" y="1013" width="0.1082%" height="15" fill="rgb(229,67,23)" fg:x="509" fg:w="1"/><text x="55.3366%" y="1023.50"></text></g><g><title>rnpm`&lt;std::sys::unix::locks::pthread_mutex::Mutex as std::sys_common::lazy_box::LazyInit&gt;::init (1 samples, 0.11%)</title><rect x="55.0866%" y="997" width="0.1082%" height="15" fill="rgb(249,83,47)" fg:x="509" fg:w="1"/><text x="55.3366%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.11%)</title><rect x="55.0866%" y="981" width="0.1082%" height="15" fill="rgb(215,43,3)" fg:x="509" fg:w="1"/><text x="55.3366%" y="991.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="55.1948%" y="965" width="0.1082%" height="15" fill="rgb(238,154,13)" fg:x="510" fg:w="1"/><text x="55.4448%" y="975.50"></text></g><g><title>Security`SecTrustDestroy (1 samples, 0.11%)</title><rect x="55.1948%" y="949" width="0.1082%" height="15" fill="rgb(219,56,2)" fg:x="510" fg:w="1"/><text x="55.4448%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.11%)</title><rect x="55.1948%" y="933" width="0.1082%" height="15" fill="rgb(233,0,4)" fg:x="510" fg:w="1"/><text x="55.4448%" y="943.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.11%)</title><rect x="55.1948%" y="917" width="0.1082%" height="15" fill="rgb(235,30,7)" fg:x="510" fg:w="1"/><text x="55.4448%" y="927.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="55.1948%" y="901" width="0.1082%" height="15" fill="rgb(250,79,13)" fg:x="510" fg:w="1"/><text x="55.4448%" y="911.50"></text></g><g><title>Security`SecCertificateDestroy (1 samples, 0.11%)</title><rect x="55.1948%" y="885" width="0.1082%" height="15" fill="rgb(211,146,34)" fg:x="510" fg:w="1"/><text x="55.4448%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.11%)</title><rect x="55.1948%" y="869" width="0.1082%" height="15" fill="rgb(228,22,38)" fg:x="510" fg:w="1"/><text x="55.4448%" y="879.50"></text></g><g><title>libcoretls.dylib`tls_cache_cleanup (1 samples, 0.11%)</title><rect x="55.3030%" y="965" width="0.1082%" height="15" fill="rgb(235,168,5)" fg:x="511" fg:w="1"/><text x="55.5530%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.11%)</title><rect x="55.3030%" y="949" width="0.1082%" height="15" fill="rgb(221,155,16)" fg:x="511" fg:w="1"/><text x="55.5530%" y="959.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.32%)</title><rect x="55.1948%" y="997" width="0.3247%" height="15" fill="rgb(215,215,53)" fg:x="510" fg:w="3"/><text x="55.4448%" y="1007.50"></text></g><g><title>Security`SSLContextDestroy (3 samples, 0.32%)</title><rect x="55.1948%" y="981" width="0.3247%" height="15" fill="rgb(223,4,10)" fg:x="510" fg:w="3"/><text x="55.4448%" y="991.50"></text></g><g><title>libcoretls.dylib`tls_handshake_destroy (1 samples, 0.11%)</title><rect x="55.4113%" y="965" width="0.1082%" height="15" fill="rgb(234,103,6)" fg:x="512" fg:w="1"/><text x="55.6613%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.11%)</title><rect x="55.4113%" y="949" width="0.1082%" height="15" fill="rgb(227,97,0)" fg:x="512" fg:w="1"/><text x="55.6613%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`close (11 samples, 1.19%)</title><rect x="55.5195%" y="981" width="1.1905%" height="15" fill="rgb(234,150,53)" fg:x="513" fg:w="11"/><text x="55.7695%" y="991.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (17 samples, 1.84%)</title><rect x="54.9784%" y="1173" width="1.8398%" height="15" fill="rgb(228,201,54)" fg:x="508" fg:w="17"/><text x="55.2284%" y="1183.50">r..</text></g><g><title>rnpm`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (17 samples, 1.84%)</title><rect x="54.9784%" y="1157" width="1.8398%" height="15" fill="rgb(222,22,37)" fg:x="508" fg:w="17"/><text x="55.2284%" y="1167.50">r..</text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::CurrentThread::shutdown (16 samples, 1.73%)</title><rect x="55.0866%" y="1141" width="1.7316%" height="15" fill="rgb(237,53,32)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1151.50"></text></g><g><title>rnpm`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (16 samples, 1.73%)</title><rect x="55.0866%" y="1125" width="1.7316%" height="15" fill="rgb(233,25,53)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1135.50"></text></g><g><title>rnpm`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (16 samples, 1.73%)</title><rect x="55.0866%" y="1109" width="1.7316%" height="15" fill="rgb(210,40,34)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1119.50"></text></g><g><title>rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (16 samples, 1.73%)</title><rect x="55.0866%" y="1093" width="1.7316%" height="15" fill="rgb(241,220,44)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1103.50"></text></g><g><title>rnpm`std::panicking::try (16 samples, 1.73%)</title><rect x="55.0866%" y="1077" width="1.7316%" height="15" fill="rgb(235,28,35)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1087.50"></text></g><g><title>rnpm`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 1.73%)</title><rect x="55.0866%" y="1061" width="1.7316%" height="15" fill="rgb(210,56,17)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1071.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::client::conn::ProtoClient&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt; (16 samples, 1.73%)</title><rect x="55.0866%" y="1045" width="1.7316%" height="15" fill="rgb(224,130,29)" fg:x="509" fg:w="16"/><text x="55.3366%" y="1055.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::proto::h1::conn::Conn&lt;reqwest::connect::Conn,bytes::bytes::Bytes,hyper::proto::h1::role::Client&gt;&gt; (15 samples, 1.62%)</title><rect x="55.1948%" y="1029" width="1.6234%" height="15" fill="rgb(235,212,8)" fg:x="510" fg:w="15"/><text x="55.4448%" y="1039.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (15 samples, 1.62%)</title><rect x="55.1948%" y="1013" width="1.6234%" height="15" fill="rgb(223,33,50)" fg:x="510" fg:w="15"/><text x="55.4448%" y="1023.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;security_framework::secure_transport::Connection&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (12 samples, 1.30%)</title><rect x="55.5195%" y="997" width="1.2987%" height="15" fill="rgb(219,149,13)" fg:x="513" fg:w="12"/><text x="55.7695%" y="1007.50"></text></g><g><title>rnpm`&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="56.7100%" y="981" width="0.1082%" height="15" fill="rgb(250,156,29)" fg:x="524" fg:w="1"/><text x="56.9600%" y="991.50"></text></g><g><title>rnpm`&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (1 samples, 0.11%)</title><rect x="56.7100%" y="965" width="0.1082%" height="15" fill="rgb(216,193,19)" fg:x="524" fg:w="1"/><text x="56.9600%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="56.7100%" y="949" width="0.1082%" height="15" fill="rgb(216,135,14)" fg:x="524" fg:w="1"/><text x="56.9600%" y="959.50"></text></g><g><title>rnpm`std::sys::unix::locks::pthread_condvar::Condvar::wait_timeout (1 samples, 0.11%)</title><rect x="56.8182%" y="1157" width="0.1082%" height="15" fill="rgb(241,47,5)" fg:x="525" fg:w="1"/><text x="57.0682%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.11%)</title><rect x="56.8182%" y="1141" width="0.1082%" height="15" fill="rgb(233,42,35)" fg:x="525" fg:w="1"/><text x="57.0682%" y="1151.50"></text></g><g><title>rnpm`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.11%)</title><rect x="56.9264%" y="1141" width="0.1082%" height="15" fill="rgb(231,13,6)" fg:x="526" fg:w="1"/><text x="57.1764%" y="1151.50"></text></g><g><title>libsystem_c.dylib`_inet_aton_check (1 samples, 0.11%)</title><rect x="57.0346%" y="1061" width="0.1082%" height="15" fill="rgb(207,181,40)" fg:x="527" fg:w="1"/><text x="57.2846%" y="1071.50"></text></g><g><title>Network`-[NWConcrete_nw_path_evaluator .cxx_destruct] (1 samples, 0.11%)</title><rect x="57.1429%" y="965" width="0.1082%" height="15" fill="rgb(254,173,49)" fg:x="528" fg:w="1"/><text x="57.3929%" y="975.50"></text></g><g><title>Network`-[NWConcrete_nw_path dealloc] (1 samples, 0.11%)</title><rect x="57.1429%" y="949" width="0.1082%" height="15" fill="rgb(221,1,38)" fg:x="528" fg:w="1"/><text x="57.3929%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.11%)</title><rect x="57.1429%" y="933" width="0.1082%" height="15" fill="rgb(206,124,46)" fg:x="528" fg:w="1"/><text x="57.3929%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.11%)</title><rect x="57.1429%" y="917" width="0.1082%" height="15" fill="rgb(249,21,11)" fg:x="528" fg:w="1"/><text x="57.3929%" y="927.50"></text></g><g><title>Network`-[NWConcrete_nw_path_evaluator dealloc] (2 samples, 0.22%)</title><rect x="57.1429%" y="1029" width="0.2165%" height="15" fill="rgb(222,201,40)" fg:x="528" fg:w="2"/><text x="57.3929%" y="1039.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.22%)</title><rect x="57.1429%" y="1013" width="0.2165%" height="15" fill="rgb(235,61,29)" fg:x="528" fg:w="2"/><text x="57.3929%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.22%)</title><rect x="57.1429%" y="997" width="0.2165%" height="15" fill="rgb(219,207,3)" fg:x="528" fg:w="2"/><text x="57.3929%" y="1007.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (2 samples, 0.22%)</title><rect x="57.1429%" y="981" width="0.2165%" height="15" fill="rgb(222,56,46)" fg:x="528" fg:w="2"/><text x="57.3929%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (1 samples, 0.11%)</title><rect x="57.2511%" y="965" width="0.1082%" height="15" fill="rgb(239,76,54)" fg:x="529" fg:w="1"/><text x="57.5011%" y="975.50"></text></g><g><title>Network`DYLD-STUB$$objc_release (1 samples, 0.11%)</title><rect x="57.3593%" y="1013" width="0.1082%" height="15" fill="rgb(231,124,27)" fg:x="530" fg:w="1"/><text x="57.6093%" y="1023.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint_no_evaluate (2 samples, 0.22%)</title><rect x="57.4675%" y="1013" width="0.2165%" height="15" fill="rgb(249,195,6)" fg:x="531" fg:w="2"/><text x="57.7175%" y="1023.50"></text></g><g><title>Network`-[NWConcrete_nw_parameters initWithStack:] (2 samples, 0.22%)</title><rect x="57.4675%" y="997" width="0.2165%" height="15" fill="rgb(237,174,47)" fg:x="531" fg:w="2"/><text x="57.7175%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (2 samples, 0.22%)</title><rect x="57.4675%" y="981" width="0.2165%" height="15" fill="rgb(206,201,31)" fg:x="531" fg:w="2"/><text x="57.7175%" y="991.50"></text></g><g><title>Network`nw_parameters_copy_avoided_netagent_uuids (1 samples, 0.11%)</title><rect x="57.6840%" y="997" width="0.1082%" height="15" fill="rgb(231,57,52)" fg:x="533" fg:w="1"/><text x="57.9340%" y="1007.50"></text></g><g><title>Network`nw_parameters_get_delegated_unique_pid (1 samples, 0.11%)</title><rect x="57.7922%" y="997" width="0.1082%" height="15" fill="rgb(248,177,22)" fg:x="534" fg:w="1"/><text x="58.0422%" y="1007.50"></text></g><g><title>Network`nw_parameters_get_use_p2p (1 samples, 0.11%)</title><rect x="57.9004%" y="997" width="0.1082%" height="15" fill="rgb(215,211,37)" fg:x="535" fg:w="1"/><text x="58.1504%" y="1007.50"></text></g><g><title>Network`nw_path_create_necp_parameters (3 samples, 0.32%)</title><rect x="58.0087%" y="997" width="0.3247%" height="15" fill="rgb(241,128,51)" fg:x="536" fg:w="3"/><text x="58.2587%" y="1007.50"></text></g><g><title>Network`nw_path_parse_necp_result (2 samples, 0.22%)</title><rect x="58.3333%" y="997" width="0.2165%" height="15" fill="rgb(227,165,31)" fg:x="539" fg:w="2"/><text x="58.5833%" y="1007.50"></text></g><g><title>Network`nw_array_create (1 samples, 0.11%)</title><rect x="58.4416%" y="981" width="0.1082%" height="15" fill="rgb(228,167,24)" fg:x="540" fg:w="1"/><text x="58.6916%" y="991.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc (1 samples, 0.11%)</title><rect x="58.4416%" y="965" width="0.1082%" height="15" fill="rgb(228,143,12)" fg:x="540" fg:w="1"/><text x="58.6916%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.11%)</title><rect x="58.4416%" y="949" width="0.1082%" height="15" fill="rgb(249,149,8)" fg:x="540" fg:w="1"/><text x="58.6916%" y="959.50"></text></g><g><title>Network`nw_path_network_is_satisfied_update_reason (1 samples, 0.11%)</title><rect x="58.5498%" y="981" width="0.1082%" height="15" fill="rgb(243,35,44)" fg:x="541" fg:w="1"/><text x="58.7998%" y="991.50"></text></g><g><title>Network`nw_path_uses_nexus_internal (1 samples, 0.11%)</title><rect x="58.5498%" y="965" width="0.1082%" height="15" fill="rgb(246,89,9)" fg:x="541" fg:w="1"/><text x="58.7998%" y="975.50"></text></g><g><title>Network`nw_path_get_nexus_agent (1 samples, 0.11%)</title><rect x="58.5498%" y="949" width="0.1082%" height="15" fill="rgb(233,213,13)" fg:x="541" fg:w="1"/><text x="58.7998%" y="959.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.11%)</title><rect x="58.5498%" y="933" width="0.1082%" height="15" fill="rgb(233,141,41)" fg:x="541" fg:w="1"/><text x="58.7998%" y="943.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.11%)</title><rect x="58.5498%" y="917" width="0.1082%" height="15" fill="rgb(239,167,4)" fg:x="541" fg:w="1"/><text x="58.7998%" y="927.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (1 samples, 0.11%)</title><rect x="58.5498%" y="901" width="0.1082%" height="15" fill="rgb(209,217,16)" fg:x="541" fg:w="1"/><text x="58.7998%" y="911.50"></text></g><g><title>Network`__nw_path_get_nexus_agent_block_invoke (1 samples, 0.11%)</title><rect x="58.5498%" y="885" width="0.1082%" height="15" fill="rgb(219,88,35)" fg:x="541" fg:w="1"/><text x="58.7998%" y="895.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_data (1 samples, 0.11%)</title><rect x="58.5498%" y="869" width="0.1082%" height="15" fill="rgb(220,193,23)" fg:x="541" fg:w="1"/><text x="58.7998%" y="879.50"></text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 0.11%)</title><rect x="58.5498%" y="853" width="0.1082%" height="15" fill="rgb(230,90,52)" fg:x="541" fg:w="1"/><text x="58.7998%" y="863.50"></text></g><g><title>Network`nw_path_snapshot_path (2 samples, 0.22%)</title><rect x="58.5498%" y="997" width="0.2165%" height="15" fill="rgb(252,106,19)" fg:x="541" fg:w="2"/><text x="58.7998%" y="1007.50"></text></g><g><title>Network`nw_path_snapshot_fallback (1 samples, 0.11%)</title><rect x="58.6580%" y="981" width="0.1082%" height="15" fill="rgb(206,74,20)" fg:x="542" fg:w="1"/><text x="58.9080%" y="991.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.11%)</title><rect x="58.6580%" y="965" width="0.1082%" height="15" fill="rgb(230,138,44)" fg:x="542" fg:w="1"/><text x="58.9080%" y="975.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.11%)</title><rect x="58.6580%" y="949" width="0.1082%" height="15" fill="rgb(235,182,43)" fg:x="542" fg:w="1"/><text x="58.9080%" y="959.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (1 samples, 0.11%)</title><rect x="58.6580%" y="933" width="0.1082%" height="15" fill="rgb(242,16,51)" fg:x="542" fg:w="1"/><text x="58.9080%" y="943.50"></text></g><g><title>Network`__nw_path_snapshot_fallback_block_invoke (1 samples, 0.11%)</title><rect x="58.6580%" y="917" width="0.1082%" height="15" fill="rgb(248,9,4)" fg:x="542" fg:w="1"/><text x="58.9080%" y="927.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_data (1 samples, 0.11%)</title><rect x="58.6580%" y="901" width="0.1082%" height="15" fill="rgb(210,31,22)" fg:x="542" fg:w="1"/><text x="58.9080%" y="911.50"></text></g><g><title>libxpc.dylib`xpc_data_get_bytes_ptr_and_length (1 samples, 0.11%)</title><rect x="58.6580%" y="885" width="0.1082%" height="15" fill="rgb(239,54,39)" fg:x="542" fg:w="1"/><text x="58.9080%" y="895.50"></text></g><g><title>libxpc.dylib`_xpc_data_map (1 samples, 0.11%)</title><rect x="58.6580%" y="869" width="0.1082%" height="15" fill="rgb(230,99,41)" fg:x="542" fg:w="1"/><text x="58.9080%" y="879.50"></text></g><g><title>Network`nw_path_evaluator_evaluate (11 samples, 1.19%)</title><rect x="57.6840%" y="1013" width="1.1905%" height="15" fill="rgb(253,106,12)" fg:x="533" fg:w="11"/><text x="57.9340%" y="1023.50"></text></g><g><title>libsystem_c.dylib`uuid_is_null (1 samples, 0.11%)</title><rect x="58.7662%" y="997" width="0.1082%" height="15" fill="rgb(213,46,41)" fg:x="543" fg:w="1"/><text x="59.0162%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.11%)</title><rect x="58.8745%" y="1013" width="0.1082%" height="15" fill="rgb(215,133,35)" fg:x="544" fg:w="1"/><text x="59.1245%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.11%)</title><rect x="58.9827%" y="1013" width="0.1082%" height="15" fill="rgb(213,28,5)" fg:x="545" fg:w="1"/><text x="59.2327%" y="1023.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint (29 samples, 3.14%)</title><rect x="57.3593%" y="1029" width="3.1385%" height="15" fill="rgb(215,77,49)" fg:x="530" fg:w="29"/><text x="57.6093%" y="1039.50">Net..</text></g><g><title>libsystem_kernel.dylib`necp_client_action (13 samples, 1.41%)</title><rect x="59.0909%" y="1013" width="1.4069%" height="15" fill="rgb(248,100,22)" fg:x="546" fg:w="13"/><text x="59.3409%" y="1023.50"></text></g><g><title>Network`nw_nat64_v4_address_requires_synthesis (33 samples, 3.57%)</title><rect x="57.1429%" y="1045" width="3.5714%" height="15" fill="rgb(208,67,9)" fg:x="528" fg:w="33"/><text x="57.3929%" y="1055.50">Netw..</text></g><g><title>libsystem_kernel.dylib`necp_client_action (2 samples, 0.22%)</title><rect x="60.4978%" y="1029" width="0.2165%" height="15" fill="rgb(219,133,21)" fg:x="559" fg:w="2"/><text x="60.7478%" y="1039.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.11%)</title><rect x="60.7143%" y="1045" width="0.1082%" height="15" fill="rgb(246,46,29)" fg:x="561" fg:w="1"/><text x="60.9643%" y="1055.50"></text></g><g><title>libsystem_c.dylib`_qsort (1 samples, 0.11%)</title><rect x="60.7143%" y="1029" width="0.1082%" height="15" fill="rgb(246,185,52)" fg:x="561" fg:w="1"/><text x="60.9643%" y="1039.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.11%)</title><rect x="60.7143%" y="1013" width="0.1082%" height="15" fill="rgb(252,136,11)" fg:x="561" fg:w="1"/><text x="60.9643%" y="1023.50"></text></g><g><title>libsystem_info.dylib`si_destination_lookup (1 samples, 0.11%)</title><rect x="60.7143%" y="997" width="0.1082%" height="15" fill="rgb(219,138,53)" fg:x="561" fg:w="1"/><text x="60.9643%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (1 samples, 0.11%)</title><rect x="60.7143%" y="981" width="0.1082%" height="15" fill="rgb(211,51,23)" fg:x="561" fg:w="1"/><text x="60.9643%" y="991.50"></text></g><g><title>libsystem_info.dylib`_mdns_hostent_append_alias (1 samples, 0.11%)</title><rect x="60.8225%" y="949" width="0.1082%" height="15" fill="rgb(247,221,28)" fg:x="562" fg:w="1"/><text x="61.0725%" y="959.50"></text></g><g><title>libsystem_c.dylib`strdup (1 samples, 0.11%)</title><rect x="60.8225%" y="933" width="0.1082%" height="15" fill="rgb(251,222,45)" fg:x="562" fg:w="1"/><text x="61.0725%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="60.9307%" y="949" width="0.1082%" height="15" fill="rgb(217,162,53)" fg:x="563" fg:w="1"/><text x="61.1807%" y="959.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_callback (3 samples, 0.32%)</title><rect x="60.8225%" y="965" width="0.3247%" height="15" fill="rgb(229,93,14)" fg:x="562" fg:w="3"/><text x="61.0725%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.11%)</title><rect x="61.0390%" y="949" width="0.1082%" height="15" fill="rgb(209,67,49)" fg:x="564" fg:w="1"/><text x="61.2890%" y="959.50"></text></g><g><title>libsystem_dnssd.dylib`handle_query_response (4 samples, 0.43%)</title><rect x="60.8225%" y="981" width="0.4329%" height="15" fill="rgb(213,87,29)" fg:x="562" fg:w="4"/><text x="61.0725%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="61.1472%" y="965" width="0.1082%" height="15" fill="rgb(205,151,52)" fg:x="565" fg:w="1"/><text x="61.3972%" y="975.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceProcessResult (11 samples, 1.19%)</title><rect x="60.8225%" y="997" width="1.1905%" height="15" fill="rgb(253,215,39)" fg:x="562" fg:w="11"/><text x="61.0725%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (7 samples, 0.76%)</title><rect x="61.2554%" y="981" width="0.7576%" height="15" fill="rgb(221,220,41)" fg:x="566" fg:w="7"/><text x="61.5054%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (2 samples, 0.22%)</title><rect x="62.0130%" y="965" width="0.2165%" height="15" fill="rgb(218,133,21)" fg:x="573" fg:w="2"/><text x="62.2630%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (4 samples, 0.43%)</title><rect x="62.2294%" y="965" width="0.4329%" height="15" fill="rgb(221,193,43)" fg:x="575" fg:w="4"/><text x="62.4794%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__sendmsg_nocancel (1 samples, 0.11%)</title><rect x="62.6623%" y="965" width="0.1082%" height="15" fill="rgb(240,128,52)" fg:x="579" fg:w="1"/><text x="62.9123%" y="975.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (9 samples, 0.97%)</title><rect x="62.0130%" y="997" width="0.9740%" height="15" fill="rgb(253,114,12)" fg:x="573" fg:w="9"/><text x="62.2630%" y="1007.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecordInternal (9 samples, 0.97%)</title><rect x="62.0130%" y="981" width="0.9740%" height="15" fill="rgb(215,223,47)" fg:x="573" fg:w="9"/><text x="62.2630%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__socketpair (2 samples, 0.22%)</title><rect x="62.7706%" y="965" width="0.2165%" height="15" fill="rgb(248,225,23)" fg:x="580" fg:w="2"/><text x="63.0206%" y="975.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (55 samples, 5.95%)</title><rect x="57.1429%" y="1061" width="5.9524%" height="15" fill="rgb(250,108,0)" fg:x="528" fg:w="55"/><text x="57.3929%" y="1071.50">libsyste..</text></g><g><title>libsystem_info.dylib`search_addrinfo (21 samples, 2.27%)</title><rect x="60.8225%" y="1045" width="2.2727%" height="15" fill="rgb(228,208,7)" fg:x="562" fg:w="21"/><text x="61.0725%" y="1055.50">l..</text></g><g><title>libsystem_info.dylib`mdns_addrinfo (21 samples, 2.27%)</title><rect x="60.8225%" y="1029" width="2.2727%" height="15" fill="rgb(244,45,10)" fg:x="562" fg:w="21"/><text x="61.0725%" y="1039.50">l..</text></g><g><title>libsystem_info.dylib`_mdns_search_ex (21 samples, 2.27%)</title><rect x="60.8225%" y="1013" width="2.2727%" height="15" fill="rgb(207,125,25)" fg:x="562" fg:w="21"/><text x="61.0725%" y="1023.50">l..</text></g><g><title>libsystem_kernel.dylib`__select_nocancel (1 samples, 0.11%)</title><rect x="62.9870%" y="997" width="0.1082%" height="15" fill="rgb(210,195,18)" fg:x="582" fg:w="1"/><text x="63.2370%" y="1007.50"></text></g><g><title>rnpm`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (57 samples, 6.17%)</title><rect x="57.0346%" y="1141" width="6.1688%" height="15" fill="rgb(249,80,12)" fg:x="527" fg:w="57"/><text x="57.2846%" y="1151.50">rnpm`tok..</text></g><g><title>rnpm`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 6.17%)</title><rect x="57.0346%" y="1125" width="6.1688%" height="15" fill="rgb(221,65,9)" fg:x="527" fg:w="57"/><text x="57.2846%" y="1135.50">rnpm`&lt;to..</text></g><g><title>rnpm`&lt;(&amp;str,u16) as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (57 samples, 6.17%)</title><rect x="57.0346%" y="1109" width="6.1688%" height="15" fill="rgb(235,49,36)" fg:x="527" fg:w="57"/><text x="57.2846%" y="1119.50">rnpm`&lt;(&amp;..</text></g><g><title>rnpm`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (57 samples, 6.17%)</title><rect x="57.0346%" y="1093" width="6.1688%" height="15" fill="rgb(225,32,20)" fg:x="527" fg:w="57"/><text x="57.2846%" y="1103.50">rnpm`&lt;st..</text></g><g><title>libsystem_info.dylib`getaddrinfo (57 samples, 6.17%)</title><rect x="57.0346%" y="1077" width="6.1688%" height="15" fill="rgb(215,141,46)" fg:x="527" fg:w="57"/><text x="57.2846%" y="1087.50">libsyste..</text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.11%)</title><rect x="63.0952%" y="1061" width="0.1082%" height="15" fill="rgb(250,160,47)" fg:x="583" fg:w="1"/><text x="63.3452%" y="1071.50"></text></g><g><title>libsystem_info.dylib`si_module_static_search (1 samples, 0.11%)</title><rect x="63.0952%" y="1045" width="0.1082%" height="15" fill="rgb(216,222,40)" fg:x="583" fg:w="1"/><text x="63.3452%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="1029" width="0.1082%" height="15" fill="rgb(234,217,39)" fg:x="583" fg:w="1"/><text x="63.3452%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="1013" width="0.1082%" height="15" fill="rgb(207,178,40)" fg:x="583" fg:w="1"/><text x="63.3452%" y="1023.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_search_block_invoke (1 samples, 0.11%)</title><rect x="63.0952%" y="997" width="0.1082%" height="15" fill="rgb(221,136,13)" fg:x="583" fg:w="1"/><text x="63.3452%" y="1007.50"></text></g><g><title>libsystem_info.dylib`si_module_config_modules_for_category (1 samples, 0.11%)</title><rect x="63.0952%" y="981" width="0.1082%" height="15" fill="rgb(249,199,10)" fg:x="583" fg:w="1"/><text x="63.3452%" y="991.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.11%)</title><rect x="63.0952%" y="965" width="0.1082%" height="15" fill="rgb(249,222,13)" fg:x="583" fg:w="1"/><text x="63.3452%" y="975.50"></text></g><g><title>libsystem_info.dylib`si_module_static_ds (1 samples, 0.11%)</title><rect x="63.0952%" y="949" width="0.1082%" height="15" fill="rgb(244,185,38)" fg:x="583" fg:w="1"/><text x="63.3452%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="933" width="0.1082%" height="15" fill="rgb(236,202,9)" fg:x="583" fg:w="1"/><text x="63.3452%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="917" width="0.1082%" height="15" fill="rgb(250,229,37)" fg:x="583" fg:w="1"/><text x="63.3452%" y="927.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_ds_block_invoke (1 samples, 0.11%)</title><rect x="63.0952%" y="901" width="0.1082%" height="15" fill="rgb(206,174,23)" fg:x="583" fg:w="1"/><text x="63.3452%" y="911.50"></text></g><g><title>libsystem_notify.dylib`notify_register_check (1 samples, 0.11%)</title><rect x="63.0952%" y="885" width="0.1082%" height="15" fill="rgb(211,33,43)" fg:x="583" fg:w="1"/><text x="63.3452%" y="895.50"></text></g><g><title>libsystem_notify.dylib`0x00000001a67a134c (1 samples, 0.11%)</title><rect x="63.0952%" y="869" width="0.1082%" height="15" fill="rgb(245,58,50)" fg:x="583" fg:w="1"/><text x="63.3452%" y="879.50"></text></g><g><title>libsystem_notify.dylib`0x00000001a67a2a88 (1 samples, 0.11%)</title><rect x="63.0952%" y="853" width="0.1082%" height="15" fill="rgb(244,68,36)" fg:x="583" fg:w="1"/><text x="63.3452%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="837" width="0.1082%" height="15" fill="rgb(232,229,15)" fg:x="583" fg:w="1"/><text x="63.3452%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="63.0952%" y="821" width="0.1082%" height="15" fill="rgb(254,30,23)" fg:x="583" fg:w="1"/><text x="63.3452%" y="831.50"></text></g><g><title>libsystem_notify.dylib`0x00000001a67a36f4 (1 samples, 0.11%)</title><rect x="63.0952%" y="805" width="0.1082%" height="15" fill="rgb(235,160,14)" fg:x="583" fg:w="1"/><text x="63.3452%" y="815.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up2 (1 samples, 0.11%)</title><rect x="63.0952%" y="789" width="0.1082%" height="15" fill="rgb(212,155,44)" fg:x="583" fg:w="1"/><text x="63.3452%" y="799.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up3 (1 samples, 0.11%)</title><rect x="63.0952%" y="773" width="0.1082%" height="15" fill="rgb(226,2,50)" fg:x="583" fg:w="1"/><text x="63.3452%" y="783.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.11%)</title><rect x="63.0952%" y="757" width="0.1082%" height="15" fill="rgb(234,177,6)" fg:x="583" fg:w="1"/><text x="63.3452%" y="767.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.11%)</title><rect x="63.0952%" y="741" width="0.1082%" height="15" fill="rgb(217,24,9)" fg:x="583" fg:w="1"/><text x="63.3452%" y="751.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (1 samples, 0.11%)</title><rect x="63.0952%" y="725" width="0.1082%" height="15" fill="rgb(220,13,46)" fg:x="583" fg:w="1"/><text x="63.3452%" y="735.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.11%)</title><rect x="63.0952%" y="709" width="0.1082%" height="15" fill="rgb(239,221,27)" fg:x="583" fg:w="1"/><text x="63.3452%" y="719.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.11%)</title><rect x="63.0952%" y="693" width="0.1082%" height="15" fill="rgb(222,198,25)" fg:x="583" fg:w="1"/><text x="63.3452%" y="703.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.11%)</title><rect x="63.0952%" y="677" width="0.1082%" height="15" fill="rgb(211,99,13)" fg:x="583" fg:w="1"/><text x="63.3452%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.11%)</title><rect x="63.0952%" y="661" width="0.1082%" height="15" fill="rgb(232,111,31)" fg:x="583" fg:w="1"/><text x="63.3452%" y="671.50"></text></g><g><title>rnpm`tokio::runtime::blocking::pool::Inner::run (60 samples, 6.49%)</title><rect x="56.8182%" y="1173" width="6.4935%" height="15" fill="rgb(245,82,37)" fg:x="525" fg:w="60"/><text x="57.0682%" y="1183.50">rnpm`toki..</text></g><g><title>rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (59 samples, 6.39%)</title><rect x="56.9264%" y="1157" width="6.3853%" height="15" fill="rgb(227,149,46)" fg:x="526" fg:w="59"/><text x="57.1764%" y="1167.50">rnpm`tok..</text></g><g><title>rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.11%)</title><rect x="63.2035%" y="1141" width="0.1082%" height="15" fill="rgb(218,36,50)" fg:x="584" fg:w="1"/><text x="63.4535%" y="1151.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1 samples, 0.11%)</title><rect x="63.2035%" y="1125" width="0.1082%" height="15" fill="rgb(226,80,48)" fg:x="584" fg:w="1"/><text x="63.4535%" y="1135.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (1 samples, 0.11%)</title><rect x="63.2035%" y="1109" width="0.1082%" height="15" fill="rgb(238,224,15)" fg:x="584" fg:w="1"/><text x="63.4535%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="63.2035%" y="1093" width="0.1082%" height="15" fill="rgb(241,136,10)" fg:x="584" fg:w="1"/><text x="63.4535%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="63.3117%" y="1109" width="0.1082%" height="15" fill="rgb(208,32,45)" fg:x="585" fg:w="1"/><text x="63.5617%" y="1119.50"></text></g><g><title>rnpm`tokio::runtime::builder::Builder::build (2 samples, 0.22%)</title><rect x="63.3117%" y="1173" width="0.2165%" height="15" fill="rgb(207,135,9)" fg:x="585" fg:w="2"/><text x="63.5617%" y="1183.50"></text></g><g><title>rnpm`tokio::runtime::driver::Driver::new (2 samples, 0.22%)</title><rect x="63.3117%" y="1157" width="0.2165%" height="15" fill="rgb(206,86,44)" fg:x="585" fg:w="2"/><text x="63.5617%" y="1167.50"></text></g><g><title>rnpm`tokio::runtime::io::Driver::new (2 samples, 0.22%)</title><rect x="63.3117%" y="1141" width="0.2165%" height="15" fill="rgb(245,177,15)" fg:x="585" fg:w="2"/><text x="63.5617%" y="1151.50"></text></g><g><title>rnpm`mio::waker::Waker::new (2 samples, 0.22%)</title><rect x="63.3117%" y="1125" width="0.2165%" height="15" fill="rgb(206,64,50)" fg:x="585" fg:w="2"/><text x="63.5617%" y="1135.50"></text></g><g><title>rnpm`mio::sys::unix::waker::kqueue::Waker::new (1 samples, 0.11%)</title><rect x="63.4199%" y="1109" width="0.1082%" height="15" fill="rgb(234,36,40)" fg:x="586" fg:w="1"/><text x="63.6699%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.11%)</title><rect x="63.4199%" y="1093" width="0.1082%" height="15" fill="rgb(213,64,8)" fg:x="586" fg:w="1"/><text x="63.6699%" y="1103.50"></text></g><g><title>rnpm`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.11%)</title><rect x="63.5281%" y="1125" width="0.1082%" height="15" fill="rgb(210,75,36)" fg:x="587" fg:w="1"/><text x="63.7781%" y="1135.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;hyper::client::pool::PoolInner&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="63.7446%" y="1061" width="0.1082%" height="15" fill="rgb(229,88,21)" fg:x="589" fg:w="1"/><text x="63.9946%" y="1071.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;((http::uri::scheme::Scheme,http::uri::authority::Authority),alloc::vec::Vec&lt;hyper::client::pool::Idle&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt;)&gt; (1 samples, 0.11%)</title><rect x="63.7446%" y="1045" width="0.1082%" height="15" fill="rgb(252,204,47)" fg:x="589" fg:w="1"/><text x="63.9946%" y="1055.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::client::connect::ExtraEnvelope&lt;hyper::client::connect::http::HttpInfo&gt;&gt; (1 samples, 0.11%)</title><rect x="63.7446%" y="1029" width="0.1082%" height="15" fill="rgb(208,77,27)" fg:x="589" fg:w="1"/><text x="63.9946%" y="1039.50"></text></g><g><title>rnpm`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.22%)</title><rect x="63.7446%" y="1093" width="0.2165%" height="15" fill="rgb(221,76,26)" fg:x="589" fg:w="2"/><text x="63.9946%" y="1103.50"></text></g><g><title>rnpm`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.22%)</title><rect x="63.7446%" y="1077" width="0.2165%" height="15" fill="rgb(225,139,18)" fg:x="589" fg:w="2"/><text x="63.9946%" y="1087.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;reqwest::proxy::Proxy&gt; (1 samples, 0.11%)</title><rect x="63.8528%" y="1061" width="0.1082%" height="15" fill="rgb(230,137,11)" fg:x="590" fg:w="1"/><text x="64.1028%" y="1071.50"></text></g><g><title>rnpm`bytes::bytes::static_clone (1 samples, 0.11%)</title><rect x="63.9610%" y="1093" width="0.1082%" height="15" fill="rgb(212,28,1)" fg:x="591" fg:w="1"/><text x="64.2110%" y="1103.50"></text></g><g><title>rnpm`http::request::Builder::method (1 samples, 0.11%)</title><rect x="64.0693%" y="1093" width="0.1082%" height="15" fill="rgb(248,164,17)" fg:x="592" fg:w="1"/><text x="64.3193%" y="1103.50"></text></g><g><title>rnpm`reqwest::async_impl::client::Client::execute_request (1 samples, 0.11%)</title><rect x="64.1775%" y="1093" width="0.1082%" height="15" fill="rgb(222,171,42)" fg:x="593" fg:w="1"/><text x="64.4275%" y="1103.50"></text></g><g><title>rnpm`bytes::bytes::Bytes::copy_from_slice (1 samples, 0.11%)</title><rect x="64.1775%" y="1077" width="0.1082%" height="15" fill="rgb(243,84,45)" fg:x="593" fg:w="1"/><text x="64.4275%" y="1087.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::Context::enter (7 samples, 0.76%)</title><rect x="63.6364%" y="1125" width="0.7576%" height="15" fill="rgb(252,49,23)" fg:x="588" fg:w="7"/><text x="63.8864%" y="1135.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.76%)</title><rect x="63.6364%" y="1109" width="0.7576%" height="15" fill="rgb(215,19,7)" fg:x="588" fg:w="7"/><text x="63.8864%" y="1119.50"></text></g><g><title>rnpm`reqwest::async_impl::client::ClientBuilder::build (1 samples, 0.11%)</title><rect x="64.2857%" y="1093" width="0.1082%" height="15" fill="rgb(238,81,41)" fg:x="594" fg:w="1"/><text x="64.5357%" y="1103.50"></text></g><g><title>rnpm`hyper::client::client::Builder::build (1 samples, 0.11%)</title><rect x="64.2857%" y="1077" width="0.1082%" height="15" fill="rgb(210,199,37)" fg:x="594" fg:w="1"/><text x="64.5357%" y="1087.50"></text></g><g><title>rnpm`std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.11%)</title><rect x="64.2857%" y="1061" width="0.1082%" height="15" fill="rgb(244,192,49)" fg:x="594" fg:w="1"/><text x="64.5357%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.11%)</title><rect x="64.3939%" y="1109" width="0.1082%" height="15" fill="rgb(226,211,11)" fg:x="595" fg:w="1"/><text x="64.6439%" y="1119.50"></text></g><g><title>rnpm`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.11%)</title><rect x="64.5022%" y="1109" width="0.1082%" height="15" fill="rgb(236,162,54)" fg:x="596" fg:w="1"/><text x="64.7522%" y="1119.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.11%)</title><rect x="64.5022%" y="1093" width="0.1082%" height="15" fill="rgb(220,229,9)" fg:x="596" fg:w="1"/><text x="64.7522%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`kevent (10 samples, 1.08%)</title><rect x="64.7186%" y="1077" width="1.0823%" height="15" fill="rgb(250,87,22)" fg:x="598" fg:w="10"/><text x="64.9686%" y="1087.50"></text></g><g><title>rnpm`tokio::runtime::io::Driver::turn (12 samples, 1.30%)</title><rect x="64.6104%" y="1093" width="1.2987%" height="15" fill="rgb(239,43,17)" fg:x="597" fg:w="12"/><text x="64.8604%" y="1103.50"></text></g><g><title>rnpm`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.11%)</title><rect x="65.8009%" y="1077" width="0.1082%" height="15" fill="rgb(231,177,25)" fg:x="608" fg:w="1"/><text x="66.0509%" y="1087.50"></text></g><g><title>rnpm`tokio::runtime::task::raw::schedule (1 samples, 0.11%)</title><rect x="65.8009%" y="1061" width="0.1082%" height="15" fill="rgb(219,179,1)" fg:x="608" fg:w="1"/><text x="66.0509%" y="1071.50"></text></g><g><title>rnpm`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.11%)</title><rect x="65.9091%" y="1093" width="0.1082%" height="15" fill="rgb(238,219,53)" fg:x="609" fg:w="1"/><text x="66.1591%" y="1103.50"></text></g><g><title>rnpm`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.11%)</title><rect x="65.9091%" y="1077" width="0.1082%" height="15" fill="rgb(232,167,36)" fg:x="609" fg:w="1"/><text x="66.1591%" y="1087.50"></text></g><g><title>rnpm`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.11%)</title><rect x="65.9091%" y="1061" width="0.1082%" height="15" fill="rgb(244,19,51)" fg:x="609" fg:w="1"/><text x="66.1591%" y="1071.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::Context::park (16 samples, 1.73%)</title><rect x="64.3939%" y="1125" width="1.7316%" height="15" fill="rgb(224,6,22)" fg:x="595" fg:w="16"/><text x="64.6439%" y="1135.50"></text></g><g><title>rnpm`tokio::runtime::time::Driver::park_internal (14 samples, 1.52%)</title><rect x="64.6104%" y="1109" width="1.5152%" height="15" fill="rgb(224,145,5)" fg:x="597" fg:w="14"/><text x="64.8604%" y="1119.50"></text></g><g><title>rnpm`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.11%)</title><rect x="66.0173%" y="1093" width="0.1082%" height="15" fill="rgb(234,130,49)" fg:x="610" fg:w="1"/><text x="66.2673%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="66.1255%" y="1029" width="0.1082%" height="15" fill="rgb(254,6,2)" fg:x="611" fg:w="1"/><text x="66.3755%" y="1039.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="66.2338%" y="1029" width="0.1082%" height="15" fill="rgb(208,96,46)" fg:x="612" fg:w="1"/><text x="66.4838%" y="1039.50"></text></g><g><title>rnpm`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="66.2338%" y="1013" width="0.1082%" height="15" fill="rgb(239,3,39)" fg:x="612" fg:w="1"/><text x="66.4838%" y="1023.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="66.3420%" y="1013" width="0.1082%" height="15" fill="rgb(233,210,1)" fg:x="613" fg:w="1"/><text x="66.5920%" y="1023.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="66.4502%" y="1013" width="0.1082%" height="15" fill="rgb(244,137,37)" fg:x="614" fg:w="1"/><text x="66.7002%" y="1023.50"></text></g><g><title>rnpm`bytes::bytes::shared_clone (1 samples, 0.11%)</title><rect x="66.5584%" y="981" width="0.1082%" height="15" fill="rgb(240,136,2)" fg:x="615" fg:w="1"/><text x="66.8084%" y="991.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="66.5584%" y="997" width="0.2165%" height="15" fill="rgb(239,18,37)" fg:x="615" fg:w="2"/><text x="66.8084%" y="1007.50"></text></g><g><title>rnpm`hyper::common::exec::Exec::execute (1 samples, 0.11%)</title><rect x="66.6667%" y="981" width="0.1082%" height="15" fill="rgb(218,185,22)" fg:x="616" fg:w="1"/><text x="66.9167%" y="991.50"></text></g><g><title>rnpm`tokio::task::spawn::spawn (1 samples, 0.11%)</title><rect x="66.6667%" y="965" width="0.1082%" height="15" fill="rgb(225,218,4)" fg:x="616" fg:w="1"/><text x="66.9167%" y="975.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::Handle::spawn (1 samples, 0.11%)</title><rect x="66.6667%" y="949" width="0.1082%" height="15" fill="rgb(230,182,32)" fg:x="616" fg:w="1"/><text x="66.9167%" y="959.50"></text></g><g><title>rnpm`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.11%)</title><rect x="66.6667%" y="933" width="0.1082%" height="15" fill="rgb(242,56,43)" fg:x="616" fg:w="1"/><text x="66.9167%" y="943.50"></text></g><g><title>rnpm`&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (1 samples, 0.11%)</title><rect x="66.7749%" y="981" width="0.1082%" height="15" fill="rgb(233,99,24)" fg:x="617" fg:w="1"/><text x="67.0249%" y="991.50"></text></g><g><title>Security`SSLGetConnection (1 samples, 0.11%)</title><rect x="66.8831%" y="901" width="0.1082%" height="15" fill="rgb(234,209,42)" fg:x="618" fg:w="1"/><text x="67.1331%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__connect (14 samples, 1.52%)</title><rect x="66.9913%" y="853" width="1.5152%" height="15" fill="rgb(227,7,12)" fg:x="619" fg:w="14"/><text x="67.2413%" y="863.50"></text></g><g><title>rnpm`&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register (1 samples, 0.11%)</title><rect x="68.5065%" y="789" width="0.1082%" height="15" fill="rgb(245,203,43)" fg:x="633" fg:w="1"/><text x="68.7565%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.11%)</title><rect x="68.5065%" y="773" width="0.1082%" height="15" fill="rgb(238,205,33)" fg:x="633" fg:w="1"/><text x="68.7565%" y="783.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.73%)</title><rect x="66.9913%" y="869" width="1.7316%" height="15" fill="rgb(231,56,7)" fg:x="619" fg:w="16"/><text x="67.2413%" y="879.50"></text></g><g><title>rnpm`tokio::net::tcp::stream::TcpStream::new (2 samples, 0.22%)</title><rect x="68.5065%" y="853" width="0.2165%" height="15" fill="rgb(244,186,29)" fg:x="633" fg:w="2"/><text x="68.7565%" y="863.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::new (2 samples, 0.22%)</title><rect x="68.5065%" y="837" width="0.2165%" height="15" fill="rgb(234,111,31)" fg:x="633" fg:w="2"/><text x="68.7565%" y="847.50"></text></g><g><title>rnpm`tokio::runtime::io::registration::Registration::new_with_interest_and_handle (2 samples, 0.22%)</title><rect x="68.5065%" y="821" width="0.2165%" height="15" fill="rgb(241,149,10)" fg:x="633" fg:w="2"/><text x="68.7565%" y="831.50"></text></g><g><title>rnpm`tokio::runtime::io::Handle::add_source (2 samples, 0.22%)</title><rect x="68.5065%" y="805" width="0.2165%" height="15" fill="rgb(249,206,44)" fg:x="633" fg:w="2"/><text x="68.7565%" y="815.50"></text></g><g><title>rnpm`tokio::runtime::io::Handle::allocate (1 samples, 0.11%)</title><rect x="68.6147%" y="789" width="0.1082%" height="15" fill="rgb(251,153,30)" fg:x="634" fg:w="1"/><text x="68.8647%" y="799.50"></text></g><g><title>rnpm`tokio::util::slab::Allocator&lt;T&gt;::allocate (1 samples, 0.11%)</title><rect x="68.6147%" y="773" width="0.1082%" height="15" fill="rgb(239,152,38)" fg:x="634" fg:w="1"/><text x="68.8647%" y="783.50"></text></g><g><title>rnpm`&lt;std::sys::unix::locks::pthread_mutex::Mutex as std::sys_common::lazy_box::LazyInit&gt;::init (1 samples, 0.11%)</title><rect x="68.6147%" y="757" width="0.1082%" height="15" fill="rgb(249,139,47)" fg:x="634" fg:w="1"/><text x="68.8647%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.11%)</title><rect x="68.6147%" y="741" width="0.1082%" height="15" fill="rgb(244,64,35)" fg:x="634" fg:w="1"/><text x="68.8647%" y="751.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 2.16%)</title><rect x="66.9913%" y="901" width="2.1645%" height="15" fill="rgb(216,46,15)" fg:x="619" fg:w="20"/><text x="67.2413%" y="911.50">r..</text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 2.16%)</title><rect x="66.9913%" y="885" width="2.1645%" height="15" fill="rgb(250,74,19)" fg:x="619" fg:w="20"/><text x="67.2413%" y="895.50">r..</text></g><g><title>rnpm`hyper::client::connect::http::connect (4 samples, 0.43%)</title><rect x="68.7229%" y="869" width="0.4329%" height="15" fill="rgb(249,42,33)" fg:x="635" fg:w="4"/><text x="68.9729%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`socket (4 samples, 0.43%)</title><rect x="68.7229%" y="853" width="0.4329%" height="15" fill="rgb(242,149,17)" fg:x="635" fg:w="4"/><text x="68.9729%" y="863.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADSetIV (1 samples, 0.11%)</title><rect x="69.1558%" y="805" width="0.1082%" height="15" fill="rgb(244,29,21)" fg:x="639" fg:w="1"/><text x="69.4058%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="69.2641%" y="805" width="0.1082%" height="15" fill="rgb(220,130,37)" fg:x="640" fg:w="1"/><text x="69.5141%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.11%)</title><rect x="69.2641%" y="789" width="0.1082%" height="15" fill="rgb(211,67,2)" fg:x="640" fg:w="1"/><text x="69.5141%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.11%)</title><rect x="69.2641%" y="773" width="0.1082%" height="15" fill="rgb(235,68,52)" fg:x="640" fg:w="1"/><text x="69.5141%" y="783.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (7 samples, 0.76%)</title><rect x="69.3723%" y="789" width="0.7576%" height="15" fill="rgb(246,142,3)" fg:x="641" fg:w="7"/><text x="69.6223%" y="799.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (7 samples, 0.76%)</title><rect x="69.3723%" y="773" width="0.7576%" height="15" fill="rgb(241,25,7)" fg:x="641" fg:w="7"/><text x="69.6223%" y="783.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (7 samples, 0.76%)</title><rect x="69.3723%" y="757" width="0.7576%" height="15" fill="rgb(242,119,39)" fg:x="641" fg:w="7"/><text x="69.6223%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (7 samples, 0.76%)</title><rect x="69.3723%" y="741" width="0.7576%" height="15" fill="rgb(241,98,45)" fg:x="641" fg:w="7"/><text x="69.6223%" y="751.50"></text></g><g><title>Security`SSLRecordReadInternal (11 samples, 1.19%)</title><rect x="69.1558%" y="821" width="1.1905%" height="15" fill="rgb(254,28,30)" fg:x="639" fg:w="11"/><text x="69.4058%" y="831.50"></text></g><g><title>rnpm`security_framework::secure_transport::read_func (9 samples, 0.97%)</title><rect x="69.3723%" y="805" width="0.9740%" height="15" fill="rgb(241,142,54)" fg:x="641" fg:w="9"/><text x="69.6223%" y="815.50"></text></g><g><title>rnpm`tokio::io::read_buf::slice_to_uninit_mut (2 samples, 0.22%)</title><rect x="70.1299%" y="789" width="0.2165%" height="15" fill="rgb(222,85,15)" fg:x="648" fg:w="2"/><text x="70.3799%" y="799.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (11 samples, 1.19%)</title><rect x="70.3463%" y="821" width="1.1905%" height="15" fill="rgb(210,85,47)" fg:x="650" fg:w="11"/><text x="70.5963%" y="831.50"></text></g><g><title>rnpm`security_framework::secure_transport::write_func (11 samples, 1.19%)</title><rect x="70.3463%" y="805" width="1.1905%" height="15" fill="rgb(224,206,25)" fg:x="650" fg:w="11"/><text x="70.5963%" y="815.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (11 samples, 1.19%)</title><rect x="70.3463%" y="789" width="1.1905%" height="15" fill="rgb(243,201,19)" fg:x="650" fg:w="11"/><text x="70.5963%" y="799.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (11 samples, 1.19%)</title><rect x="70.3463%" y="773" width="1.1905%" height="15" fill="rgb(236,59,4)" fg:x="650" fg:w="11"/><text x="70.5963%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (11 samples, 1.19%)</title><rect x="70.3463%" y="757" width="1.1905%" height="15" fill="rgb(254,179,45)" fg:x="650" fg:w="11"/><text x="70.5963%" y="767.50"></text></g><g><title>libcoretls.dylib`SSLEncodeFinishedMessage (1 samples, 0.11%)</title><rect x="71.5368%" y="773" width="0.1082%" height="15" fill="rgb(226,14,10)" fg:x="661" fg:w="1"/><text x="71.7868%" y="783.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (1 samples, 0.11%)</title><rect x="71.5368%" y="757" width="0.1082%" height="15" fill="rgb(244,27,41)" fg:x="661" fg:w="1"/><text x="71.7868%" y="767.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.11%)</title><rect x="71.5368%" y="741" width="0.1082%" height="15" fill="rgb(235,35,32)" fg:x="661" fg:w="1"/><text x="71.7868%" y="751.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.11%)</title><rect x="71.5368%" y="725" width="0.1082%" height="15" fill="rgb(218,68,31)" fg:x="661" fg:w="1"/><text x="71.7868%" y="735.50"></text></g><g><title>libcoretls.dylib`HMAC_Update (1 samples, 0.11%)</title><rect x="71.5368%" y="709" width="0.1082%" height="15" fill="rgb(207,120,37)" fg:x="661" fg:w="1"/><text x="71.7868%" y="719.50"></text></g><g><title>libcoretls.dylib`DYLD-STUB$$ccsha256_di (1 samples, 0.11%)</title><rect x="71.5368%" y="693" width="0.1082%" height="15" fill="rgb(227,98,0)" fg:x="661" fg:w="1"/><text x="71.7868%" y="703.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.11%)</title><rect x="71.6450%" y="757" width="0.1082%" height="15" fill="rgb(207,7,3)" fg:x="662" fg:w="1"/><text x="71.8950%" y="767.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 0.11%)</title><rect x="71.7532%" y="693" width="0.1082%" height="15" fill="rgb(206,98,19)" fg:x="663" fg:w="1"/><text x="72.0032%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (1 samples, 0.11%)</title><rect x="71.7532%" y="677" width="0.1082%" height="15" fill="rgb(217,5,26)" fg:x="663" fg:w="1"/><text x="72.0032%" y="687.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.11%)</title><rect x="71.7532%" y="661" width="0.1082%" height="15" fill="rgb(235,190,38)" fg:x="663" fg:w="1"/><text x="72.0032%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.11%)</title><rect x="71.7532%" y="645" width="0.1082%" height="15" fill="rgb(247,86,24)" fg:x="663" fg:w="1"/><text x="72.0032%" y="655.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.11%)</title><rect x="71.8615%" y="677" width="0.1082%" height="15" fill="rgb(205,101,16)" fg:x="664" fg:w="1"/><text x="72.1115%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (6 samples, 0.65%)</title><rect x="71.8615%" y="693" width="0.6494%" height="15" fill="rgb(246,168,33)" fg:x="664" fg:w="6"/><text x="72.1115%" y="703.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (5 samples, 0.54%)</title><rect x="71.9697%" y="677" width="0.5411%" height="15" fill="rgb(231,114,1)" fg:x="665" fg:w="5"/><text x="72.2197%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (2 samples, 0.22%)</title><rect x="72.2944%" y="661" width="0.2165%" height="15" fill="rgb(207,184,53)" fg:x="668" fg:w="2"/><text x="72.5444%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.11%)</title><rect x="72.5108%" y="677" width="0.1082%" height="15" fill="rgb(224,95,51)" fg:x="670" fg:w="1"/><text x="72.7608%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (5 samples, 0.54%)</title><rect x="72.5108%" y="693" width="0.5411%" height="15" fill="rgb(212,188,45)" fg:x="670" fg:w="5"/><text x="72.7608%" y="703.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (4 samples, 0.43%)</title><rect x="72.6190%" y="677" width="0.4329%" height="15" fill="rgb(223,154,38)" fg:x="671" fg:w="4"/><text x="72.8690%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (4 samples, 0.43%)</title><rect x="72.6190%" y="661" width="0.4329%" height="15" fill="rgb(251,22,52)" fg:x="671" fg:w="4"/><text x="72.8690%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_rsub (1 samples, 0.11%)</title><rect x="73.0519%" y="693" width="0.1082%" height="15" fill="rgb(229,209,22)" fg:x="675" fg:w="1"/><text x="73.3019%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (4 samples, 0.43%)</title><rect x="73.1602%" y="693" width="0.4329%" height="15" fill="rgb(234,138,34)" fg:x="676" fg:w="4"/><text x="73.4102%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (5 samples, 0.54%)</title><rect x="73.5931%" y="693" width="0.5411%" height="15" fill="rgb(212,95,11)" fg:x="680" fg:w="5"/><text x="73.8431%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret (25 samples, 2.71%)</title><rect x="71.7532%" y="757" width="2.7056%" height="15" fill="rgb(240,179,47)" fg:x="663" fg:w="25"/><text x="72.0032%" y="767.50">li..</text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret_ws (25 samples, 2.71%)</title><rect x="71.7532%" y="741" width="2.7056%" height="15" fill="rgb(240,163,11)" fg:x="663" fg:w="25"/><text x="72.0032%" y="751.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (25 samples, 2.71%)</title><rect x="71.7532%" y="725" width="2.7056%" height="15" fill="rgb(236,37,12)" fg:x="663" fg:w="25"/><text x="72.0032%" y="735.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (25 samples, 2.71%)</title><rect x="71.7532%" y="709" width="2.7056%" height="15" fill="rgb(232,164,16)" fg:x="663" fg:w="25"/><text x="72.0032%" y="719.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.32%)</title><rect x="74.1342%" y="693" width="0.3247%" height="15" fill="rgb(244,205,15)" fg:x="685" fg:w="3"/><text x="74.3842%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv_asm_ws (1 samples, 0.11%)</title><rect x="74.4589%" y="645" width="0.1082%" height="15" fill="rgb(223,117,47)" fg:x="688" fg:w="1"/><text x="74.7089%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_ws (2 samples, 0.22%)</title><rect x="74.4589%" y="661" width="0.2165%" height="15" fill="rgb(244,107,35)" fg:x="688" fg:w="2"/><text x="74.7089%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.11%)</title><rect x="74.5671%" y="645" width="0.1082%" height="15" fill="rgb(205,140,8)" fg:x="689" fg:w="1"/><text x="74.8171%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 0.11%)</title><rect x="74.6753%" y="645" width="0.1082%" height="15" fill="rgb(228,84,46)" fg:x="690" fg:w="1"/><text x="74.9253%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.11%)</title><rect x="74.6753%" y="629" width="0.1082%" height="15" fill="rgb(254,188,9)" fg:x="690" fg:w="1"/><text x="74.9253%" y="639.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.11%)</title><rect x="74.7835%" y="629" width="0.1082%" height="15" fill="rgb(206,112,54)" fg:x="691" fg:w="1"/><text x="75.0335%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.11%)</title><rect x="74.8918%" y="613" width="0.1082%" height="15" fill="rgb(216,84,49)" fg:x="692" fg:w="1"/><text x="75.1418%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (3 samples, 0.32%)</title><rect x="74.8918%" y="629" width="0.3247%" height="15" fill="rgb(214,194,35)" fg:x="692" fg:w="3"/><text x="75.1418%" y="639.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.22%)</title><rect x="75.0000%" y="613" width="0.2165%" height="15" fill="rgb(249,28,3)" fg:x="693" fg:w="2"/><text x="75.2500%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (2 samples, 0.22%)</title><rect x="75.0000%" y="597" width="0.2165%" height="15" fill="rgb(222,56,52)" fg:x="693" fg:w="2"/><text x="75.2500%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.11%)</title><rect x="75.2165%" y="613" width="0.1082%" height="15" fill="rgb(245,217,50)" fg:x="695" fg:w="1"/><text x="75.4665%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (3 samples, 0.32%)</title><rect x="75.2165%" y="629" width="0.3247%" height="15" fill="rgb(213,201,24)" fg:x="695" fg:w="3"/><text x="75.4665%" y="639.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.22%)</title><rect x="75.3247%" y="613" width="0.2165%" height="15" fill="rgb(248,116,28)" fg:x="696" fg:w="2"/><text x="75.5747%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.11%)</title><rect x="75.4329%" y="597" width="0.1082%" height="15" fill="rgb(219,72,43)" fg:x="697" fg:w="1"/><text x="75.6829%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (5 samples, 0.54%)</title><rect x="75.5411%" y="629" width="0.5411%" height="15" fill="rgb(209,138,14)" fg:x="698" fg:w="5"/><text x="75.7911%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (9 samples, 0.97%)</title><rect x="76.0823%" y="629" width="0.9740%" height="15" fill="rgb(222,18,33)" fg:x="703" fg:w="9"/><text x="76.3323%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (23 samples, 2.49%)</title><rect x="74.6753%" y="661" width="2.4892%" height="15" fill="rgb(213,199,7)" fg:x="690" fg:w="23"/><text x="74.9253%" y="671.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (22 samples, 2.38%)</title><rect x="74.7835%" y="645" width="2.3810%" height="15" fill="rgb(250,110,10)" fg:x="691" fg:w="22"/><text x="75.0335%" y="655.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.11%)</title><rect x="77.0563%" y="629" width="0.1082%" height="15" fill="rgb(248,123,6)" fg:x="712" fg:w="1"/><text x="77.3063%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_projectify_ws (1 samples, 0.11%)</title><rect x="77.1645%" y="661" width="0.1082%" height="15" fill="rgb(206,91,31)" fg:x="713" fg:w="1"/><text x="77.4145%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits (1 samples, 0.11%)</title><rect x="77.1645%" y="645" width="0.1082%" height="15" fill="rgb(211,154,13)" fg:x="713" fg:w="1"/><text x="77.4145%" y="655.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.11%)</title><rect x="77.1645%" y="629" width="0.1082%" height="15" fill="rgb(225,148,7)" fg:x="713" fg:w="1"/><text x="77.4145%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.11%)</title><rect x="77.1645%" y="613" width="0.1082%" height="15" fill="rgb(220,160,43)" fg:x="713" fg:w="1"/><text x="77.4145%" y="623.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.11%)</title><rect x="77.1645%" y="597" width="0.1082%" height="15" fill="rgb(213,52,39)" fg:x="713" fg:w="1"/><text x="77.4145%" y="607.50"></text></g><g><title>libcorecrypto.dylib`update_with_ctr (1 samples, 0.11%)</title><rect x="77.1645%" y="581" width="0.1082%" height="15" fill="rgb(243,137,7)" fg:x="713" fg:w="1"/><text x="77.4145%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccctr_update (1 samples, 0.11%)</title><rect x="77.1645%" y="565" width="0.1082%" height="15" fill="rgb(230,79,13)" fg:x="713" fg:w="1"/><text x="77.4145%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccaes_vng_ctr_crypt (1 samples, 0.11%)</title><rect x="77.1645%" y="549" width="0.1082%" height="15" fill="rgb(247,105,23)" fg:x="713" fg:w="1"/><text x="77.4145%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips_ws (27 samples, 2.92%)</title><rect x="74.4589%" y="693" width="2.9221%" height="15" fill="rgb(223,179,41)" fg:x="688" fg:w="27"/><text x="74.7089%" y="703.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv_ws (27 samples, 2.92%)</title><rect x="74.4589%" y="677" width="2.9221%" height="15" fill="rgb(218,9,34)" fg:x="688" fg:w="27"/><text x="74.7089%" y="687.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.11%)</title><rect x="77.2727%" y="661" width="0.1082%" height="15" fill="rgb(222,106,8)" fg:x="714" fg:w="1"/><text x="77.5227%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv_asm_ws (1 samples, 0.11%)</title><rect x="77.3810%" y="629" width="0.1082%" height="15" fill="rgb(211,220,0)" fg:x="715" fg:w="1"/><text x="77.6310%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only_ws (2 samples, 0.22%)</title><rect x="77.3810%" y="645" width="0.2165%" height="15" fill="rgb(229,52,16)" fg:x="715" fg:w="2"/><text x="77.6310%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.11%)</title><rect x="77.4892%" y="629" width="0.1082%" height="15" fill="rgb(212,155,18)" fg:x="716" fg:w="1"/><text x="77.7392%" y="639.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.11%)</title><rect x="77.5974%" y="597" width="0.1082%" height="15" fill="rgb(242,21,14)" fg:x="717" fg:w="1"/><text x="77.8474%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.11%)</title><rect x="77.7056%" y="597" width="0.1082%" height="15" fill="rgb(222,19,48)" fg:x="718" fg:w="1"/><text x="77.9556%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (2 samples, 0.22%)</title><rect x="77.8139%" y="597" width="0.2165%" height="15" fill="rgb(232,45,27)" fg:x="719" fg:w="2"/><text x="78.0639%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (5 samples, 0.54%)</title><rect x="77.5974%" y="613" width="0.5411%" height="15" fill="rgb(249,103,42)" fg:x="717" fg:w="5"/><text x="77.8474%" y="623.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.11%)</title><rect x="78.0303%" y="597" width="0.1082%" height="15" fill="rgb(246,81,33)" fg:x="721" fg:w="1"/><text x="78.2803%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (2 samples, 0.22%)</title><rect x="78.1385%" y="597" width="0.2165%" height="15" fill="rgb(252,33,42)" fg:x="722" fg:w="2"/><text x="78.3885%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (3 samples, 0.32%)</title><rect x="78.1385%" y="613" width="0.3247%" height="15" fill="rgb(209,212,41)" fg:x="722" fg:w="3"/><text x="78.3885%" y="623.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.11%)</title><rect x="78.3550%" y="597" width="0.1082%" height="15" fill="rgb(207,154,6)" fg:x="724" fg:w="1"/><text x="78.6050%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (1 samples, 0.11%)</title><rect x="78.3550%" y="581" width="0.1082%" height="15" fill="rgb(223,64,47)" fg:x="724" fg:w="1"/><text x="78.6050%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (4 samples, 0.43%)</title><rect x="78.4632%" y="613" width="0.4329%" height="15" fill="rgb(211,161,38)" fg:x="725" fg:w="4"/><text x="78.7132%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (4 samples, 0.43%)</title><rect x="78.8961%" y="613" width="0.4329%" height="15" fill="rgb(219,138,40)" fg:x="729" fg:w="4"/><text x="79.1461%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (19 samples, 2.06%)</title><rect x="77.5974%" y="629" width="2.0563%" height="15" fill="rgb(241,228,46)" fg:x="717" fg:w="19"/><text x="77.8474%" y="639.50">l..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.32%)</title><rect x="79.3290%" y="613" width="0.3247%" height="15" fill="rgb(223,209,38)" fg:x="733" fg:w="3"/><text x="79.5790%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (22 samples, 2.38%)</title><rect x="77.3810%" y="677" width="2.3810%" height="15" fill="rgb(236,164,45)" fg:x="715" fg:w="22"/><text x="77.6310%" y="687.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (22 samples, 2.38%)</title><rect x="77.3810%" y="661" width="2.3810%" height="15" fill="rgb(231,15,5)" fg:x="715" fg:w="22"/><text x="77.6310%" y="671.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (20 samples, 2.16%)</title><rect x="77.5974%" y="645" width="2.1645%" height="15" fill="rgb(252,35,15)" fg:x="717" fg:w="20"/><text x="77.8474%" y="655.50">l..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.11%)</title><rect x="79.6537%" y="629" width="0.1082%" height="15" fill="rgb(248,181,18)" fg:x="736" fg:w="1"/><text x="79.9037%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (1 samples, 0.11%)</title><rect x="79.7619%" y="661" width="0.1082%" height="15" fill="rgb(233,39,42)" fg:x="737" fg:w="1"/><text x="80.0119%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_add_asm (3 samples, 0.32%)</title><rect x="79.9784%" y="629" width="0.3247%" height="15" fill="rgb(238,110,33)" fg:x="739" fg:w="3"/><text x="80.2284%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (5 samples, 0.54%)</title><rect x="79.8701%" y="645" width="0.5411%" height="15" fill="rgb(233,195,10)" fg:x="738" fg:w="5"/><text x="80.1201%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.11%)</title><rect x="80.3030%" y="629" width="0.1082%" height="15" fill="rgb(254,105,3)" fg:x="742" fg:w="1"/><text x="80.5530%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_normalized_ws (1 samples, 0.11%)</title><rect x="80.4113%" y="645" width="0.1082%" height="15" fill="rgb(221,225,9)" fg:x="743" fg:w="1"/><text x="80.6613%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (1 samples, 0.11%)</title><rect x="80.4113%" y="629" width="0.1082%" height="15" fill="rgb(224,227,45)" fg:x="743" fg:w="1"/><text x="80.6613%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.11%)</title><rect x="80.4113%" y="613" width="0.1082%" height="15" fill="rgb(229,198,43)" fg:x="743" fg:w="1"/><text x="80.6613%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_sub_normalized_ws (1 samples, 0.11%)</title><rect x="80.5195%" y="645" width="0.1082%" height="15" fill="rgb(206,209,35)" fg:x="744" fg:w="1"/><text x="80.7695%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.11%)</title><rect x="80.5195%" y="629" width="0.1082%" height="15" fill="rgb(245,195,53)" fg:x="744" fg:w="1"/><text x="80.7695%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (5 samples, 0.54%)</title><rect x="80.6277%" y="645" width="0.5411%" height="15" fill="rgb(240,92,26)" fg:x="745" fg:w="5"/><text x="80.8777%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (15 samples, 1.62%)</title><rect x="79.8701%" y="661" width="1.6234%" height="15" fill="rgb(207,40,23)" fg:x="738" fg:w="15"/><text x="80.1201%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.32%)</title><rect x="81.1688%" y="645" width="0.3247%" height="15" fill="rgb(223,111,35)" fg:x="750" fg:w="3"/><text x="81.4188%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_set (1 samples, 0.11%)</title><rect x="81.7100%" y="645" width="0.1082%" height="15" fill="rgb(229,147,28)" fg:x="755" fg:w="1"/><text x="81.9600%" y="655.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (96 samples, 10.39%)</title><rect x="71.5368%" y="821" width="10.3896%" height="15" fill="rgb(211,29,28)" fg:x="661" fg:w="96"/><text x="71.7868%" y="831.50">libcoretls.dyli..</text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (96 samples, 10.39%)</title><rect x="71.5368%" y="805" width="10.3896%" height="15" fill="rgb(228,72,33)" fg:x="661" fg:w="96"/><text x="71.7868%" y="815.50">libcoretls.dyli..</text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (96 samples, 10.39%)</title><rect x="71.5368%" y="789" width="10.3896%" height="15" fill="rgb(205,214,31)" fg:x="661" fg:w="96"/><text x="71.7868%" y="799.50">libcoretls.dyli..</text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (95 samples, 10.28%)</title><rect x="71.6450%" y="773" width="10.2814%" height="15" fill="rgb(224,111,15)" fg:x="662" fg:w="95"/><text x="71.8950%" y="783.50">libcoretls.dyli..</text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (69 samples, 7.47%)</title><rect x="74.4589%" y="757" width="7.4675%" height="15" fill="rgb(253,21,26)" fg:x="688" fg:w="69"/><text x="74.7089%" y="767.50">libcoretls..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key (69 samples, 7.47%)</title><rect x="74.4589%" y="741" width="7.4675%" height="15" fill="rgb(245,139,43)" fg:x="688" fg:w="69"/><text x="74.7089%" y="751.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (69 samples, 7.47%)</title><rect x="74.4589%" y="725" width="7.4675%" height="15" fill="rgb(252,170,7)" fg:x="688" fg:w="69"/><text x="74.7089%" y="735.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (69 samples, 7.47%)</title><rect x="74.4589%" y="709" width="7.4675%" height="15" fill="rgb(231,118,14)" fg:x="688" fg:w="69"/><text x="74.7089%" y="719.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (42 samples, 4.55%)</title><rect x="77.3810%" y="693" width="4.5455%" height="15" fill="rgb(238,83,0)" fg:x="715" fg:w="42"/><text x="77.6310%" y="703.50">libco..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (20 samples, 2.16%)</title><rect x="79.7619%" y="677" width="2.1645%" height="15" fill="rgb(221,39,39)" fg:x="737" fg:w="20"/><text x="80.0119%" y="687.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (4 samples, 0.43%)</title><rect x="81.4935%" y="661" width="0.4329%" height="15" fill="rgb(222,119,46)" fg:x="753" fg:w="4"/><text x="81.7435%" y="671.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_ws (1 samples, 0.11%)</title><rect x="81.8182%" y="645" width="0.1082%" height="15" fill="rgb(222,165,49)" fg:x="756" fg:w="1"/><text x="82.0682%" y="655.50"></text></g><g><title>libsystem_c.dylib`memset_s (1 samples, 0.11%)</title><rect x="81.8182%" y="629" width="0.1082%" height="15" fill="rgb(219,113,52)" fg:x="756" fg:w="1"/><text x="82.0682%" y="639.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecord (1 samples, 0.11%)</title><rect x="81.9264%" y="805" width="0.1082%" height="15" fill="rgb(214,7,15)" fg:x="757" fg:w="1"/><text x="82.1764%" y="815.50"></text></g><g><title>Security`DYLD-STUB$$tls_handshake_set_peer_trust (1 samples, 0.11%)</title><rect x="82.0346%" y="789" width="0.1082%" height="15" fill="rgb(235,32,4)" fg:x="758" fg:w="1"/><text x="82.2846%" y="799.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.11%)</title><rect x="82.1429%" y="757" width="0.1082%" height="15" fill="rgb(238,90,54)" fg:x="759" fg:w="1"/><text x="82.3929%" y="767.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.11%)</title><rect x="82.1429%" y="741" width="0.1082%" height="15" fill="rgb(213,208,19)" fg:x="759" fg:w="1"/><text x="82.3929%" y="751.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="82.1429%" y="725" width="0.1082%" height="15" fill="rgb(233,156,4)" fg:x="759" fg:w="1"/><text x="82.3929%" y="735.50"></text></g><g><title>Security`SecCertificateDestroy (1 samples, 0.11%)</title><rect x="82.1429%" y="709" width="0.1082%" height="15" fill="rgb(207,194,5)" fg:x="759" fg:w="1"/><text x="82.3929%" y="719.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.11%)</title><rect x="82.1429%" y="693" width="0.1082%" height="15" fill="rgb(206,111,30)" fg:x="759" fg:w="1"/><text x="82.3929%" y="703.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.11%)</title><rect x="82.1429%" y="677" width="0.1082%" height="15" fill="rgb(243,70,54)" fg:x="759" fg:w="1"/><text x="82.3929%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="82.1429%" y="661" width="0.1082%" height="15" fill="rgb(242,28,8)" fg:x="759" fg:w="1"/><text x="82.3929%" y="671.50"></text></g><g><title>CoreFoundation`__CFURLDeallocate (1 samples, 0.11%)</title><rect x="82.1429%" y="645" width="0.1082%" height="15" fill="rgb(219,106,18)" fg:x="759" fg:w="1"/><text x="82.3929%" y="655.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="82.1429%" y="629" width="0.1082%" height="15" fill="rgb(244,222,10)" fg:x="759" fg:w="1"/><text x="82.3929%" y="639.50"></text></g><g><title>Security`SecECKeyCopyPublicBits (1 samples, 0.11%)</title><rect x="82.2511%" y="757" width="0.1082%" height="15" fill="rgb(236,179,52)" fg:x="760" fg:w="1"/><text x="82.5011%" y="767.50"></text></g><g><title>Security`SecKeyCopyPublicBytes (1 samples, 0.11%)</title><rect x="82.2511%" y="741" width="0.1082%" height="15" fill="rgb(213,23,39)" fg:x="760" fg:w="1"/><text x="82.5011%" y="751.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (1 samples, 0.11%)</title><rect x="82.2511%" y="725" width="0.1082%" height="15" fill="rgb(238,48,10)" fg:x="760" fg:w="1"/><text x="82.5011%" y="735.50"></text></g><g><title>Security`SecKeychainItemExport (1 samples, 0.11%)</title><rect x="82.2511%" y="709" width="0.1082%" height="15" fill="rgb(251,196,23)" fg:x="760" fg:w="1"/><text x="82.5011%" y="719.50"></text></g><g><title>Security`impExpAddToExportReps(void const*, __CFArray*, unsigned int&amp;, unsigned int&amp;) (1 samples, 0.11%)</title><rect x="82.2511%" y="693" width="0.1082%" height="15" fill="rgb(250,152,24)" fg:x="760" fg:w="1"/><text x="82.5011%" y="703.50"></text></g><g><title>Security`SecIdentityGetTypeID (1 samples, 0.11%)</title><rect x="82.2511%" y="677" width="0.1082%" height="15" fill="rgb(209,150,17)" fg:x="760" fg:w="1"/><text x="82.5011%" y="687.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.11%)</title><rect x="82.2511%" y="661" width="0.1082%" height="15" fill="rgb(234,202,34)" fg:x="760" fg:w="1"/><text x="82.5011%" y="671.50"></text></g><g><title>Security`countLegacyAPIEnabledForThread (1 samples, 0.11%)</title><rect x="82.2511%" y="645" width="0.1082%" height="15" fill="rgb(253,148,53)" fg:x="760" fg:w="1"/><text x="82.5011%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.11%)</title><rect x="82.3593%" y="709" width="0.1082%" height="15" fill="rgb(218,129,16)" fg:x="761" fg:w="1"/><text x="82.6093%" y="719.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM _mutate] (1 samples, 0.11%)</title><rect x="82.3593%" y="693" width="0.1082%" height="15" fill="rgb(216,85,19)" fg:x="761" fg:w="1"/><text x="82.6093%" y="703.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (1 samples, 0.11%)</title><rect x="82.4675%" y="645" width="0.1082%" height="15" fill="rgb(235,228,7)" fg:x="762" fg:w="1"/><text x="82.7175%" y="655.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;(Security::Mutex::lock()), &amp;(Security::Mutex::unlock())&gt;::~StLock (1 samples, 0.11%)</title><rect x="82.4675%" y="629" width="0.1082%" height="15" fill="rgb(245,175,0)" fg:x="762" fg:w="1"/><text x="82.7175%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.11%)</title><rect x="82.4675%" y="613" width="0.1082%" height="15" fill="rgb(208,168,36)" fg:x="762" fg:w="1"/><text x="82.7175%" y="623.50"></text></g><g><title>Security`SecKeyGetCSPHandle (2 samples, 0.22%)</title><rect x="82.4675%" y="661" width="0.2165%" height="15" fill="rgb(246,171,24)" fg:x="762" fg:w="2"/><text x="82.7175%" y="671.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;Security::CssmClient::CSP, std::__1::__tree_node&lt;Security::CssmClient::CSP, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;Security::CssmClient::CSP, std::__1::less&lt;Security::CssmClient::CSP&gt;, std::__1::allocator&lt;Security::CssmClient::CSP&gt; &gt;::__emplace_unique_key_args&lt;Security::CssmClient::CSP, Security::CssmClient::CSP const&amp;&gt; (1 samples, 0.11%)</title><rect x="82.5758%" y="645" width="0.1082%" height="15" fill="rgb(215,142,24)" fg:x="763" fg:w="1"/><text x="82.8258%" y="655.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::operator&lt; (1 samples, 0.11%)</title><rect x="82.5758%" y="629" width="0.1082%" height="15" fill="rgb(250,187,7)" fg:x="763" fg:w="1"/><text x="82.8258%" y="639.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (1 samples, 0.11%)</title><rect x="82.6840%" y="645" width="0.1082%" height="15" fill="rgb(228,66,33)" fg:x="764" fg:w="1"/><text x="82.9340%" y="655.50"></text></g><g><title>Security`HandleContext::Maker::operator() (1 samples, 0.11%)</title><rect x="82.6840%" y="629" width="0.1082%" height="15" fill="rgb(234,215,21)" fg:x="764" fg:w="1"/><text x="82.9340%" y="639.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.11%)</title><rect x="82.6840%" y="613" width="0.1082%" height="15" fill="rgb(222,191,20)" fg:x="764" fg:w="1"/><text x="82.9340%" y="623.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.11%)</title><rect x="82.6840%" y="597" width="0.1082%" height="15" fill="rgb(245,79,54)" fg:x="764" fg:w="1"/><text x="82.9340%" y="607.50"></text></g><g><title>Security`AppleCSPSession::contextCreate (1 samples, 0.11%)</title><rect x="82.6840%" y="581" width="0.1082%" height="15" fill="rgb(240,10,37)" fg:x="764" fg:w="1"/><text x="82.9340%" y="591.50"></text></g><g><title>Security`AppleCSPSession::WrapKey (1 samples, 0.11%)</title><rect x="82.7922%" y="629" width="0.1082%" height="15" fill="rgb(214,192,32)" fg:x="765" fg:w="1"/><text x="83.0422%" y="639.50"></text></g><g><title>Security`SecECKeyGetNamedCurve (6 samples, 0.65%)</title><rect x="82.3593%" y="757" width="0.6494%" height="15" fill="rgb(209,36,54)" fg:x="761" fg:w="6"/><text x="82.6093%" y="767.50"></text></g><g><title>Security`SecKeyCopyAttributes (6 samples, 0.65%)</title><rect x="82.3593%" y="741" width="0.6494%" height="15" fill="rgb(220,10,11)" fg:x="761" fg:w="6"/><text x="82.6093%" y="751.50"></text></g><g><title>Security`SecCDSAKeyCopyAttributeDictionary(__SecKey*) (6 samples, 0.65%)</title><rect x="82.3593%" y="725" width="0.6494%" height="15" fill="rgb(221,106,17)" fg:x="761" fg:w="6"/><text x="82.6093%" y="735.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (5 samples, 0.54%)</title><rect x="82.4675%" y="709" width="0.5411%" height="15" fill="rgb(251,142,44)" fg:x="762" fg:w="5"/><text x="82.7175%" y="719.50"></text></g><g><title>Security`SecKeychainItemExport (5 samples, 0.54%)</title><rect x="82.4675%" y="693" width="0.5411%" height="15" fill="rgb(238,13,15)" fg:x="762" fg:w="5"/><text x="82.7175%" y="703.50"></text></g><g><title>Security`SecExport::Key::exportRep (5 samples, 0.54%)</title><rect x="82.4675%" y="677" width="0.5411%" height="15" fill="rgb(208,107,27)" fg:x="762" fg:w="5"/><text x="82.7175%" y="687.50"></text></g><g><title>Security`impExpExportKeyCommon (3 samples, 0.32%)</title><rect x="82.6840%" y="661" width="0.3247%" height="15" fill="rgb(205,136,37)" fg:x="764" fg:w="3"/><text x="82.9340%" y="671.50"></text></g><g><title>Security`CSSM_WrapKey (2 samples, 0.22%)</title><rect x="82.7922%" y="645" width="0.2165%" height="15" fill="rgb(250,205,27)" fg:x="765" fg:w="2"/><text x="83.0422%" y="655.50"></text></g><g><title>Security`cssm_WrapKey(long, unsigned long long, cssm_context const*, cssm_access_credentials const*, cssm_key const*, cssm_data const*, cssm_key*, unsigned long long) (1 samples, 0.11%)</title><rect x="82.9004%" y="629" width="0.1082%" height="15" fill="rgb(210,80,43)" fg:x="766" fg:w="1"/><text x="83.1504%" y="639.50"></text></g><g><title>Security`objc_msgSend$threadDictionary (1 samples, 0.11%)</title><rect x="82.9004%" y="613" width="0.1082%" height="15" fill="rgb(247,160,36)" fg:x="766" fg:w="1"/><text x="83.1504%" y="623.50"></text></g><g><title>Security`SecKeychainItemGetTypeID (1 samples, 0.11%)</title><rect x="83.0087%" y="725" width="0.1082%" height="15" fill="rgb(234,13,49)" fg:x="767" fg:w="1"/><text x="83.2587%" y="735.50"></text></g><g><title>Security`CSSM_CL_CertGetFirstCachedFieldValue (1 samples, 0.11%)</title><rect x="83.1169%" y="693" width="0.1082%" height="15" fill="rgb(234,122,0)" fg:x="768" fg:w="1"/><text x="83.3669%" y="703.50"></text></g><g><title>Security`cssm_CertGetFirstCachedFieldValue(long, long, cssm_data const*, long*, unsigned int*, cssm_data**) (1 samples, 0.11%)</title><rect x="83.1169%" y="677" width="0.1082%" height="15" fill="rgb(207,146,38)" fg:x="768" fg:w="1"/><text x="83.3669%" y="687.50"></text></g><g><title>Security`AppleX509CLSession::CertGetFirstCachedFieldValue (1 samples, 0.11%)</title><rect x="83.1169%" y="661" width="0.1082%" height="15" fill="rgb(207,177,25)" fg:x="768" fg:w="1"/><text x="83.3669%" y="671.50"></text></g><g><title>Security`getField_PublicKeyStruct(DecodedItem&amp;, unsigned int, unsigned int&amp;, Security::CssmOwnedData&amp;) (1 samples, 0.11%)</title><rect x="83.1169%" y="645" width="0.1082%" height="15" fill="rgb(211,178,42)" fg:x="768" fg:w="1"/><text x="83.3669%" y="655.50"></text></g><g><title>Security`CL_extractCSSMKeyNSS(SecAsn1PubKeyInfo const&amp;, Security::Allocator&amp;, DecodedCert const*) (1 samples, 0.11%)</title><rect x="83.1169%" y="629" width="0.1082%" height="15" fill="rgb(230,69,54)" fg:x="768" fg:w="1"/><text x="83.3669%" y="639.50"></text></g><g><title>Security`CSSM_QueryKeySizeInBits (1 samples, 0.11%)</title><rect x="83.1169%" y="613" width="0.1082%" height="15" fill="rgb(214,135,41)" fg:x="768" fg:w="1"/><text x="83.3669%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (1 samples, 0.11%)</title><rect x="83.1169%" y="597" width="0.1082%" height="15" fill="rgb(237,67,25)" fg:x="768" fg:w="1"/><text x="83.3669%" y="607.50"></text></g><g><title>Security`DecodedExtensions::decodeFromNss (1 samples, 0.11%)</title><rect x="83.2251%" y="613" width="0.1082%" height="15" fill="rgb(222,189,50)" fg:x="769" fg:w="1"/><text x="83.4751%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.11%)</title><rect x="83.2251%" y="597" width="0.1082%" height="15" fill="rgb(245,148,34)" fg:x="769" fg:w="1"/><text x="83.4751%" y="607.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::certHandle (2 samples, 0.22%)</title><rect x="83.2251%" y="693" width="0.2165%" height="15" fill="rgb(222,29,6)" fg:x="769" fg:w="2"/><text x="83.4751%" y="703.50"></text></g><g><title>Security`CSSM_CL_CertCache (2 samples, 0.22%)</title><rect x="83.2251%" y="677" width="0.2165%" height="15" fill="rgb(221,189,43)" fg:x="769" fg:w="2"/><text x="83.4751%" y="687.50"></text></g><g><title>Security`cssm_CertCache(long, cssm_data const*, long*) (2 samples, 0.22%)</title><rect x="83.2251%" y="661" width="0.2165%" height="15" fill="rgb(207,36,27)" fg:x="769" fg:w="2"/><text x="83.4751%" y="671.50"></text></g><g><title>Security`AppleX509CLSession::CertCache (2 samples, 0.22%)</title><rect x="83.2251%" y="645" width="0.2165%" height="15" fill="rgb(217,90,24)" fg:x="769" fg:w="2"/><text x="83.4751%" y="655.50"></text></g><g><title>Security`DecodedCert::DecodedCert (2 samples, 0.22%)</title><rect x="83.2251%" y="629" width="0.2165%" height="15" fill="rgb(224,66,35)" fg:x="769" fg:w="2"/><text x="83.4751%" y="639.50"></text></g><g><title>Security`SEC_ASN1Decode (1 samples, 0.11%)</title><rect x="83.3333%" y="613" width="0.1082%" height="15" fill="rgb(221,13,50)" fg:x="770" fg:w="1"/><text x="83.5833%" y="623.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (1 samples, 0.11%)</title><rect x="83.3333%" y="597" width="0.1082%" height="15" fill="rgb(236,68,49)" fg:x="770" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (1 samples, 0.11%)</title><rect x="83.3333%" y="581" width="0.1082%" height="15" fill="rgb(229,146,28)" fg:x="770" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>Security`Security::ModuleNexus&lt;CssmManager&gt;::operator() (1 samples, 0.11%)</title><rect x="83.4416%" y="645" width="0.1082%" height="15" fill="rgb(225,31,38)" fg:x="771" fg:w="1"/><text x="83.6916%" y="655.50"></text></g><g><title>Security`CSSM_ModuleAttach (2 samples, 0.22%)</title><rect x="83.4416%" y="661" width="0.2165%" height="15" fill="rgb(250,208,3)" fg:x="771" fg:w="2"/><text x="83.6916%" y="671.50"></text></g><g><title>Security`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::__map_value_compare&lt;Security::Guid, std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::less&lt;Security::Guid&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt; &gt; &gt;::find&lt;Security::Guid&gt; (1 samples, 0.11%)</title><rect x="83.5498%" y="645" width="0.1082%" height="15" fill="rgb(246,54,23)" fg:x="772" fg:w="1"/><text x="83.7998%" y="655.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.11%)</title><rect x="83.6580%" y="533" width="0.1082%" height="15" fill="rgb(243,76,11)" fg:x="773" fg:w="1"/><text x="83.9080%" y="543.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.11%)</title><rect x="83.6580%" y="517" width="0.1082%" height="15" fill="rgb(245,21,50)" fg:x="773" fg:w="1"/><text x="83.9080%" y="527.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.11%)</title><rect x="83.6580%" y="501" width="0.1082%" height="15" fill="rgb(228,9,43)" fg:x="773" fg:w="1"/><text x="83.9080%" y="511.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.11%)</title><rect x="83.6580%" y="485" width="0.1082%" height="15" fill="rgb(208,100,47)" fg:x="773" fg:w="1"/><text x="83.9080%" y="495.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.11%)</title><rect x="83.6580%" y="469" width="0.1082%" height="15" fill="rgb(232,26,8)" fg:x="773" fg:w="1"/><text x="83.9080%" y="479.50"></text></g><g><title>Security`Security::AtomicBufferedFile::open (1 samples, 0.11%)</title><rect x="83.6580%" y="453" width="0.1082%" height="15" fill="rgb(216,166,38)" fg:x="773" fg:w="1"/><text x="83.9080%" y="463.50"></text></g><g><title>Security`Security::AtomicFile::ropen (1 samples, 0.11%)</title><rect x="83.6580%" y="437" width="0.1082%" height="15" fill="rgb(251,202,51)" fg:x="773" fg:w="1"/><text x="83.9080%" y="447.50"></text></g><g><title>libsystem_sandbox.dylib`sandbox_check (1 samples, 0.11%)</title><rect x="83.6580%" y="421" width="0.1082%" height="15" fill="rgb(254,216,34)" fg:x="773" fg:w="1"/><text x="83.9080%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__mac_syscall (1 samples, 0.11%)</title><rect x="83.6580%" y="405" width="0.1082%" height="15" fill="rgb(251,32,27)" fg:x="773" fg:w="1"/><text x="83.9080%" y="415.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (4 samples, 0.43%)</title><rect x="83.4416%" y="677" width="0.4329%" height="15" fill="rgb(208,127,28)" fg:x="771" fg:w="4"/><text x="83.6916%" y="687.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (2 samples, 0.22%)</title><rect x="83.6580%" y="661" width="0.2165%" height="15" fill="rgb(224,137,22)" fg:x="773" fg:w="2"/><text x="83.9080%" y="671.50"></text></g><g><title>Security`CSSM_ModuleLoad (2 samples, 0.22%)</title><rect x="83.6580%" y="645" width="0.2165%" height="15" fill="rgb(254,70,32)" fg:x="773" fg:w="2"/><text x="83.9080%" y="655.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (2 samples, 0.22%)</title><rect x="83.6580%" y="629" width="0.2165%" height="15" fill="rgb(229,75,37)" fg:x="773" fg:w="2"/><text x="83.9080%" y="639.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (2 samples, 0.22%)</title><rect x="83.6580%" y="613" width="0.2165%" height="15" fill="rgb(252,64,23)" fg:x="773" fg:w="2"/><text x="83.9080%" y="623.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (2 samples, 0.22%)</title><rect x="83.6580%" y="597" width="0.2165%" height="15" fill="rgb(232,162,48)" fg:x="773" fg:w="2"/><text x="83.9080%" y="607.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (2 samples, 0.22%)</title><rect x="83.6580%" y="581" width="0.2165%" height="15" fill="rgb(246,160,12)" fg:x="773" fg:w="2"/><text x="83.9080%" y="591.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (2 samples, 0.22%)</title><rect x="83.6580%" y="565" width="0.2165%" height="15" fill="rgb(247,166,0)" fg:x="773" fg:w="2"/><text x="83.9080%" y="575.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (2 samples, 0.22%)</title><rect x="83.6580%" y="549" width="0.2165%" height="15" fill="rgb(249,219,21)" fg:x="773" fg:w="2"/><text x="83.9080%" y="559.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (1 samples, 0.11%)</title><rect x="83.7662%" y="533" width="0.1082%" height="15" fill="rgb(205,209,3)" fg:x="774" fg:w="1"/><text x="84.0162%" y="543.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (1 samples, 0.11%)</title><rect x="83.7662%" y="517" width="0.1082%" height="15" fill="rgb(243,44,1)" fg:x="774" fg:w="1"/><text x="84.0162%" y="527.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (1 samples, 0.11%)</title><rect x="83.7662%" y="501" width="0.1082%" height="15" fill="rgb(206,159,16)" fg:x="774" fg:w="1"/><text x="84.0162%" y="511.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::directDbHand (1 samples, 0.11%)</title><rect x="83.7662%" y="485" width="0.1082%" height="15" fill="rgb(244,77,30)" fg:x="774" fg:w="1"/><text x="84.0162%" y="495.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (1 samples, 0.11%)</title><rect x="83.7662%" y="469" width="0.1082%" height="15" fill="rgb(218,69,12)" fg:x="774" fg:w="1"/><text x="84.0162%" y="479.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.11%)</title><rect x="83.7662%" y="453" width="0.1082%" height="15" fill="rgb(212,87,7)" fg:x="774" fg:w="1"/><text x="84.0162%" y="463.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.11%)</title><rect x="83.7662%" y="437" width="0.1082%" height="15" fill="rgb(245,114,25)" fg:x="774" fg:w="1"/><text x="84.0162%" y="447.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.11%)</title><rect x="83.7662%" y="421" width="0.1082%" height="15" fill="rgb(210,61,42)" fg:x="774" fg:w="1"/><text x="84.0162%" y="431.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.11%)</title><rect x="83.7662%" y="405" width="0.1082%" height="15" fill="rgb(211,52,33)" fg:x="774" fg:w="1"/><text x="84.0162%" y="415.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.11%)</title><rect x="83.7662%" y="389" width="0.1082%" height="15" fill="rgb(234,58,33)" fg:x="774" fg:w="1"/><text x="84.0162%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.11%)</title><rect x="83.7662%" y="373" width="0.1082%" height="15" fill="rgb(220,115,36)" fg:x="774" fg:w="1"/><text x="84.0162%" y="383.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (8 samples, 0.87%)</title><rect x="83.1169%" y="725" width="0.8658%" height="15" fill="rgb(243,153,54)" fg:x="768" fg:w="8"/><text x="83.3669%" y="735.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (8 samples, 0.87%)</title><rect x="83.1169%" y="709" width="0.8658%" height="15" fill="rgb(251,47,18)" fg:x="768" fg:w="8"/><text x="83.3669%" y="719.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (5 samples, 0.54%)</title><rect x="83.4416%" y="693" width="0.5411%" height="15" fill="rgb(242,102,42)" fg:x="771" fg:w="5"/><text x="83.6916%" y="703.50"></text></g><g><title>Security`Security::CssmClient::CLImpl&amp; Security::CssmClient::Object::impl&lt;Security::CssmClient::CLImpl&gt; (1 samples, 0.11%)</title><rect x="83.8745%" y="677" width="0.1082%" height="15" fill="rgb(234,31,38)" fg:x="775" fg:w="1"/><text x="84.1245%" y="687.50"></text></g><g><title>libc+ (1 samples, 0.11%)</title><rect x="83.8745%" y="661" width="0.1082%" height="15" fill="rgb(221,117,51)" fg:x="775" fg:w="1"/><text x="84.1245%" y="671.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::required (1 samples, 0.11%)</title><rect x="83.9827%" y="725" width="0.1082%" height="15" fill="rgb(212,20,18)" fg:x="776" fg:w="1"/><text x="84.2327%" y="735.50"></text></g><g><title>libc+ (1 samples, 0.11%)</title><rect x="83.9827%" y="709" width="0.1082%" height="15" fill="rgb(245,133,36)" fg:x="776" fg:w="1"/><text x="84.2327%" y="719.50"></text></g><g><title>Security`Security::SecCFObject::handle (1 samples, 0.11%)</title><rect x="84.0909%" y="725" width="0.1082%" height="15" fill="rgb(212,6,19)" fg:x="777" fg:w="1"/><text x="84.3409%" y="735.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::operator void const* (1 samples, 0.11%)</title><rect x="84.0909%" y="709" width="0.1082%" height="15" fill="rgb(218,1,36)" fg:x="777" fg:w="1"/><text x="84.3409%" y="719.50"></text></g><g><title>Security`SecKeyGetTypeID (1 samples, 0.11%)</title><rect x="84.0909%" y="693" width="0.1082%" height="15" fill="rgb(246,84,54)" fg:x="777" fg:w="1"/><text x="84.3409%" y="703.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.11%)</title><rect x="84.1991%" y="725" width="0.1082%" height="15" fill="rgb(242,110,6)" fg:x="778" fg:w="1"/><text x="84.4491%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="84.1991%" y="709" width="0.1082%" height="15" fill="rgb(214,47,5)" fg:x="778" fg:w="1"/><text x="84.4491%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="84.1991%" y="693" width="0.1082%" height="15" fill="rgb(218,159,25)" fg:x="778" fg:w="1"/><text x="84.4491%" y="703.50"></text></g><g><title>Security`__countLegacyAPI_block_invoke (1 samples, 0.11%)</title><rect x="84.1991%" y="677" width="0.1082%" height="15" fill="rgb(215,211,28)" fg:x="778" fg:w="1"/><text x="84.4491%" y="687.50"></text></g><g><title>Security`+[SecCoreAnalytics sendEventLazy:builder:] (1 samples, 0.11%)</title><rect x="84.1991%" y="661" width="0.1082%" height="15" fill="rgb(238,59,32)" fg:x="778" fg:w="1"/><text x="84.4491%" y="671.50"></text></g><g><title>CoreAnalytics`AnalyticsSendEventLazy (1 samples, 0.11%)</title><rect x="84.1991%" y="645" width="0.1082%" height="15" fill="rgb(226,82,3)" fg:x="778" fg:w="1"/><text x="84.4491%" y="655.50"></text></g><g><title>CoreAnalytics`AnalyticsSendEventInternal(NSString const*, NSDictionary&lt;NSString*, NSObject*&gt;* () block_pointer, XPCMessagePriority, EventPayloadFormat) (1 samples, 0.11%)</title><rect x="84.1991%" y="629" width="0.1082%" height="15" fill="rgb(240,164,32)" fg:x="778" fg:w="1"/><text x="84.4491%" y="639.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::get (1 samples, 0.11%)</title><rect x="84.1991%" y="613" width="0.1082%" height="15" fill="rgb(232,46,7)" fg:x="778" fg:w="1"/><text x="84.4491%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="84.1991%" y="597" width="0.1082%" height="15" fill="rgb(229,129,53)" fg:x="778" fg:w="1"/><text x="84.4491%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="84.1991%" y="581" width="0.1082%" height="15" fill="rgb(234,188,29)" fg:x="778" fg:w="1"/><text x="84.4491%" y="591.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::get (1 samples, 0.11%)</title><rect x="84.1991%" y="565" width="0.1082%" height="15" fill="rgb(246,141,4)" fg:x="778" fg:w="1"/><text x="84.4491%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.11%)</title><rect x="84.1991%" y="549" width="0.1082%" height="15" fill="rgb(229,23,39)" fg:x="778" fg:w="1"/><text x="84.4491%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="84.1991%" y="533" width="0.1082%" height="15" fill="rgb(206,12,3)" fg:x="778" fg:w="1"/><text x="84.4491%" y="543.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::init (1 samples, 0.11%)</title><rect x="84.1991%" y="517" width="0.1082%" height="15" fill="rgb(252,226,20)" fg:x="778" fg:w="1"/><text x="84.4491%" y="527.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::initConnection (1 samples, 0.11%)</title><rect x="84.1991%" y="501" width="0.1082%" height="15" fill="rgb(216,123,35)" fg:x="778" fg:w="1"/><text x="84.4491%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (1 samples, 0.11%)</title><rect x="84.1991%" y="485" width="0.1082%" height="15" fill="rgb(212,68,40)" fg:x="778" fg:w="1"/><text x="84.4491%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (1 samples, 0.11%)</title><rect x="84.1991%" y="469" width="0.1082%" height="15" fill="rgb(254,125,32)" fg:x="778" fg:w="1"/><text x="84.4491%" y="479.50"></text></g><g><title>libxpc.dylib`_xpc_try_mach_port_construct (1 samples, 0.11%)</title><rect x="84.1991%" y="453" width="0.1082%" height="15" fill="rgb(253,97,22)" fg:x="778" fg:w="1"/><text x="84.4491%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_construct_trap (1 samples, 0.11%)</title><rect x="84.1991%" y="437" width="0.1082%" height="15" fill="rgb(241,101,14)" fg:x="778" fg:w="1"/><text x="84.4491%" y="447.50"></text></g><g><title>Security`SecTrustCopyPublicKey (13 samples, 1.41%)</title><rect x="83.0087%" y="757" width="1.4069%" height="15" fill="rgb(238,103,29)" fg:x="767" fg:w="13"/><text x="83.2587%" y="767.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (13 samples, 1.41%)</title><rect x="83.0087%" y="741" width="1.4069%" height="15" fill="rgb(233,195,47)" fg:x="767" fg:w="13"/><text x="83.2587%" y="751.50"></text></g><g><title>Security`countLegacyAPIEnabledForThread (1 samples, 0.11%)</title><rect x="84.3074%" y="725" width="0.1082%" height="15" fill="rgb(246,218,30)" fg:x="779" fg:w="1"/><text x="84.5574%" y="735.50"></text></g><g><title>Foundation`_NSThreadGet0 (1 samples, 0.11%)</title><rect x="84.3074%" y="709" width="0.1082%" height="15" fill="rgb(219,145,47)" fg:x="779" fg:w="1"/><text x="84.5574%" y="719.50"></text></g><g><title>libsystem_platform.dylib`OSAtomicAdd32Barrier (1 samples, 0.11%)</title><rect x="84.3074%" y="693" width="0.1082%" height="15" fill="rgb(243,12,26)" fg:x="779" fg:w="1"/><text x="84.5574%" y="703.50"></text></g><g><title>Security`SecPolicyAddBasicX509Options (1 samples, 0.11%)</title><rect x="84.4156%" y="725" width="0.1082%" height="15" fill="rgb(214,87,16)" fg:x="780" fg:w="1"/><text x="84.6656%" y="735.50"></text></g><g><title>Security`SecPolicyAddBasicCertOptions (1 samples, 0.11%)</title><rect x="84.4156%" y="709" width="0.1082%" height="15" fill="rgb(208,99,42)" fg:x="780" fg:w="1"/><text x="84.6656%" y="719.50"></text></g><g><title>CoreFoundation`-[NSMutableDictionary __addObject:forKey:] (1 samples, 0.11%)</title><rect x="84.4156%" y="693" width="0.1082%" height="15" fill="rgb(253,99,2)" fg:x="780" fg:w="1"/><text x="84.6656%" y="703.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.11%)</title><rect x="84.4156%" y="677" width="0.1082%" height="15" fill="rgb(220,168,23)" fg:x="780" fg:w="1"/><text x="84.6656%" y="687.50"></text></g><g><title>Security`SecTrustCreateWithCertificates (2 samples, 0.22%)</title><rect x="84.4156%" y="757" width="0.2165%" height="15" fill="rgb(242,38,24)" fg:x="780" fg:w="2"/><text x="84.6656%" y="767.50"></text></g><g><title>Security`SecPolicyCreateBasicX509 (2 samples, 0.22%)</title><rect x="84.4156%" y="741" width="0.2165%" height="15" fill="rgb(225,182,9)" fg:x="780" fg:w="2"/><text x="84.6656%" y="751.50"></text></g><g><title>Security`SecPolicyGetTypeID (1 samples, 0.11%)</title><rect x="84.5238%" y="725" width="0.1082%" height="15" fill="rgb(243,178,37)" fg:x="781" fg:w="1"/><text x="84.7738%" y="735.50"></text></g><g><title>libcorecrypto.dylib`ccec_cp_256 (1 samples, 0.11%)</title><rect x="84.6320%" y="757" width="0.1082%" height="15" fill="rgb(232,139,19)" fg:x="782" fg:w="1"/><text x="84.8820%" y="767.50"></text></g><g><title>libcorecrypto.dylib`ccec_import_pub (1 samples, 0.11%)</title><rect x="84.7403%" y="757" width="0.1082%" height="15" fill="rgb(225,201,24)" fg:x="783" fg:w="1"/><text x="84.9903%" y="767.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.11%)</title><rect x="84.8485%" y="709" width="0.1082%" height="15" fill="rgb(221,47,46)" fg:x="784" fg:w="1"/><text x="85.0985%" y="719.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.11%)</title><rect x="84.8485%" y="693" width="0.1082%" height="15" fill="rgb(249,23,13)" fg:x="784" fg:w="1"/><text x="85.0985%" y="703.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.11%)</title><rect x="84.9567%" y="709" width="0.1082%" height="15" fill="rgb(219,9,5)" fg:x="785" fg:w="1"/><text x="85.2067%" y="719.50"></text></g><g><title>Security`SecDERItemHash (1 samples, 0.11%)</title><rect x="84.9567%" y="693" width="0.1082%" height="15" fill="rgb(254,171,16)" fg:x="785" fg:w="1"/><text x="85.2067%" y="703.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.11%)</title><rect x="85.0649%" y="709" width="0.1082%" height="15" fill="rgb(230,171,20)" fg:x="786" fg:w="1"/><text x="85.3149%" y="719.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.11%)</title><rect x="85.0649%" y="693" width="0.1082%" height="15" fill="rgb(210,71,41)" fg:x="786" fg:w="1"/><text x="85.3149%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (1 samples, 0.11%)</title><rect x="85.0649%" y="677" width="0.1082%" height="15" fill="rgb(206,173,20)" fg:x="786" fg:w="1"/><text x="85.3149%" y="687.50"></text></g><g><title>Security`DYLD-STUB$$memcpy (1 samples, 0.11%)</title><rect x="85.1732%" y="709" width="0.1082%" height="15" fill="rgb(233,88,34)" fg:x="787" fg:w="1"/><text x="85.4232%" y="719.50"></text></g><g><title>Security`tls_handshake_message_callback (30 samples, 3.25%)</title><rect x="82.1429%" y="789" width="3.2468%" height="15" fill="rgb(223,209,46)" fg:x="759" fg:w="30"/><text x="82.3929%" y="799.50">Sec..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (30 samples, 3.25%)</title><rect x="82.1429%" y="773" width="3.2468%" height="15" fill="rgb(250,43,18)" fg:x="759" fg:w="30"/><text x="82.3929%" y="783.50">lib..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (5 samples, 0.54%)</title><rect x="84.8485%" y="757" width="0.5411%" height="15" fill="rgb(208,13,10)" fg:x="784" fg:w="5"/><text x="85.0985%" y="767.50"></text></g><g><title>Security`SecCertificateCreateWithData (5 samples, 0.54%)</title><rect x="84.8485%" y="741" width="0.5411%" height="15" fill="rgb(212,200,36)" fg:x="784" fg:w="5"/><text x="85.0985%" y="751.50"></text></g><g><title>Security`SecCertificateParse (5 samples, 0.54%)</title><rect x="84.8485%" y="725" width="0.5411%" height="15" fill="rgb(225,90,30)" fg:x="784" fg:w="5"/><text x="85.0985%" y="735.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (1 samples, 0.11%)</title><rect x="85.2814%" y="709" width="0.1082%" height="15" fill="rgb(236,182,39)" fg:x="788" fg:w="1"/><text x="85.5314%" y="719.50"></text></g><g><title>Security`parseGeneralNamesContent (1 samples, 0.11%)</title><rect x="85.2814%" y="693" width="0.1082%" height="15" fill="rgb(212,144,35)" fg:x="788" fg:w="1"/><text x="85.5314%" y="703.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (1 samples, 0.11%)</title><rect x="85.2814%" y="677" width="0.1082%" height="15" fill="rgb(228,63,44)" fg:x="788" fg:w="1"/><text x="85.5314%" y="687.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (1 samples, 0.11%)</title><rect x="85.2814%" y="661" width="0.1082%" height="15" fill="rgb(228,109,6)" fg:x="788" fg:w="1"/><text x="85.5314%" y="671.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.11%)</title><rect x="85.2814%" y="645" width="0.1082%" height="15" fill="rgb(238,117,24)" fg:x="788" fg:w="1"/><text x="85.5314%" y="655.50"></text></g><g><title>CoreFoundation`_parseComponents (1 samples, 0.11%)</title><rect x="85.2814%" y="629" width="0.1082%" height="15" fill="rgb(242,26,26)" fg:x="788" fg:w="1"/><text x="85.5314%" y="639.50"></text></g><g><title>Security`tls_verify_peer_cert (1 samples, 0.11%)</title><rect x="85.3896%" y="789" width="0.1082%" height="15" fill="rgb(221,92,48)" fg:x="789" fg:w="1"/><text x="85.6396%" y="799.50"></text></g><g><title>Security`sslCreateSecTrust (1 samples, 0.11%)</title><rect x="85.3896%" y="773" width="0.1082%" height="15" fill="rgb(209,209,32)" fg:x="789" fg:w="1"/><text x="85.6396%" y="783.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_peer_trust (1 samples, 0.11%)</title><rect x="85.3896%" y="757" width="0.1082%" height="15" fill="rgb(221,70,22)" fg:x="789" fg:w="1"/><text x="85.6396%" y="767.50"></text></g><g><title>CoreFoundation`CFStringGetTypeID (1 samples, 0.11%)</title><rect x="85.3896%" y="741" width="0.1082%" height="15" fill="rgb(248,145,5)" fg:x="789" fg:w="1"/><text x="85.6396%" y="751.50"></text></g><g><title>libcoretls.dylib`HashSHA512Update (1 samples, 0.11%)</title><rect x="85.4978%" y="789" width="0.1082%" height="15" fill="rgb(226,116,26)" fg:x="790" fg:w="1"/><text x="85.7478%" y="799.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (1 samples, 0.11%)</title><rect x="85.4978%" y="773" width="0.1082%" height="15" fill="rgb(244,5,17)" fg:x="790" fg:w="1"/><text x="85.7478%" y="783.50"></text></g><g><title>libcoretls.dylib`SSLSendFlight (1 samples, 0.11%)</title><rect x="85.6061%" y="773" width="0.1082%" height="15" fill="rgb(252,159,33)" fg:x="791" fg:w="1"/><text x="85.8561%" y="783.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.11%)</title><rect x="85.7143%" y="677" width="0.1082%" height="15" fill="rgb(206,71,0)" fg:x="792" fg:w="1"/><text x="85.9643%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.11%)</title><rect x="85.7143%" y="661" width="0.1082%" height="15" fill="rgb(233,118,54)" fg:x="792" fg:w="1"/><text x="85.9643%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 0.11%)</title><rect x="85.7143%" y="645" width="0.1082%" height="15" fill="rgb(234,83,48)" fg:x="792" fg:w="1"/><text x="85.9643%" y="655.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.11%)</title><rect x="85.7143%" y="629" width="0.1082%" height="15" fill="rgb(228,3,54)" fg:x="792" fg:w="1"/><text x="85.9643%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_dispose (1 samples, 0.11%)</title><rect x="85.7143%" y="613" width="0.1082%" height="15" fill="rgb(226,155,13)" fg:x="792" fg:w="1"/><text x="85.9643%" y="623.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (2 samples, 0.22%)</title><rect x="85.7143%" y="693" width="0.2165%" height="15" fill="rgb(241,28,37)" fg:x="792" fg:w="2"/><text x="85.9643%" y="703.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.11%)</title><rect x="85.8225%" y="677" width="0.1082%" height="15" fill="rgb(233,93,10)" fg:x="793" fg:w="1"/><text x="86.0725%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (1 samples, 0.11%)</title><rect x="85.8225%" y="661" width="0.1082%" height="15" fill="rgb(225,113,19)" fg:x="793" fg:w="1"/><text x="86.0725%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.11%)</title><rect x="85.8225%" y="645" width="0.1082%" height="15" fill="rgb(241,2,18)" fg:x="793" fg:w="1"/><text x="86.0725%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.11%)</title><rect x="85.8225%" y="629" width="0.1082%" height="15" fill="rgb(228,207,21)" fg:x="793" fg:w="1"/><text x="86.0725%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.11%)</title><rect x="85.8225%" y="613" width="0.1082%" height="15" fill="rgb(213,211,35)" fg:x="793" fg:w="1"/><text x="86.0725%" y="623.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.11%)</title><rect x="85.8225%" y="597" width="0.1082%" height="15" fill="rgb(209,83,10)" fg:x="793" fg:w="1"/><text x="86.0725%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_null_serialize (1 samples, 0.11%)</title><rect x="85.8225%" y="581" width="0.1082%" height="15" fill="rgb(209,164,1)" fg:x="793" fg:w="1"/><text x="86.0725%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.11%)</title><rect x="85.8225%" y="565" width="0.1082%" height="15" fill="rgb(213,184,43)" fg:x="793" fg:w="1"/><text x="86.0725%" y="575.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (4 samples, 0.43%)</title><rect x="85.6061%" y="789" width="0.4329%" height="15" fill="rgb(231,61,34)" fg:x="791" fg:w="4"/><text x="85.8561%" y="799.50"></text></g><g><title>libcoretls.dylib`tls_metric_client_finished (3 samples, 0.32%)</title><rect x="85.7143%" y="773" width="0.3247%" height="15" fill="rgb(235,75,3)" fg:x="792" fg:w="3"/><text x="85.9643%" y="783.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_add_string (3 samples, 0.32%)</title><rect x="85.7143%" y="757" width="0.3247%" height="15" fill="rgb(220,106,47)" fg:x="792" fg:w="3"/><text x="85.9643%" y="767.50"></text></g><g><title>libsystem_asl.dylib`asl_log (3 samples, 0.32%)</title><rect x="85.7143%" y="741" width="0.3247%" height="15" fill="rgb(210,196,33)" fg:x="792" fg:w="3"/><text x="85.9643%" y="751.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (3 samples, 0.32%)</title><rect x="85.7143%" y="725" width="0.3247%" height="15" fill="rgb(229,154,42)" fg:x="792" fg:w="3"/><text x="85.9643%" y="735.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (3 samples, 0.32%)</title><rect x="85.7143%" y="709" width="0.3247%" height="15" fill="rgb(228,114,26)" fg:x="792" fg:w="3"/><text x="85.9643%" y="719.50"></text></g><g><title>libsystem_asl.dylib`_asl_server_message (1 samples, 0.11%)</title><rect x="85.9307%" y="693" width="0.1082%" height="15" fill="rgb(208,144,1)" fg:x="794" fg:w="1"/><text x="86.1807%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.11%)</title><rect x="85.9307%" y="677" width="0.1082%" height="15" fill="rgb(239,112,37)" fg:x="794" fg:w="1"/><text x="86.1807%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.11%)</title><rect x="85.9307%" y="661" width="0.1082%" height="15" fill="rgb(210,96,50)" fg:x="794" fg:w="1"/><text x="86.1807%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.11%)</title><rect x="85.9307%" y="645" width="0.1082%" height="15" fill="rgb(222,178,2)" fg:x="794" fg:w="1"/><text x="86.1807%" y="655.50"></text></g><g><title>libcoretls.dylib`SSLProcessCertificate (1 samples, 0.11%)</title><rect x="86.0390%" y="773" width="0.1082%" height="15" fill="rgb(226,74,18)" fg:x="795" fg:w="1"/><text x="86.2890%" y="783.50"></text></g><g><title>libcoretls.dylib`SSLDecodeBufferList (1 samples, 0.11%)</title><rect x="86.0390%" y="757" width="0.1082%" height="15" fill="rgb(225,67,54)" fg:x="795" fg:w="1"/><text x="86.2890%" y="767.50"></text></g><g><title>libcoretls.dylib`SSLAllocBuffer (1 samples, 0.11%)</title><rect x="86.0390%" y="741" width="0.1082%" height="15" fill="rgb(251,92,32)" fg:x="795" fg:w="1"/><text x="86.2890%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="86.0390%" y="725" width="0.1082%" height="15" fill="rgb(228,149,22)" fg:x="795" fg:w="1"/><text x="86.2890%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.11%)</title><rect x="86.0390%" y="709" width="0.1082%" height="15" fill="rgb(243,54,13)" fg:x="795" fg:w="1"/><text x="86.2890%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.11%)</title><rect x="86.0390%" y="693" width="0.1082%" height="15" fill="rgb(243,180,28)" fg:x="795" fg:w="1"/><text x="86.2890%" y="703.50"></text></g><g><title>libcoretls.dylib`CloneHashState (1 samples, 0.11%)</title><rect x="86.1472%" y="741" width="0.1082%" height="15" fill="rgb(208,167,24)" fg:x="796" fg:w="1"/><text x="86.3972%" y="751.50"></text></g><g><title>libcoretls.dylib`SSLProcessFinished (2 samples, 0.22%)</title><rect x="86.1472%" y="773" width="0.2165%" height="15" fill="rgb(245,73,45)" fg:x="796" fg:w="2"/><text x="86.3972%" y="783.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (2 samples, 0.22%)</title><rect x="86.1472%" y="757" width="0.2165%" height="15" fill="rgb(237,203,48)" fg:x="796" fg:w="2"/><text x="86.3972%" y="767.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.11%)</title><rect x="86.2554%" y="741" width="0.1082%" height="15" fill="rgb(211,197,16)" fg:x="797" fg:w="1"/><text x="86.5054%" y="751.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.11%)</title><rect x="86.2554%" y="725" width="0.1082%" height="15" fill="rgb(243,99,51)" fg:x="797" fg:w="1"/><text x="86.5054%" y="735.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.11%)</title><rect x="86.2554%" y="709" width="0.1082%" height="15" fill="rgb(215,123,29)" fg:x="797" fg:w="1"/><text x="86.5054%" y="719.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (1 samples, 0.11%)</title><rect x="86.2554%" y="693" width="0.1082%" height="15" fill="rgb(239,186,37)" fg:x="797" fg:w="1"/><text x="86.5054%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (1 samples, 0.11%)</title><rect x="86.2554%" y="677" width="0.1082%" height="15" fill="rgb(252,136,39)" fg:x="797" fg:w="1"/><text x="86.5054%" y="687.50"></text></g><g><title>libcorecrypto.dylib`cc_clear (1 samples, 0.11%)</title><rect x="86.2554%" y="661" width="0.1082%" height="15" fill="rgb(223,213,32)" fg:x="797" fg:w="1"/><text x="86.5054%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_add_asm (2 samples, 0.22%)</title><rect x="86.4719%" y="645" width="0.2165%" height="15" fill="rgb(233,115,5)" fg:x="799" fg:w="2"/><text x="86.7219%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.11%)</title><rect x="86.6883%" y="645" width="0.1082%" height="15" fill="rgb(207,226,44)" fg:x="801" fg:w="1"/><text x="86.9383%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.11%)</title><rect x="86.7965%" y="645" width="0.1082%" height="15" fill="rgb(208,126,0)" fg:x="802" fg:w="1"/><text x="87.0465%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (5 samples, 0.54%)</title><rect x="86.4719%" y="661" width="0.5411%" height="15" fill="rgb(244,66,21)" fg:x="799" fg:w="5"/><text x="86.7219%" y="671.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.11%)</title><rect x="86.9048%" y="645" width="0.1082%" height="15" fill="rgb(222,97,12)" fg:x="803" fg:w="1"/><text x="87.1548%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (2 samples, 0.22%)</title><rect x="87.0130%" y="645" width="0.2165%" height="15" fill="rgb(219,213,19)" fg:x="804" fg:w="2"/><text x="87.2630%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_normalized_ws (4 samples, 0.43%)</title><rect x="87.0130%" y="661" width="0.4329%" height="15" fill="rgb(252,169,30)" fg:x="804" fg:w="4"/><text x="87.2630%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (2 samples, 0.22%)</title><rect x="87.2294%" y="645" width="0.2165%" height="15" fill="rgb(206,32,51)" fg:x="806" fg:w="2"/><text x="87.4794%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (2 samples, 0.22%)</title><rect x="87.4459%" y="645" width="0.2165%" height="15" fill="rgb(250,172,42)" fg:x="808" fg:w="2"/><text x="87.6959%" y="655.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.11%)</title><rect x="87.5541%" y="629" width="0.1082%" height="15" fill="rgb(209,34,43)" fg:x="809" fg:w="1"/><text x="87.8041%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.11%)</title><rect x="87.5541%" y="613" width="0.1082%" height="15" fill="rgb(223,11,35)" fg:x="809" fg:w="1"/><text x="87.8041%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_sub_normalized_ws (6 samples, 0.65%)</title><rect x="87.4459%" y="661" width="0.6494%" height="15" fill="rgb(251,219,26)" fg:x="808" fg:w="6"/><text x="87.6959%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (4 samples, 0.43%)</title><rect x="87.6623%" y="645" width="0.4329%" height="15" fill="rgb(231,119,3)" fg:x="810" fg:w="4"/><text x="87.9123%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (2 samples, 0.22%)</title><rect x="88.0952%" y="661" width="0.2165%" height="15" fill="rgb(216,97,11)" fg:x="814" fg:w="2"/><text x="88.3452%" y="671.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeMessage (25 samples, 2.71%)</title><rect x="86.0390%" y="789" width="2.7056%" height="15" fill="rgb(223,59,9)" fg:x="795" fg:w="25"/><text x="86.2890%" y="799.50">li..</text></g><g><title>libcoretls.dylib`SSLProcessServerKeyExchange (22 samples, 2.38%)</title><rect x="86.3636%" y="773" width="2.3810%" height="15" fill="rgb(233,93,31)" fg:x="798" fg:w="22"/><text x="86.6136%" y="783.50">li..</text></g><g><title>libcoretls.dylib`sslRawVerify (22 samples, 2.38%)</title><rect x="86.3636%" y="757" width="2.3810%" height="15" fill="rgb(239,81,33)" fg:x="798" fg:w="22"/><text x="86.6136%" y="767.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_verify (22 samples, 2.38%)</title><rect x="86.3636%" y="741" width="2.3810%" height="15" fill="rgb(213,120,34)" fg:x="798" fg:w="22"/><text x="86.6136%" y="751.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest (22 samples, 2.38%)</title><rect x="86.3636%" y="725" width="2.3810%" height="15" fill="rgb(243,49,53)" fg:x="798" fg:w="22"/><text x="86.6136%" y="735.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest_ws (22 samples, 2.38%)</title><rect x="86.3636%" y="709" width="2.3810%" height="15" fill="rgb(247,216,33)" fg:x="798" fg:w="22"/><text x="86.6136%" y="719.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (22 samples, 2.38%)</title><rect x="86.3636%" y="693" width="2.3810%" height="15" fill="rgb(226,26,14)" fg:x="798" fg:w="22"/><text x="86.6136%" y="703.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (22 samples, 2.38%)</title><rect x="86.3636%" y="677" width="2.3810%" height="15" fill="rgb(215,49,53)" fg:x="798" fg:w="22"/><text x="86.6136%" y="687.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (4 samples, 0.43%)</title><rect x="88.3117%" y="661" width="0.4329%" height="15" fill="rgb(245,162,40)" fg:x="816" fg:w="4"/><text x="88.5617%" y="671.50"></text></g><g><title>libcoretls.dylib`HashSHA1Update (1 samples, 0.11%)</title><rect x="88.7446%" y="773" width="0.1082%" height="15" fill="rgb(229,68,17)" fg:x="820" fg:w="1"/><text x="88.9946%" y="783.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA1_compress (1 samples, 0.11%)</title><rect x="88.7446%" y="757" width="0.1082%" height="15" fill="rgb(213,182,10)" fg:x="820" fg:w="1"/><text x="88.9946%" y="767.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (1 samples, 0.11%)</title><rect x="88.8528%" y="757" width="0.1082%" height="15" fill="rgb(245,125,30)" fg:x="821" fg:w="1"/><text x="89.1028%" y="767.50"></text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (3 samples, 0.32%)</title><rect x="88.7446%" y="789" width="0.3247%" height="15" fill="rgb(232,202,2)" fg:x="820" fg:w="3"/><text x="88.9946%" y="799.50"></text></g><g><title>libcoretls.dylib`HashSHA384Update (2 samples, 0.22%)</title><rect x="88.8528%" y="773" width="0.2165%" height="15" fill="rgb(237,140,51)" fg:x="821" fg:w="2"/><text x="89.1028%" y="783.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.11%)</title><rect x="88.9610%" y="757" width="0.1082%" height="15" fill="rgb(236,157,25)" fg:x="822" fg:w="1"/><text x="89.2110%" y="767.50"></text></g><g><title>Security`SSLHandshake (185 samples, 20.02%)</title><rect x="69.1558%" y="853" width="20.0216%" height="15" fill="rgb(219,209,0)" fg:x="639" fg:w="185"/><text x="69.4058%" y="863.50">Security`SSLHandshake</text></g><g><title>Security`SSLHandshakeProceed (185 samples, 20.02%)</title><rect x="69.1558%" y="837" width="20.0216%" height="15" fill="rgb(240,116,54)" fg:x="639" fg:w="185"/><text x="69.4058%" y="847.50">Security`SSLHandshakeProceed</text></g><g><title>libcoretls.dylib`tls_handshake_process (67 samples, 7.25%)</title><rect x="81.9264%" y="821" width="7.2511%" height="15" fill="rgb(216,10,36)" fg:x="757" fg:w="67"/><text x="82.1764%" y="831.50">libcoretls..</text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (66 samples, 7.14%)</title><rect x="82.0346%" y="805" width="7.1429%" height="15" fill="rgb(222,72,44)" fg:x="758" fg:w="66"/><text x="82.2846%" y="815.50">libcoretls..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (1 samples, 0.11%)</title><rect x="89.0693%" y="789" width="0.1082%" height="15" fill="rgb(232,159,9)" fg:x="823" fg:w="1"/><text x="89.3193%" y="799.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKey (1 samples, 0.11%)</title><rect x="89.1775%" y="805" width="0.1082%" height="15" fill="rgb(210,39,32)" fg:x="824" fg:w="1"/><text x="89.4275%" y="815.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$dispatch_data_create (1 samples, 0.11%)</title><rect x="89.3939%" y="565" width="0.1082%" height="15" fill="rgb(216,194,45)" fg:x="826" fg:w="1"/><text x="89.6439%" y="575.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data_empty retain] (1 samples, 0.11%)</title><rect x="89.5022%" y="565" width="0.1082%" height="15" fill="rgb(218,18,35)" fg:x="827" fg:w="1"/><text x="89.7522%" y="575.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (4 samples, 0.43%)</title><rect x="89.2857%" y="597" width="0.4329%" height="15" fill="rgb(207,83,51)" fg:x="825" fg:w="4"/><text x="89.5357%" y="607.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (3 samples, 0.32%)</title><rect x="89.3939%" y="581" width="0.3247%" height="15" fill="rgb(225,63,43)" fg:x="826" fg:w="3"/><text x="89.6439%" y="591.50"></text></g><g><title>libxpc.dylib`xpc_string_create (1 samples, 0.11%)</title><rect x="89.6104%" y="565" width="0.1082%" height="15" fill="rgb(207,57,36)" fg:x="828" fg:w="1"/><text x="89.8604%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.11%)</title><rect x="89.6104%" y="549" width="0.1082%" height="15" fill="rgb(216,99,33)" fg:x="828" fg:w="1"/><text x="89.8604%" y="559.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke (5 samples, 0.54%)</title><rect x="89.2857%" y="677" width="0.5411%" height="15" fill="rgb(225,42,16)" fg:x="825" fg:w="5"/><text x="89.5357%" y="687.50"></text></g><g><title>Security`SecXPCDictionarySetPolicies (5 samples, 0.54%)</title><rect x="89.2857%" y="661" width="0.5411%" height="15" fill="rgb(220,201,45)" fg:x="825" fg:w="5"/><text x="89.5357%" y="671.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (5 samples, 0.54%)</title><rect x="89.2857%" y="645" width="0.5411%" height="15" fill="rgb(225,33,4)" fg:x="825" fg:w="5"/><text x="89.5357%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __apply:context:] (5 samples, 0.54%)</title><rect x="89.2857%" y="629" width="0.5411%" height="15" fill="rgb(224,33,50)" fg:x="825" fg:w="5"/><text x="89.5357%" y="639.50"></text></g><g><title>CoreFoundation`__CFXPCDictionaryApplier (5 samples, 0.54%)</title><rect x="89.2857%" y="613" width="0.5411%" height="15" fill="rgb(246,198,51)" fg:x="825" fg:w="5"/><text x="89.5357%" y="623.50"></text></g><g><title>libxpc.dylib`xpc_array_create (1 samples, 0.11%)</title><rect x="89.7186%" y="597" width="0.1082%" height="15" fill="rgb(205,22,4)" fg:x="829" fg:w="1"/><text x="89.9686%" y="607.50"></text></g><g><title>Security`SecXPCDictionaryCopyArrayOptional (1 samples, 0.11%)</title><rect x="89.8268%" y="661" width="0.1082%" height="15" fill="rgb(206,3,8)" fg:x="830" fg:w="1"/><text x="90.0768%" y="671.50"></text></g><g><title>Security`SecXPCDictionaryCopyArray (1 samples, 0.11%)</title><rect x="89.8268%" y="645" width="0.1082%" height="15" fill="rgb(251,23,15)" fg:x="830" fg:w="1"/><text x="90.0768%" y="655.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (1 samples, 0.11%)</title><rect x="89.8268%" y="629" width="0.1082%" height="15" fill="rgb(252,88,28)" fg:x="830" fg:w="1"/><text x="90.0768%" y="639.50"></text></g><g><title>CoreFoundation`CFRelease (1 samples, 0.11%)</title><rect x="89.8268%" y="613" width="0.1082%" height="15" fill="rgb(212,127,14)" fg:x="830" fg:w="1"/><text x="90.0768%" y="623.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.11%)</title><rect x="89.9351%" y="597" width="0.1082%" height="15" fill="rgb(247,145,37)" fg:x="831" fg:w="1"/><text x="90.1851%" y="607.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (1 samples, 0.11%)</title><rect x="90.0433%" y="597" width="0.1082%" height="15" fill="rgb(209,117,53)" fg:x="832" fg:w="1"/><text x="90.2933%" y="607.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (1 samples, 0.11%)</title><rect x="90.0433%" y="581" width="0.1082%" height="15" fill="rgb(212,90,42)" fg:x="832" fg:w="1"/><text x="90.2933%" y="591.50"></text></g><g><title>Security`SecXPCDictionaryCopyChainOptional (3 samples, 0.32%)</title><rect x="89.9351%" y="661" width="0.3247%" height="15" fill="rgb(218,164,37)" fg:x="831" fg:w="3"/><text x="90.1851%" y="671.50"></text></g><g><title>Security`SecCertificateCreateWithXPCArrayAtIndex (3 samples, 0.32%)</title><rect x="89.9351%" y="645" width="0.3247%" height="15" fill="rgb(246,65,34)" fg:x="831" fg:w="3"/><text x="90.1851%" y="655.50"></text></g><g><title>Security`SecCertificateCreateWithBytes (3 samples, 0.32%)</title><rect x="89.9351%" y="629" width="0.3247%" height="15" fill="rgb(231,100,33)" fg:x="831" fg:w="3"/><text x="90.1851%" y="639.50"></text></g><g><title>Security`SecCertificateParse (3 samples, 0.32%)</title><rect x="89.9351%" y="613" width="0.3247%" height="15" fill="rgb(228,126,14)" fg:x="831" fg:w="3"/><text x="90.1851%" y="623.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.11%)</title><rect x="90.1515%" y="597" width="0.1082%" height="15" fill="rgb(215,173,21)" fg:x="833" fg:w="1"/><text x="90.4015%" y="607.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (1 samples, 0.11%)</title><rect x="90.1515%" y="581" width="0.1082%" height="15" fill="rgb(210,6,40)" fg:x="833" fg:w="1"/><text x="90.4015%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.11%)</title><rect x="90.1515%" y="565" width="0.1082%" height="15" fill="rgb(212,48,18)" fg:x="833" fg:w="1"/><text x="90.4015%" y="575.50"></text></g><g><title>CoreFoundation`CFDictionaryAddValue (1 samples, 0.11%)</title><rect x="90.2597%" y="581" width="0.1082%" height="15" fill="rgb(230,214,11)" fg:x="834" fg:w="1"/><text x="90.5097%" y="591.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.11%)</title><rect x="90.2597%" y="565" width="0.1082%" height="15" fill="rgb(254,105,39)" fg:x="834" fg:w="1"/><text x="90.5097%" y="575.50"></text></g><g><title>Security`__SecCFCalendarDoWithZuluCalendar_block_invoke (1 samples, 0.11%)</title><rect x="90.3680%" y="485" width="0.1082%" height="15" fill="rgb(245,158,5)" fg:x="835" fg:w="1"/><text x="90.6180%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="90.3680%" y="469" width="0.1082%" height="15" fill="rgb(249,208,11)" fg:x="835" fg:w="1"/><text x="90.6180%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="90.3680%" y="453" width="0.1082%" height="15" fill="rgb(210,39,28)" fg:x="835" fg:w="1"/><text x="90.6180%" y="463.50"></text></g><g><title>Security`__SecCFCalendarGetZulu_block_invoke (1 samples, 0.11%)</title><rect x="90.3680%" y="437" width="0.1082%" height="15" fill="rgb(211,56,53)" fg:x="835" fg:w="1"/><text x="90.6180%" y="447.50"></text></g><g><title>CoreFoundation`_CFCalendarCreate (1 samples, 0.11%)</title><rect x="90.3680%" y="421" width="0.1082%" height="15" fill="rgb(226,201,30)" fg:x="835" fg:w="1"/><text x="90.6180%" y="431.50"></text></g><g><title>CoreFoundation`_CFCalendarInitialize (1 samples, 0.11%)</title><rect x="90.3680%" y="405" width="0.1082%" height="15" fill="rgb(239,101,34)" fg:x="835" fg:w="1"/><text x="90.6180%" y="415.50"></text></g><g><title>CoreFoundation`__CFCalendarCreateUCalendar (1 samples, 0.11%)</title><rect x="90.3680%" y="389" width="0.1082%" height="15" fill="rgb(226,209,5)" fg:x="835" fg:w="1"/><text x="90.6180%" y="399.50"></text></g><g><title>CoreFoundation`__cficu_ucal_open (1 samples, 0.11%)</title><rect x="90.3680%" y="373" width="0.1082%" height="15" fill="rgb(250,105,47)" fg:x="835" fg:w="1"/><text x="90.6180%" y="383.50"></text></g><g><title>libicucore.A.dylib`ucal_open (1 samples, 0.11%)</title><rect x="90.3680%" y="357" width="0.1082%" height="15" fill="rgb(230,72,3)" fg:x="835" fg:w="1"/><text x="90.6180%" y="367.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::createInstance (1 samples, 0.11%)</title><rect x="90.3680%" y="341" width="0.1082%" height="15" fill="rgb(232,218,39)" fg:x="835" fg:w="1"/><text x="90.6180%" y="351.50"></text></g><g><title>libicucore.A.dylib`0x00000001a6163564 (1 samples, 0.11%)</title><rect x="90.3680%" y="325" width="0.1082%" height="15" fill="rgb(248,166,6)" fg:x="835" fg:w="1"/><text x="90.6180%" y="335.50"></text></g><g><title>libicucore.A.dylib`0x00000001a616863c (1 samples, 0.11%)</title><rect x="90.3680%" y="309" width="0.1082%" height="15" fill="rgb(247,89,20)" fg:x="835" fg:w="1"/><text x="90.6180%" y="319.50"></text></g><g><title>libicucore.A.dylib`icu::UnifiedCache::_get (1 samples, 0.11%)</title><rect x="90.3680%" y="293" width="0.1082%" height="15" fill="rgb(248,130,54)" fg:x="835" fg:w="1"/><text x="90.6180%" y="303.50"></text></g><g><title>libicucore.A.dylib`icu::LocaleCacheKey&lt;icu::SharedCalendar&gt;::createObject (1 samples, 0.11%)</title><rect x="90.3680%" y="277" width="0.1082%" height="15" fill="rgb(234,196,4)" fg:x="835" fg:w="1"/><text x="90.6180%" y="287.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::makeInstance (1 samples, 0.11%)</title><rect x="90.3680%" y="261" width="0.1082%" height="15" fill="rgb(250,143,31)" fg:x="835" fg:w="1"/><text x="90.6180%" y="271.50"></text></g><g><title>libicucore.A.dylib`icu::GregorianCalendar::GregorianCalendar (1 samples, 0.11%)</title><rect x="90.3680%" y="245" width="0.1082%" height="15" fill="rgb(211,110,34)" fg:x="835" fg:w="1"/><text x="90.6180%" y="255.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::Calendar (1 samples, 0.11%)</title><rect x="90.3680%" y="229" width="0.1082%" height="15" fill="rgb(215,124,48)" fg:x="835" fg:w="1"/><text x="90.6180%" y="239.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::setWeekData (1 samples, 0.11%)</title><rect x="90.3680%" y="213" width="0.1082%" height="15" fill="rgb(216,46,13)" fg:x="835" fg:w="1"/><text x="90.6180%" y="223.50"></text></g><g><title>libicucore.A.dylib`icu::Locale::minimizeSubtags (1 samples, 0.11%)</title><rect x="90.3680%" y="197" width="0.1082%" height="15" fill="rgb(205,184,25)" fg:x="835" fg:w="1"/><text x="90.6180%" y="207.50"></text></g><g><title>libicucore.A.dylib`ulocimp_minimizeSubtags (1 samples, 0.11%)</title><rect x="90.3680%" y="181" width="0.1082%" height="15" fill="rgb(228,1,10)" fg:x="835" fg:w="1"/><text x="90.6180%" y="191.50"></text></g><g><title>libicucore.A.dylib`0x00000001a609d4a8 (1 samples, 0.11%)</title><rect x="90.3680%" y="165" width="0.1082%" height="15" fill="rgb(213,116,27)" fg:x="835" fg:w="1"/><text x="90.6180%" y="175.50"></text></g><g><title>libicucore.A.dylib`0x00000001a609e588 (1 samples, 0.11%)</title><rect x="90.3680%" y="149" width="0.1082%" height="15" fill="rgb(241,95,50)" fg:x="835" fg:w="1"/><text x="90.6180%" y="159.50"></text></g><g><title>libicucore.A.dylib`0x00000001a609ea94 (1 samples, 0.11%)</title><rect x="90.3680%" y="133" width="0.1082%" height="15" fill="rgb(238,48,32)" fg:x="835" fg:w="1"/><text x="90.6180%" y="143.50"></text></g><g><title>libicucore.A.dylib`0x00000001a6137378 (1 samples, 0.11%)</title><rect x="90.3680%" y="117" width="0.1082%" height="15" fill="rgb(235,113,49)" fg:x="835" fg:w="1"/><text x="90.6180%" y="127.50"></text></g><g><title>libicucore.A.dylib`0x00000001a613a0e4 (1 samples, 0.11%)</title><rect x="90.3680%" y="101" width="0.1082%" height="15" fill="rgb(205,127,43)" fg:x="835" fg:w="1"/><text x="90.6180%" y="111.50"></text></g><g><title>libicucore.A.dylib`0x00000001a613ac2c (1 samples, 0.11%)</title><rect x="90.3680%" y="85" width="0.1082%" height="15" fill="rgb(250,162,2)" fg:x="835" fg:w="1"/><text x="90.6180%" y="95.50"></text></g><g><title>libicucore.A.dylib`0x00000001a610be3c (1 samples, 0.11%)</title><rect x="90.3680%" y="69" width="0.1082%" height="15" fill="rgb(220,13,41)" fg:x="835" fg:w="1"/><text x="90.6180%" y="79.50"></text></g><g><title>libicucore.A.dylib`0x00000001a610c94c (1 samples, 0.11%)</title><rect x="90.3680%" y="53" width="0.1082%" height="15" fill="rgb(249,221,25)" fg:x="835" fg:w="1"/><text x="90.6180%" y="63.50"></text></g><g><title>libicucore.A.dylib`0x00000001a610cfb4 (1 samples, 0.11%)</title><rect x="90.3680%" y="37" width="0.1082%" height="15" fill="rgb(215,208,19)" fg:x="835" fg:w="1"/><text x="90.6180%" y="47.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::computeZoneOffset (1 samples, 0.11%)</title><rect x="90.5844%" y="373" width="0.1082%" height="15" fill="rgb(236,175,2)" fg:x="837" fg:w="1"/><text x="90.8344%" y="383.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::getBasicTimeZone (1 samples, 0.11%)</title><rect x="90.5844%" y="357" width="0.1082%" height="15" fill="rgb(241,52,2)" fg:x="837" fg:w="1"/><text x="90.8344%" y="367.50"></text></g><g><title>CoreFoundation`__cficu_ucal_getMillis (2 samples, 0.22%)</title><rect x="90.5844%" y="437" width="0.2165%" height="15" fill="rgb(248,140,14)" fg:x="837" fg:w="2"/><text x="90.8344%" y="447.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::getTimeInMillis (2 samples, 0.22%)</title><rect x="90.5844%" y="421" width="0.2165%" height="15" fill="rgb(253,22,42)" fg:x="837" fg:w="2"/><text x="90.8344%" y="431.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::updateTime (2 samples, 0.22%)</title><rect x="90.5844%" y="405" width="0.2165%" height="15" fill="rgb(234,61,47)" fg:x="837" fg:w="2"/><text x="90.8344%" y="415.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::computeTime (2 samples, 0.22%)</title><rect x="90.5844%" y="389" width="0.2165%" height="15" fill="rgb(208,226,15)" fg:x="837" fg:w="2"/><text x="90.8344%" y="399.50"></text></g><g><title>libicucore.A.dylib`icu::GregorianCalendar::handleComputeJulianDay (1 samples, 0.11%)</title><rect x="90.6926%" y="373" width="0.1082%" height="15" fill="rgb(217,221,4)" fg:x="838" fg:w="1"/><text x="90.9426%" y="383.50"></text></g><g><title>libicucore.A.dylib`icu::GregorianCalendar::handleGetExtendedYear (1 samples, 0.11%)</title><rect x="90.6926%" y="357" width="0.1082%" height="15" fill="rgb(212,174,34)" fg:x="838" fg:w="1"/><text x="90.9426%" y="367.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (10 samples, 1.08%)</title><rect x="89.8268%" y="677" width="1.0823%" height="15" fill="rgb(253,83,4)" fg:x="830" fg:w="10"/><text x="90.0768%" y="687.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (6 samples, 0.65%)</title><rect x="90.2597%" y="661" width="0.6494%" height="15" fill="rgb(250,195,49)" fg:x="834" fg:w="6"/><text x="90.5097%" y="671.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryAndPossiblyMutateMessage (6 samples, 0.65%)</title><rect x="90.2597%" y="645" width="0.6494%" height="15" fill="rgb(241,192,25)" fg:x="834" fg:w="6"/><text x="90.5097%" y="655.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (6 samples, 0.65%)</title><rect x="90.2597%" y="629" width="0.6494%" height="15" fill="rgb(208,124,10)" fg:x="834" fg:w="6"/><text x="90.5097%" y="639.50"></text></g><g><title>Security`der_decode_plist (6 samples, 0.65%)</title><rect x="90.2597%" y="613" width="0.6494%" height="15" fill="rgb(222,33,0)" fg:x="834" fg:w="6"/><text x="90.5097%" y="623.50"></text></g><g><title>Security`der_decode_dictionary (6 samples, 0.65%)</title><rect x="90.2597%" y="597" width="0.6494%" height="15" fill="rgb(234,209,28)" fg:x="834" fg:w="6"/><text x="90.5097%" y="607.50"></text></g><g><title>Security`der_decode_plist (5 samples, 0.54%)</title><rect x="90.3680%" y="581" width="0.5411%" height="15" fill="rgb(224,11,23)" fg:x="835" fg:w="5"/><text x="90.6180%" y="591.50"></text></g><g><title>Security`der_decode_date (5 samples, 0.54%)</title><rect x="90.3680%" y="565" width="0.5411%" height="15" fill="rgb(232,99,1)" fg:x="835" fg:w="5"/><text x="90.6180%" y="575.50"></text></g><g><title>Security`der_decode_commontime_body (5 samples, 0.54%)</title><rect x="90.3680%" y="549" width="0.5411%" height="15" fill="rgb(237,95,45)" fg:x="835" fg:w="5"/><text x="90.6180%" y="559.50"></text></g><g><title>Security`SecCFCalendarDoWithZuluCalendar (5 samples, 0.54%)</title><rect x="90.3680%" y="533" width="0.5411%" height="15" fill="rgb(208,109,11)" fg:x="835" fg:w="5"/><text x="90.6180%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.54%)</title><rect x="90.3680%" y="517" width="0.5411%" height="15" fill="rgb(216,190,48)" fg:x="835" fg:w="5"/><text x="90.6180%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.54%)</title><rect x="90.3680%" y="501" width="0.5411%" height="15" fill="rgb(251,171,36)" fg:x="835" fg:w="5"/><text x="90.6180%" y="511.50"></text></g><g><title>Security`__SecGregorianDateGetAbsoluteTime_block_invoke (4 samples, 0.43%)</title><rect x="90.4762%" y="485" width="0.4329%" height="15" fill="rgb(230,62,22)" fg:x="836" fg:w="4"/><text x="90.7262%" y="495.50"></text></g><g><title>CoreFoundation`CFCalendarComposeAbsoluteTime (4 samples, 0.43%)</title><rect x="90.4762%" y="469" width="0.4329%" height="15" fill="rgb(225,114,35)" fg:x="836" fg:w="4"/><text x="90.7262%" y="479.50"></text></g><g><title>CoreFoundation`_CFCalendarComposeAbsoluteTimeV (4 samples, 0.43%)</title><rect x="90.4762%" y="453" width="0.4329%" height="15" fill="rgb(215,118,42)" fg:x="836" fg:w="4"/><text x="90.7262%" y="463.50"></text></g><g><title>CoreFoundation`__cficu_ucal_set (1 samples, 0.11%)</title><rect x="90.8009%" y="437" width="0.1082%" height="15" fill="rgb(243,119,21)" fg:x="839" fg:w="1"/><text x="91.0509%" y="447.50"></text></g><g><title>libsystem_trace.dylib`os_log_type_enabled (1 samples, 0.11%)</title><rect x="90.8009%" y="421" width="0.1082%" height="15" fill="rgb(252,177,53)" fg:x="839" fg:w="1"/><text x="91.0509%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.11%)</title><rect x="90.9091%" y="613" width="0.1082%" height="15" fill="rgb(237,209,29)" fg:x="840" fg:w="1"/><text x="91.1591%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.11%)</title><rect x="90.9091%" y="597" width="0.1082%" height="15" fill="rgb(212,65,23)" fg:x="840" fg:w="1"/><text x="91.1591%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.11%)</title><rect x="90.9091%" y="581" width="0.1082%" height="15" fill="rgb(230,222,46)" fg:x="840" fg:w="1"/><text x="91.1591%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.11%)</title><rect x="90.9091%" y="565" width="0.1082%" height="15" fill="rgb(215,135,32)" fg:x="840" fg:w="1"/><text x="91.1591%" y="575.50"></text></g><g><title>Security`securityd_message_with_reply_sync (3 samples, 0.32%)</title><rect x="90.9091%" y="677" width="0.3247%" height="15" fill="rgb(246,101,22)" fg:x="840" fg:w="3"/><text x="91.1591%" y="687.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (3 samples, 0.32%)</title><rect x="90.9091%" y="661" width="0.3247%" height="15" fill="rgb(206,107,13)" fg:x="840" fg:w="3"/><text x="91.1591%" y="671.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (3 samples, 0.32%)</title><rect x="90.9091%" y="645" width="0.3247%" height="15" fill="rgb(250,100,44)" fg:x="840" fg:w="3"/><text x="91.1591%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (3 samples, 0.32%)</title><rect x="90.9091%" y="629" width="0.3247%" height="15" fill="rgb(231,147,38)" fg:x="840" fg:w="3"/><text x="91.1591%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.22%)</title><rect x="91.0173%" y="613" width="0.2165%" height="15" fill="rgb(229,8,40)" fg:x="841" fg:w="2"/><text x="91.2673%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.22%)</title><rect x="91.0173%" y="597" width="0.2165%" height="15" fill="rgb(221,135,30)" fg:x="841" fg:w="2"/><text x="91.2673%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.22%)</title><rect x="91.0173%" y="581" width="0.2165%" height="15" fill="rgb(249,193,18)" fg:x="841" fg:w="2"/><text x="91.2673%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.11%)</title><rect x="91.2338%" y="549" width="0.1082%" height="15" fill="rgb(209,133,39)" fg:x="843" fg:w="1"/><text x="91.4838%" y="559.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.22%)</title><rect x="91.2338%" y="677" width="0.2165%" height="15" fill="rgb(232,100,14)" fg:x="843" fg:w="2"/><text x="91.4838%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (2 samples, 0.22%)</title><rect x="91.2338%" y="661" width="0.2165%" height="15" fill="rgb(224,185,1)" fg:x="843" fg:w="2"/><text x="91.4838%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (2 samples, 0.22%)</title><rect x="91.2338%" y="645" width="0.2165%" height="15" fill="rgb(223,139,8)" fg:x="843" fg:w="2"/><text x="91.4838%" y="655.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.22%)</title><rect x="91.2338%" y="629" width="0.2165%" height="15" fill="rgb(232,213,38)" fg:x="843" fg:w="2"/><text x="91.4838%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (2 samples, 0.22%)</title><rect x="91.2338%" y="613" width="0.2165%" height="15" fill="rgb(207,94,22)" fg:x="843" fg:w="2"/><text x="91.4838%" y="623.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.22%)</title><rect x="91.2338%" y="597" width="0.2165%" height="15" fill="rgb(219,183,54)" fg:x="843" fg:w="2"/><text x="91.4838%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (2 samples, 0.22%)</title><rect x="91.2338%" y="581" width="0.2165%" height="15" fill="rgb(216,185,54)" fg:x="843" fg:w="2"/><text x="91.4838%" y="591.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.22%)</title><rect x="91.2338%" y="565" width="0.2165%" height="15" fill="rgb(254,217,39)" fg:x="843" fg:w="2"/><text x="91.4838%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.11%)</title><rect x="91.3420%" y="549" width="0.1082%" height="15" fill="rgb(240,178,23)" fg:x="844" fg:w="1"/><text x="91.5920%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 0.11%)</title><rect x="91.3420%" y="533" width="0.1082%" height="15" fill="rgb(218,11,47)" fg:x="844" fg:w="1"/><text x="91.5920%" y="543.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.11%)</title><rect x="91.3420%" y="517" width="0.1082%" height="15" fill="rgb(218,51,51)" fg:x="844" fg:w="1"/><text x="91.5920%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (1 samples, 0.11%)</title><rect x="91.3420%" y="501" width="0.1082%" height="15" fill="rgb(238,126,27)" fg:x="844" fg:w="1"/><text x="91.5920%" y="511.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.11%)</title><rect x="91.3420%" y="485" width="0.1082%" height="15" fill="rgb(249,202,22)" fg:x="844" fg:w="1"/><text x="91.5920%" y="495.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data dealloc] (1 samples, 0.11%)</title><rect x="91.3420%" y="469" width="0.1082%" height="15" fill="rgb(254,195,49)" fg:x="844" fg:w="1"/><text x="91.5920%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (1 samples, 0.11%)</title><rect x="91.3420%" y="453" width="0.1082%" height="15" fill="rgb(208,123,14)" fg:x="844" fg:w="1"/><text x="91.5920%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.11%)</title><rect x="91.3420%" y="437" width="0.1082%" height="15" fill="rgb(224,200,8)" fg:x="844" fg:w="1"/><text x="91.5920%" y="447.50"></text></g><g><title>Security`securityd_send_sync_and_do (21 samples, 2.27%)</title><rect x="89.2857%" y="693" width="2.2727%" height="15" fill="rgb(217,61,36)" fg:x="825" fg:w="21"/><text x="89.5357%" y="703.50">S..</text></g><g><title>libxpc.dylib`xpc_dictionary_create (1 samples, 0.11%)</title><rect x="91.4502%" y="677" width="0.1082%" height="15" fill="rgb(206,35,45)" fg:x="845" fg:w="1"/><text x="91.7002%" y="687.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (208 samples, 22.51%)</title><rect x="69.1558%" y="901" width="22.5108%" height="15" fill="rgb(217,65,33)" fg:x="639" fg:w="208"/><text x="69.4058%" y="911.50">rnpm`&lt;tokio_native_tls::MidHandshake..</text></g><g><title>rnpm`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (208 samples, 22.51%)</title><rect x="69.1558%" y="885" width="22.5108%" height="15" fill="rgb(222,158,48)" fg:x="639" fg:w="208"/><text x="69.4058%" y="895.50">rnpm`native_tls::imp::MidHandshakeTl..</text></g><g><title>rnpm`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (208 samples, 22.51%)</title><rect x="69.1558%" y="869" width="22.5108%" height="15" fill="rgb(254,2,54)" fg:x="639" fg:w="208"/><text x="69.4058%" y="879.50">rnpm`security_framework::secure_tran..</text></g><g><title>rnpm`security_framework::trust::SecTrust::evaluate_with_error (23 samples, 2.49%)</title><rect x="89.1775%" y="853" width="2.4892%" height="15" fill="rgb(250,143,38)" fg:x="824" fg:w="23"/><text x="89.4275%" y="863.50">rn..</text></g><g><title>Security`SecTrustEvaluateInternal (23 samples, 2.49%)</title><rect x="89.1775%" y="837" width="2.4892%" height="15" fill="rgb(248,25,0)" fg:x="824" fg:w="23"/><text x="89.4275%" y="847.50">Se..</text></g><g><title>Security`SecTrustEvaluateIfNecessary (23 samples, 2.49%)</title><rect x="89.1775%" y="821" width="2.4892%" height="15" fill="rgb(206,152,27)" fg:x="824" fg:w="23"/><text x="89.4275%" y="831.50">Se..</text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (22 samples, 2.38%)</title><rect x="89.2857%" y="805" width="2.3810%" height="15" fill="rgb(240,77,30)" fg:x="825" fg:w="22"/><text x="89.5357%" y="815.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (22 samples, 2.38%)</title><rect x="89.2857%" y="789" width="2.3810%" height="15" fill="rgb(231,5,3)" fg:x="825" fg:w="22"/><text x="89.5357%" y="799.50">li..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke.521 (22 samples, 2.38%)</title><rect x="89.2857%" y="773" width="2.3810%" height="15" fill="rgb(207,226,32)" fg:x="825" fg:w="22"/><text x="89.5357%" y="783.50">Se..</text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (22 samples, 2.38%)</title><rect x="89.2857%" y="757" width="2.3810%" height="15" fill="rgb(222,207,47)" fg:x="825" fg:w="22"/><text x="89.5357%" y="767.50">li..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (22 samples, 2.38%)</title><rect x="89.2857%" y="741" width="2.3810%" height="15" fill="rgb(229,115,45)" fg:x="825" fg:w="22"/><text x="89.5357%" y="751.50">Se..</text></g><g><title>Security`SecOSStatusWith (22 samples, 2.38%)</title><rect x="89.2857%" y="725" width="2.3810%" height="15" fill="rgb(224,191,6)" fg:x="825" fg:w="22"/><text x="89.5357%" y="735.50">Se..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (22 samples, 2.38%)</title><rect x="89.2857%" y="709" width="2.3810%" height="15" fill="rgb(230,227,24)" fg:x="825" fg:w="22"/><text x="89.5357%" y="719.50">Se..</text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.11%)</title><rect x="91.5584%" y="693" width="0.1082%" height="15" fill="rgb(228,80,19)" fg:x="846" fg:w="1"/><text x="91.8084%" y="703.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetSymmetricCipherAlgorithm (2 samples, 0.22%)</title><rect x="91.6667%" y="789" width="0.2165%" height="15" fill="rgb(247,229,0)" fg:x="847" fg:w="2"/><text x="91.9167%" y="799.50"></text></g><g><title>libcoretls.dylib`tls_handshake_create (3 samples, 0.32%)</title><rect x="91.6667%" y="821" width="0.3247%" height="15" fill="rgb(237,194,15)" fg:x="847" fg:w="3"/><text x="91.9167%" y="831.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_ciphersuites_internal (3 samples, 0.32%)</title><rect x="91.6667%" y="805" width="0.3247%" height="15" fill="rgb(219,203,20)" fg:x="847" fg:w="3"/><text x="91.9167%" y="815.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_allowed (1 samples, 0.11%)</title><rect x="91.8831%" y="789" width="0.1082%" height="15" fill="rgb(234,128,8)" fg:x="849" fg:w="1"/><text x="92.1331%" y="799.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] (1 samples, 0.11%)</title><rect x="91.9913%" y="645" width="0.1082%" height="15" fill="rgb(248,202,8)" fg:x="850" fg:w="1"/><text x="92.2413%" y="655.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource createRequestNewContentMessageForDaemon:] (1 samples, 0.11%)</title><rect x="91.9913%" y="629" width="0.1082%" height="15" fill="rgb(206,104,37)" fg:x="850" fg:w="1"/><text x="92.2413%" y="639.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource createRequestNewContentMessageForDaemon:] (1 samples, 0.11%)</title><rect x="91.9913%" y="613" width="0.1082%" height="15" fill="rgb(223,8,27)" fg:x="850" fg:w="1"/><text x="92.2413%" y="623.50"></text></g><g><title>CoreFoundation`_CFPrefsDirectMode (1 samples, 0.11%)</title><rect x="91.9913%" y="597" width="0.1082%" height="15" fill="rgb(216,217,28)" fg:x="850" fg:w="1"/><text x="92.2413%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.11%)</title><rect x="91.9913%" y="581" width="0.1082%" height="15" fill="rgb(249,199,1)" fg:x="850" fg:w="1"/><text x="92.2413%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.11%)</title><rect x="91.9913%" y="565" width="0.1082%" height="15" fill="rgb(240,85,17)" fg:x="850" fg:w="1"/><text x="92.2413%" y="575.50"></text></g><g><title>CoreFoundation`___CFPrefsDirectMode_block_invoke (1 samples, 0.11%)</title><rect x="91.9913%" y="549" width="0.1082%" height="15" fill="rgb(206,108,45)" fg:x="850" fg:w="1"/><text x="92.2413%" y="559.50"></text></g><g><title>libsystem_sandbox.dylib`sandbox_check (1 samples, 0.11%)</title><rect x="91.9913%" y="533" width="0.1082%" height="15" fill="rgb(245,210,41)" fg:x="850" fg:w="1"/><text x="92.2413%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__mac_syscall (1 samples, 0.11%)</title><rect x="91.9913%" y="517" width="0.1082%" height="15" fill="rgb(206,13,37)" fg:x="850" fg:w="1"/><text x="92.2413%" y="527.50"></text></g><g><title>Security`SSLCreateContext (5 samples, 0.54%)</title><rect x="91.6667%" y="853" width="0.5411%" height="15" fill="rgb(250,61,18)" fg:x="847" fg:w="5"/><text x="91.9167%" y="863.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (5 samples, 0.54%)</title><rect x="91.6667%" y="837" width="0.5411%" height="15" fill="rgb(235,172,48)" fg:x="847" fg:w="5"/><text x="91.9167%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.22%)</title><rect x="91.9913%" y="821" width="0.2165%" height="15" fill="rgb(249,201,17)" fg:x="850" fg:w="2"/><text x="92.2413%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.22%)</title><rect x="91.9913%" y="805" width="0.2165%" height="15" fill="rgb(219,208,6)" fg:x="850" fg:w="2"/><text x="92.2413%" y="815.50"></text></g><g><title>Security`__SSLCreateContextWithRecordFuncs_block_invoke (2 samples, 0.22%)</title><rect x="91.9913%" y="789" width="0.2165%" height="15" fill="rgb(248,31,23)" fg:x="850" fg:w="2"/><text x="92.2413%" y="799.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (2 samples, 0.22%)</title><rect x="91.9913%" y="773" width="0.2165%" height="15" fill="rgb(245,15,42)" fg:x="850" fg:w="2"/><text x="92.2413%" y="783.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (2 samples, 0.22%)</title><rect x="91.9913%" y="757" width="0.2165%" height="15" fill="rgb(222,217,39)" fg:x="850" fg:w="2"/><text x="92.2413%" y="767.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (2 samples, 0.22%)</title><rect x="91.9913%" y="741" width="0.2165%" height="15" fill="rgb(210,219,27)" fg:x="850" fg:w="2"/><text x="92.2413%" y="751.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (2 samples, 0.22%)</title><rect x="91.9913%" y="725" width="0.2165%" height="15" fill="rgb(252,166,36)" fg:x="850" fg:w="2"/><text x="92.2413%" y="735.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (2 samples, 0.22%)</title><rect x="91.9913%" y="709" width="0.2165%" height="15" fill="rgb(245,132,34)" fg:x="850" fg:w="2"/><text x="92.2413%" y="719.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (2 samples, 0.22%)</title><rect x="91.9913%" y="693" width="0.2165%" height="15" fill="rgb(236,54,3)" fg:x="850" fg:w="2"/><text x="92.2413%" y="703.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (2 samples, 0.22%)</title><rect x="91.9913%" y="677" width="0.2165%" height="15" fill="rgb(241,173,43)" fg:x="850" fg:w="2"/><text x="92.2413%" y="687.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (2 samples, 0.22%)</title><rect x="91.9913%" y="661" width="0.2165%" height="15" fill="rgb(215,190,9)" fg:x="850" fg:w="2"/><text x="92.2413%" y="671.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource mergeIntoDictionary:sourceDictionary:cloudKeyEvaluator:] (1 samples, 0.11%)</title><rect x="92.0996%" y="645" width="0.1082%" height="15" fill="rgb(242,101,16)" fg:x="851" fg:w="1"/><text x="92.3496%" y="655.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.11%)</title><rect x="92.0996%" y="629" width="0.1082%" height="15" fill="rgb(223,190,21)" fg:x="851" fg:w="1"/><text x="92.3496%" y="639.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.11%)</title><rect x="92.0996%" y="613" width="0.1082%" height="15" fill="rgb(215,228,25)" fg:x="851" fg:w="1"/><text x="92.3496%" y="623.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.11%)</title><rect x="92.0996%" y="597" width="0.1082%" height="15" fill="rgb(225,36,22)" fg:x="851" fg:w="1"/><text x="92.3496%" y="607.50"></text></g><g><title>Security`SSLSetSessionOption (1 samples, 0.11%)</title><rect x="92.2078%" y="853" width="0.1082%" height="15" fill="rgb(251,106,46)" fg:x="852" fg:w="1"/><text x="92.4578%" y="863.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (239 samples, 25.87%)</title><rect x="66.8831%" y="981" width="25.8658%" height="15" fill="rgb(208,90,1)" fg:x="618" fg:w="239"/><text x="67.1331%" y="991.50">rnpm`&lt;futures_util::future::future::Map&lt;F..</text></g><g><title>rnpm`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (239 samples, 25.87%)</title><rect x="66.8831%" y="965" width="25.8658%" height="15" fill="rgb(243,10,4)" fg:x="618" fg:w="239"/><text x="67.1331%" y="975.50">rnpm`&lt;hyper::service::oneshot::Oneshot&lt;S,..</text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (239 samples, 25.87%)</title><rect x="66.8831%" y="949" width="25.8658%" height="15" fill="rgb(212,137,27)" fg:x="618" fg:w="239"/><text x="67.1331%" y="959.50">rnpm`&lt;core::future::from_generator::GenFu..</text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (239 samples, 25.87%)</title><rect x="66.8831%" y="933" width="25.8658%" height="15" fill="rgb(231,220,49)" fg:x="618" fg:w="239"/><text x="67.1331%" y="943.50">rnpm`&lt;core::future::from_generator::GenFu..</text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (239 samples, 25.87%)</title><rect x="66.8831%" y="917" width="25.8658%" height="15" fill="rgb(237,96,20)" fg:x="618" fg:w="239"/><text x="67.1331%" y="927.50">rnpm`&lt;core::future::from_generator::GenFu..</text></g><g><title>rnpm`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (10 samples, 1.08%)</title><rect x="91.6667%" y="901" width="1.0823%" height="15" fill="rgb(239,229,30)" fg:x="847" fg:w="10"/><text x="91.9167%" y="911.50"></text></g><g><title>rnpm`native_tls::imp::TlsConnector::connect (10 samples, 1.08%)</title><rect x="91.6667%" y="885" width="1.0823%" height="15" fill="rgb(219,65,33)" fg:x="847" fg:w="10"/><text x="91.9167%" y="895.50"></text></g><g><title>rnpm`security_framework::secure_transport::ClientBuilder::handshake (10 samples, 1.08%)</title><rect x="91.6667%" y="869" width="1.0823%" height="15" fill="rgb(243,134,7)" fg:x="847" fg:w="10"/><text x="91.9167%" y="879.50"></text></g><g><title>rnpm`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (4 samples, 0.43%)</title><rect x="92.3160%" y="853" width="0.4329%" height="15" fill="rgb(216,177,54)" fg:x="853" fg:w="4"/><text x="92.5660%" y="863.50"></text></g><g><title>Security`SSLHandshake (4 samples, 0.43%)</title><rect x="92.3160%" y="837" width="0.4329%" height="15" fill="rgb(211,160,20)" fg:x="853" fg:w="4"/><text x="92.5660%" y="847.50"></text></g><g><title>Security`SSLHandshakeProceed (4 samples, 0.43%)</title><rect x="92.3160%" y="821" width="0.4329%" height="15" fill="rgb(239,85,39)" fg:x="853" fg:w="4"/><text x="92.5660%" y="831.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (4 samples, 0.43%)</title><rect x="92.3160%" y="805" width="0.4329%" height="15" fill="rgb(232,125,22)" fg:x="853" fg:w="4"/><text x="92.5660%" y="815.50"></text></g><g><title>rnpm`security_framework::secure_transport::write_func (4 samples, 0.43%)</title><rect x="92.3160%" y="789" width="0.4329%" height="15" fill="rgb(244,57,34)" fg:x="853" fg:w="4"/><text x="92.5660%" y="799.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (4 samples, 0.43%)</title><rect x="92.3160%" y="773" width="0.4329%" height="15" fill="rgb(214,203,32)" fg:x="853" fg:w="4"/><text x="92.5660%" y="783.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (4 samples, 0.43%)</title><rect x="92.3160%" y="757" width="0.4329%" height="15" fill="rgb(207,58,43)" fg:x="853" fg:w="4"/><text x="92.5660%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (4 samples, 0.43%)</title><rect x="92.3160%" y="741" width="0.4329%" height="15" fill="rgb(215,193,15)" fg:x="853" fg:w="4"/><text x="92.5660%" y="751.50"></text></g><g><title>rnpm`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (244 samples, 26.41%)</title><rect x="66.5584%" y="1013" width="26.4069%" height="15" fill="rgb(232,15,44)" fg:x="615" fg:w="244"/><text x="66.8084%" y="1023.50">rnpm`&lt;futures_util::future::try_future::tr..</text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (242 samples, 26.19%)</title><rect x="66.7749%" y="997" width="26.1905%" height="15" fill="rgb(212,3,48)" fg:x="617" fg:w="242"/><text x="67.0249%" y="1007.50">rnpm`&lt;futures_util::future::future::Map&lt;Fu..</text></g><g><title>rnpm`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="92.7489%" y="981" width="0.2165%" height="15" fill="rgb(218,128,7)" fg:x="857" fg:w="2"/><text x="92.9989%" y="991.50"></text></g><g><title>rnpm`&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="92.9654%" y="1013" width="0.1082%" height="15" fill="rgb(226,216,39)" fg:x="859" fg:w="1"/><text x="93.2154%" y="1023.50"></text></g><g><title>rnpm`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="92.9654%" y="997" width="0.1082%" height="15" fill="rgb(243,47,51)" fg:x="859" fg:w="1"/><text x="93.2154%" y="1007.50"></text></g><g><title>rnpm`std::net::parser::Parser::read_ipv6_addr::read_groups (1 samples, 0.11%)</title><rect x="93.0736%" y="837" width="0.1082%" height="15" fill="rgb(241,183,40)" fg:x="860" fg:w="1"/><text x="93.3236%" y="847.50"></text></g><g><title>rnpm`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (249 samples, 26.95%)</title><rect x="66.3420%" y="1029" width="26.9481%" height="15" fill="rgb(231,217,32)" fg:x="613" fg:w="249"/><text x="66.5920%" y="1039.50">rnpm`&lt;futures_util::future::select::Select&lt;..</text></g><g><title>rnpm`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="1013" width="0.2165%" height="15" fill="rgb(229,61,38)" fg:x="860" fg:w="2"/><text x="93.3236%" y="1023.50"></text></g><g><title>rnpm`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="997" width="0.2165%" height="15" fill="rgb(225,210,5)" fg:x="860" fg:w="2"/><text x="93.3236%" y="1007.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="981" width="0.2165%" height="15" fill="rgb(231,79,45)" fg:x="860" fg:w="2"/><text x="93.3236%" y="991.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="965" width="0.2165%" height="15" fill="rgb(224,100,7)" fg:x="860" fg:w="2"/><text x="93.3236%" y="975.50"></text></g><g><title>rnpm`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="949" width="0.2165%" height="15" fill="rgb(241,198,18)" fg:x="860" fg:w="2"/><text x="93.3236%" y="959.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="933" width="0.2165%" height="15" fill="rgb(252,97,53)" fg:x="860" fg:w="2"/><text x="93.3236%" y="943.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="917" width="0.2165%" height="15" fill="rgb(220,88,7)" fg:x="860" fg:w="2"/><text x="93.3236%" y="927.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="901" width="0.2165%" height="15" fill="rgb(213,176,14)" fg:x="860" fg:w="2"/><text x="93.3236%" y="911.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.22%)</title><rect x="93.0736%" y="885" width="0.2165%" height="15" fill="rgb(246,73,7)" fg:x="860" fg:w="2"/><text x="93.3236%" y="895.50"></text></g><g><title>rnpm`hyper::client::connect::dns::SocketAddrs::try_parse (2 samples, 0.22%)</title><rect x="93.0736%" y="869" width="0.2165%" height="15" fill="rgb(245,64,36)" fg:x="860" fg:w="2"/><text x="93.3236%" y="879.50"></text></g><g><title>rnpm`std::net::parser::_&lt;impl core::str::traits::FromStr for std::net::ip::Ipv6Addr&gt;::from_str (2 samples, 0.22%)</title><rect x="93.0736%" y="853" width="0.2165%" height="15" fill="rgb(245,80,10)" fg:x="860" fg:w="2"/><text x="93.3236%" y="863.50"></text></g><g><title>rnpm`std::net::parser::Parser::read_ipv6_addr (1 samples, 0.11%)</title><rect x="93.1818%" y="837" width="0.1082%" height="15" fill="rgb(232,107,50)" fg:x="861" fg:w="1"/><text x="93.4318%" y="847.50"></text></g><g><title>rnpm`std::net::parser::Parser::read_ipv6_addr::read_groups (1 samples, 0.11%)</title><rect x="93.1818%" y="821" width="0.1082%" height="15" fill="rgb(253,3,0)" fg:x="861" fg:w="1"/><text x="93.4318%" y="831.50"></text></g><g><title>rnpm`&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.11%)</title><rect x="93.2900%" y="1029" width="0.1082%" height="15" fill="rgb(212,99,53)" fg:x="862" fg:w="1"/><text x="93.5400%" y="1039.50"></text></g><g><title>rnpm`http::header::map::Entry&lt;T&gt;::or_insert_with (1 samples, 0.11%)</title><rect x="93.3983%" y="1029" width="0.1082%" height="15" fill="rgb(249,111,54)" fg:x="863" fg:w="1"/><text x="93.6483%" y="1039.50"></text></g><g><title>rnpm`http::uri::authority::Authority::port (1 samples, 0.11%)</title><rect x="93.3983%" y="1013" width="0.1082%" height="15" fill="rgb(249,55,30)" fg:x="863" fg:w="1"/><text x="93.6483%" y="1023.50"></text></g><g><title>rnpm`hyper::client::client::Client&lt;C,B&gt;::connect_to (1 samples, 0.11%)</title><rect x="93.5065%" y="1029" width="0.1082%" height="15" fill="rgb(237,47,42)" fg:x="864" fg:w="1"/><text x="93.7565%" y="1039.50"></text></g><g><title>rnpm`http::uri::builder::Builder::path_and_query (1 samples, 0.11%)</title><rect x="93.5065%" y="1013" width="0.1082%" height="15" fill="rgb(211,20,18)" fg:x="864" fg:w="1"/><text x="93.7565%" y="1023.50"></text></g><g><title>rnpm`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (255 samples, 27.60%)</title><rect x="66.1255%" y="1061" width="27.5974%" height="15" fill="rgb(231,203,46)" fg:x="611" fg:w="255"/><text x="66.3755%" y="1071.50">rnpm`&lt;reqwest::async_impl::client::PendingRe..</text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (255 samples, 27.60%)</title><rect x="66.1255%" y="1045" width="27.5974%" height="15" fill="rgb(237,142,3)" fg:x="611" fg:w="255"/><text x="66.3755%" y="1055.50">rnpm`&lt;core::future::from_generator::GenFutur..</text></g><g><title>rnpm`hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (1 samples, 0.11%)</title><rect x="93.6147%" y="1029" width="0.1082%" height="15" fill="rgb(241,107,1)" fg:x="865" fg:w="1"/><text x="93.8647%" y="1039.50"></text></g><g><title>rnpm`hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (1 samples, 0.11%)</title><rect x="93.6147%" y="1013" width="0.1082%" height="15" fill="rgb(229,83,13)" fg:x="865" fg:w="1"/><text x="93.8647%" y="1023.50"></text></g><g><title>rnpm`tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (1 samples, 0.11%)</title><rect x="93.6147%" y="997" width="0.1082%" height="15" fill="rgb(241,91,40)" fg:x="865" fg:w="1"/><text x="93.8647%" y="1007.50"></text></g><g><title>rnpm`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (256 samples, 27.71%)</title><rect x="66.1255%" y="1077" width="27.7056%" height="15" fill="rgb(225,3,45)" fg:x="611" fg:w="256"/><text x="66.3755%" y="1087.50">rnpm`&lt;core::future::from_generator::GenFutur..</text></g><g><title>rnpm`tokio::sync::oneshot::Sender&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="93.7229%" y="1061" width="0.1082%" height="15" fill="rgb(244,223,14)" fg:x="866" fg:w="1"/><text x="93.9729%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.11%)</title><rect x="93.7229%" y="1045" width="0.1082%" height="15" fill="rgb(224,124,37)" fg:x="866" fg:w="1"/><text x="93.9729%" y="1055.50"></text></g><g><title>rnpm`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="93.9394%" y="1013" width="0.1082%" height="15" fill="rgb(251,171,30)" fg:x="868" fg:w="1"/><text x="94.1894%" y="1023.50"></text></g><g><title>rnpm`&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (2 samples, 0.22%)</title><rect x="94.0476%" y="1013" width="0.2165%" height="15" fill="rgb(236,46,54)" fg:x="869" fg:w="2"/><text x="94.2976%" y="1023.50"></text></g><g><title>rnpm`hyper::client::dispatch::Callback&lt;T,U&gt;::send (2 samples, 0.22%)</title><rect x="94.0476%" y="997" width="0.2165%" height="15" fill="rgb(245,213,5)" fg:x="869" fg:w="2"/><text x="94.2976%" y="1007.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.22%)</title><rect x="94.0476%" y="981" width="0.2165%" height="15" fill="rgb(230,144,27)" fg:x="869" fg:w="2"/><text x="94.2976%" y="991.50"></text></g><g><title>rnpm`core::ptr::drop_in_place&lt;std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from::StringError&gt; (2 samples, 0.22%)</title><rect x="94.0476%" y="965" width="0.2165%" height="15" fill="rgb(220,86,6)" fg:x="869" fg:w="2"/><text x="94.2976%" y="975.50"></text></g><g><title>rnpm`hyper::body::body::Body::new_channel (1 samples, 0.11%)</title><rect x="94.2641%" y="1013" width="0.1082%" height="15" fill="rgb(240,20,13)" fg:x="871" fg:w="1"/><text x="94.5141%" y="1023.50"></text></g><g><title>rnpm`futures_channel::mpsc::channel (1 samples, 0.11%)</title><rect x="94.2641%" y="997" width="0.1082%" height="15" fill="rgb(217,89,34)" fg:x="871" fg:w="1"/><text x="94.5141%" y="1007.50"></text></g><g><title>rnpm`hyper::body::body::Sender::try_send_data (1 samples, 0.11%)</title><rect x="94.3723%" y="1013" width="0.1082%" height="15" fill="rgb(229,13,5)" fg:x="872" fg:w="1"/><text x="94.6223%" y="1023.50"></text></g><g><title>rnpm`futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.11%)</title><rect x="94.3723%" y="997" width="0.1082%" height="15" fill="rgb(244,67,35)" fg:x="872" fg:w="1"/><text x="94.6223%" y="1007.50"></text></g><g><title>rnpm`futures_task::waker::wake_arc_raw (1 samples, 0.11%)</title><rect x="94.3723%" y="981" width="0.1082%" height="15" fill="rgb(221,40,2)" fg:x="872" fg:w="1"/><text x="94.6223%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.11%)</title><rect x="94.3723%" y="965" width="0.1082%" height="15" fill="rgb(237,157,21)" fg:x="872" fg:w="1"/><text x="94.6223%" y="975.50"></text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (1 samples, 0.11%)</title><rect x="94.4805%" y="1013" width="0.1082%" height="15" fill="rgb(222,94,11)" fg:x="873" fg:w="1"/><text x="94.7305%" y="1023.50"></text></g><g><title>rnpm`hyper::proto::h1::role::encode_headers (1 samples, 0.11%)</title><rect x="94.4805%" y="997" width="0.1082%" height="15" fill="rgb(249,113,6)" fg:x="873" fg:w="1"/><text x="94.7305%" y="1007.50"></text></g><g><title>rnpm`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (1 samples, 0.11%)</title><rect x="94.4805%" y="981" width="0.1082%" height="15" fill="rgb(238,137,36)" fg:x="873" fg:w="1"/><text x="94.7305%" y="991.50"></text></g><g><title>rnpm`http::header::map::HeaderMap&lt;T&gt;::clear (1 samples, 0.11%)</title><rect x="94.4805%" y="965" width="0.1082%" height="15" fill="rgb(210,102,26)" fg:x="873" fg:w="1"/><text x="94.7305%" y="975.50"></text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1 samples, 0.11%)</title><rect x="94.5887%" y="1013" width="0.1082%" height="15" fill="rgb(218,30,30)" fg:x="874" fg:w="1"/><text x="94.8387%" y="1023.50"></text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (8 samples, 0.87%)</title><rect x="94.6970%" y="1013" width="0.8658%" height="15" fill="rgb(214,67,26)" fg:x="875" fg:w="8"/><text x="94.9470%" y="1023.50"></text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (8 samples, 0.87%)</title><rect x="94.6970%" y="997" width="0.8658%" height="15" fill="rgb(251,9,53)" fg:x="875" fg:w="8"/><text x="94.9470%" y="1007.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (8 samples, 0.87%)</title><rect x="94.6970%" y="981" width="0.8658%" height="15" fill="rgb(228,204,25)" fg:x="875" fg:w="8"/><text x="94.9470%" y="991.50"></text></g><g><title>Security`SSLWrite (8 samples, 0.87%)</title><rect x="94.6970%" y="965" width="0.8658%" height="15" fill="rgb(207,153,8)" fg:x="875" fg:w="8"/><text x="94.9470%" y="975.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (8 samples, 0.87%)</title><rect x="94.6970%" y="949" width="0.8658%" height="15" fill="rgb(242,9,16)" fg:x="875" fg:w="8"/><text x="94.9470%" y="959.50"></text></g><g><title>rnpm`security_framework::secure_transport::write_func (8 samples, 0.87%)</title><rect x="94.6970%" y="933" width="0.8658%" height="15" fill="rgb(217,211,10)" fg:x="875" fg:w="8"/><text x="94.9470%" y="943.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (8 samples, 0.87%)</title><rect x="94.6970%" y="917" width="0.8658%" height="15" fill="rgb(219,228,52)" fg:x="875" fg:w="8"/><text x="94.9470%" y="927.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (8 samples, 0.87%)</title><rect x="94.6970%" y="901" width="0.8658%" height="15" fill="rgb(231,92,29)" fg:x="875" fg:w="8"/><text x="94.9470%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (8 samples, 0.87%)</title><rect x="94.6970%" y="885" width="0.8658%" height="15" fill="rgb(232,8,23)" fg:x="875" fg:w="8"/><text x="94.9470%" y="895.50"></text></g><g><title>Security`SSLGetBufferedReadSize (2 samples, 0.22%)</title><rect x="95.7792%" y="933" width="0.2165%" height="15" fill="rgb(216,211,34)" fg:x="885" fg:w="2"/><text x="96.0292%" y="943.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.11%)</title><rect x="95.9957%" y="869" width="0.1082%" height="15" fill="rgb(236,151,0)" fg:x="887" fg:w="1"/><text x="96.2457%" y="879.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_set_iv (1 samples, 0.11%)</title><rect x="95.9957%" y="853" width="0.1082%" height="15" fill="rgb(209,168,3)" fg:x="887" fg:w="1"/><text x="96.2457%" y="863.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_ecb (1 samples, 0.11%)</title><rect x="95.9957%" y="837" width="0.1082%" height="15" fill="rgb(208,129,28)" fg:x="887" fg:w="1"/><text x="96.2457%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_reset (1 samples, 0.11%)</title><rect x="96.1039%" y="837" width="0.1082%" height="15" fill="rgb(229,78,22)" fg:x="888" fg:w="1"/><text x="96.3539%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_reset (1 samples, 0.11%)</title><rect x="96.1039%" y="821" width="0.1082%" height="15" fill="rgb(228,187,13)" fg:x="888" fg:w="1"/><text x="96.3539%" y="831.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.11%)</title><rect x="96.1039%" y="805" width="0.1082%" height="15" fill="rgb(240,119,24)" fg:x="888" fg:w="1"/><text x="96.3539%" y="815.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (3 samples, 0.32%)</title><rect x="95.9957%" y="885" width="0.3247%" height="15" fill="rgb(209,194,42)" fg:x="887" fg:w="3"/><text x="96.2457%" y="895.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (2 samples, 0.22%)</title><rect x="96.1039%" y="869" width="0.2165%" height="15" fill="rgb(247,200,46)" fg:x="888" fg:w="2"/><text x="96.3539%" y="879.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (2 samples, 0.22%)</title><rect x="96.1039%" y="853" width="0.2165%" height="15" fill="rgb(218,76,16)" fg:x="888" fg:w="2"/><text x="96.3539%" y="863.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_update (1 samples, 0.11%)</title><rect x="96.2121%" y="837" width="0.1082%" height="15" fill="rgb(225,21,48)" fg:x="889" fg:w="1"/><text x="96.4621%" y="847.50"></text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop (1 samples, 0.11%)</title><rect x="96.2121%" y="821" width="0.1082%" height="15" fill="rgb(239,223,50)" fg:x="889" fg:w="1"/><text x="96.4621%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="96.3203%" y="885" width="0.1082%" height="15" fill="rgb(244,45,21)" fg:x="890" fg:w="1"/><text x="96.5703%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.11%)</title><rect x="96.3203%" y="869" width="0.1082%" height="15" fill="rgb(232,33,43)" fg:x="890" fg:w="1"/><text x="96.5703%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.11%)</title><rect x="96.3203%" y="853" width="0.1082%" height="15" fill="rgb(209,8,3)" fg:x="890" fg:w="1"/><text x="96.5703%" y="863.50"></text></g><g><title>Security`SSLRecordReadInternal (21 samples, 2.27%)</title><rect x="95.9957%" y="901" width="2.2727%" height="15" fill="rgb(214,25,53)" fg:x="887" fg:w="21"/><text x="96.2457%" y="911.50">S..</text></g><g><title>rnpm`security_framework::secure_transport::read_func (17 samples, 1.84%)</title><rect x="96.4286%" y="885" width="1.8398%" height="15" fill="rgb(254,186,54)" fg:x="891" fg:w="17"/><text x="96.6786%" y="895.50">r..</text></g><g><title>rnpm`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (17 samples, 1.84%)</title><rect x="96.4286%" y="869" width="1.8398%" height="15" fill="rgb(208,174,49)" fg:x="891" fg:w="17"/><text x="96.6786%" y="879.50">r..</text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (17 samples, 1.84%)</title><rect x="96.4286%" y="853" width="1.8398%" height="15" fill="rgb(233,191,51)" fg:x="891" fg:w="17"/><text x="96.6786%" y="863.50">r..</text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (17 samples, 1.84%)</title><rect x="96.4286%" y="837" width="1.8398%" height="15" fill="rgb(222,134,10)" fg:x="891" fg:w="17"/><text x="96.6786%" y="847.50">r..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (17 samples, 1.84%)</title><rect x="96.4286%" y="821" width="1.8398%" height="15" fill="rgb(230,226,20)" fg:x="891" fg:w="17"/><text x="96.6786%" y="831.50">l..</text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (26 samples, 2.81%)</title><rect x="95.5628%" y="1013" width="2.8139%" height="15" fill="rgb(251,111,25)" fg:x="883" fg:w="26"/><text x="95.8128%" y="1023.50">rn..</text></g><g><title>rnpm`hyper::proto::h1::decode::Decoder::decode (26 samples, 2.81%)</title><rect x="95.5628%" y="997" width="2.8139%" height="15" fill="rgb(224,40,46)" fg:x="883" fg:w="26"/><text x="95.8128%" y="1007.50">rn..</text></g><g><title>rnpm`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (26 samples, 2.81%)</title><rect x="95.5628%" y="981" width="2.8139%" height="15" fill="rgb(236,108,47)" fg:x="883" fg:w="26"/><text x="95.8128%" y="991.50">rn..</text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (26 samples, 2.81%)</title><rect x="95.5628%" y="965" width="2.8139%" height="15" fill="rgb(234,93,0)" fg:x="883" fg:w="26"/><text x="95.8128%" y="975.50">rn..</text></g><g><title>rnpm`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (26 samples, 2.81%)</title><rect x="95.5628%" y="949" width="2.8139%" height="15" fill="rgb(224,213,32)" fg:x="883" fg:w="26"/><text x="95.8128%" y="959.50">rn..</text></g><g><title>rnpm`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (22 samples, 2.38%)</title><rect x="95.9957%" y="933" width="2.3810%" height="15" fill="rgb(251,11,48)" fg:x="887" fg:w="22"/><text x="96.2457%" y="943.50">rn..</text></g><g><title>Security`SSLRead (22 samples, 2.38%)</title><rect x="95.9957%" y="917" width="2.3810%" height="15" fill="rgb(236,173,5)" fg:x="887" fg:w="22"/><text x="96.2457%" y="927.50">Se..</text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.11%)</title><rect x="98.2684%" y="901" width="0.1082%" height="15" fill="rgb(230,95,12)" fg:x="908" fg:w="1"/><text x="98.5184%" y="911.50"></text></g><g><title>rnpm`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (2 samples, 0.22%)</title><rect x="98.3766%" y="981" width="0.2165%" height="15" fill="rgb(232,209,1)" fg:x="909" fg:w="2"/><text x="98.6266%" y="991.50"></text></g><g><title>rnpm`http::header::name::StandardHeader::from_bytes (1 samples, 0.11%)</title><rect x="98.4848%" y="965" width="0.1082%" height="15" fill="rgb(232,6,1)" fg:x="910" fg:w="1"/><text x="98.7348%" y="975.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.11%)</title><rect x="98.5931%" y="981" width="0.1082%" height="15" fill="rgb(210,224,50)" fg:x="911" fg:w="1"/><text x="98.8431%" y="991.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.11%)</title><rect x="98.7013%" y="901" width="0.1082%" height="15" fill="rgb(228,127,35)" fg:x="912" fg:w="1"/><text x="98.9513%" y="911.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (1 samples, 0.11%)</title><rect x="98.8095%" y="901" width="0.1082%" height="15" fill="rgb(245,102,45)" fg:x="913" fg:w="1"/><text x="99.0595%" y="911.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.11%)</title><rect x="98.8095%" y="885" width="0.1082%" height="15" fill="rgb(214,1,49)" fg:x="913" fg:w="1"/><text x="99.0595%" y="895.50"></text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (7 samples, 0.76%)</title><rect x="98.3766%" y="1013" width="0.7576%" height="15" fill="rgb(226,163,40)" fg:x="909" fg:w="7"/><text x="98.6266%" y="1023.50"></text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (7 samples, 0.76%)</title><rect x="98.3766%" y="997" width="0.7576%" height="15" fill="rgb(239,212,28)" fg:x="909" fg:w="7"/><text x="98.6266%" y="1007.50"></text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (4 samples, 0.43%)</title><rect x="98.7013%" y="981" width="0.4329%" height="15" fill="rgb(220,20,13)" fg:x="912" fg:w="4"/><text x="98.9513%" y="991.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.43%)</title><rect x="98.7013%" y="965" width="0.4329%" height="15" fill="rgb(210,164,35)" fg:x="912" fg:w="4"/><text x="98.9513%" y="975.50"></text></g><g><title>rnpm`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (4 samples, 0.43%)</title><rect x="98.7013%" y="949" width="0.4329%" height="15" fill="rgb(248,109,41)" fg:x="912" fg:w="4"/><text x="98.9513%" y="959.50"></text></g><g><title>Security`SSLRead (4 samples, 0.43%)</title><rect x="98.7013%" y="933" width="0.4329%" height="15" fill="rgb(238,23,50)" fg:x="912" fg:w="4"/><text x="98.9513%" y="943.50"></text></g><g><title>Security`SSLRecordReadInternal (4 samples, 0.43%)</title><rect x="98.7013%" y="917" width="0.4329%" height="15" fill="rgb(211,48,49)" fg:x="912" fg:w="4"/><text x="98.9513%" y="927.50"></text></g><g><title>rnpm`security_framework::secure_transport::read_func (2 samples, 0.22%)</title><rect x="98.9177%" y="901" width="0.2165%" height="15" fill="rgb(223,36,21)" fg:x="914" fg:w="2"/><text x="99.1677%" y="911.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.22%)</title><rect x="98.9177%" y="885" width="0.2165%" height="15" fill="rgb(207,123,46)" fg:x="914" fg:w="2"/><text x="99.1677%" y="895.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.22%)</title><rect x="98.9177%" y="869" width="0.2165%" height="15" fill="rgb(240,218,32)" fg:x="914" fg:w="2"/><text x="99.1677%" y="879.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.22%)</title><rect x="98.9177%" y="853" width="0.2165%" height="15" fill="rgb(252,5,43)" fg:x="914" fg:w="2"/><text x="99.1677%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (2 samples, 0.22%)</title><rect x="98.9177%" y="837" width="0.2165%" height="15" fill="rgb(252,84,19)" fg:x="914" fg:w="2"/><text x="99.1677%" y="847.50"></text></g><g><title>rnpm`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (50 samples, 5.41%)</title><rect x="93.8312%" y="1029" width="5.4113%" height="15" fill="rgb(243,152,39)" fg:x="867" fg:w="50"/><text x="94.0812%" y="1039.50">rnpm`hy..</text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1 samples, 0.11%)</title><rect x="99.1342%" y="1013" width="0.1082%" height="15" fill="rgb(234,160,15)" fg:x="916" fg:w="1"/><text x="99.3842%" y="1023.50"></text></g><g><title>rnpm`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1 samples, 0.11%)</title><rect x="99.1342%" y="997" width="0.1082%" height="15" fill="rgb(237,34,20)" fg:x="916" fg:w="1"/><text x="99.3842%" y="1007.50"></text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.11%)</title><rect x="99.1342%" y="981" width="0.1082%" height="15" fill="rgb(229,97,13)" fg:x="916" fg:w="1"/><text x="99.3842%" y="991.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.11%)</title><rect x="99.1342%" y="965" width="0.1082%" height="15" fill="rgb(234,71,50)" fg:x="916" fg:w="1"/><text x="99.3842%" y="975.50"></text></g><g><title>rnpm`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="99.1342%" y="949" width="0.1082%" height="15" fill="rgb(253,155,4)" fg:x="916" fg:w="1"/><text x="99.3842%" y="959.50"></text></g><g><title>Security`SSLRead (1 samples, 0.11%)</title><rect x="99.1342%" y="933" width="0.1082%" height="15" fill="rgb(222,185,37)" fg:x="916" fg:w="1"/><text x="99.3842%" y="943.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.11%)</title><rect x="99.1342%" y="917" width="0.1082%" height="15" fill="rgb(251,177,13)" fg:x="916" fg:w="1"/><text x="99.3842%" y="927.50"></text></g><g><title>rnpm`security_framework::secure_transport::read_func (1 samples, 0.11%)</title><rect x="99.1342%" y="901" width="0.1082%" height="15" fill="rgb(250,179,40)" fg:x="916" fg:w="1"/><text x="99.3842%" y="911.50"></text></g><g><title>rnpm`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="99.1342%" y="885" width="0.1082%" height="15" fill="rgb(242,44,2)" fg:x="916" fg:w="1"/><text x="99.3842%" y="895.50"></text></g><g><title>rnpm`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.11%)</title><rect x="99.1342%" y="869" width="0.1082%" height="15" fill="rgb(216,177,13)" fg:x="916" fg:w="1"/><text x="99.3842%" y="879.50"></text></g><g><title>rnpm`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="99.1342%" y="853" width="0.1082%" height="15" fill="rgb(216,106,43)" fg:x="916" fg:w="1"/><text x="99.3842%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.11%)</title><rect x="99.1342%" y="837" width="0.1082%" height="15" fill="rgb(216,183,2)" fg:x="916" fg:w="1"/><text x="99.3842%" y="847.50"></text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (52 samples, 5.63%)</title><rect x="93.8312%" y="1061" width="5.6277%" height="15" fill="rgb(249,75,3)" fg:x="867" fg:w="52"/><text x="94.0812%" y="1071.50">rnpm`&lt;f..</text></g><g><title>rnpm`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (52 samples, 5.63%)</title><rect x="93.8312%" y="1045" width="5.6277%" height="15" fill="rgb(219,67,39)" fg:x="867" fg:w="52"/><text x="94.0812%" y="1055.50">rnpm`&lt;h..</text></g><g><title>rnpm`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (2 samples, 0.22%)</title><rect x="99.2424%" y="1029" width="0.2165%" height="15" fill="rgb(253,228,2)" fg:x="917" fg:w="2"/><text x="99.4924%" y="1039.50"></text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::Context::run_task (309 samples, 33.44%)</title><rect x="66.1255%" y="1125" width="33.4416%" height="15" fill="rgb(235,138,27)" fg:x="611" fg:w="309"/><text x="66.3755%" y="1135.50">rnpm`tokio::runtime::scheduler::current_thread::Contex..</text></g><g><title>rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (309 samples, 33.44%)</title><rect x="66.1255%" y="1109" width="33.4416%" height="15" fill="rgb(236,97,51)" fg:x="611" fg:w="309"/><text x="66.3755%" y="1119.50">rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>rnpm`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (309 samples, 33.44%)</title><rect x="66.1255%" y="1093" width="33.4416%" height="15" fill="rgb(240,80,30)" fg:x="611" fg:w="309"/><text x="66.3755%" y="1103.50">rnpm`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>rnpm`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (53 samples, 5.74%)</title><rect x="93.8312%" y="1077" width="5.7359%" height="15" fill="rgb(230,178,19)" fg:x="867" fg:w="53"/><text x="94.0812%" y="1087.50">rnpm`&lt;f..</text></g><g><title>rnpm`core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="99.4589%" y="1061" width="0.1082%" height="15" fill="rgb(210,190,27)" fg:x="919" fg:w="1"/><text x="99.7089%" y="1071.50"></text></g><g><title>rnpm`&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="99.4589%" y="1045" width="0.1082%" height="15" fill="rgb(222,107,31)" fg:x="919" fg:w="1"/><text x="99.7089%" y="1055.50"></text></g><g><title>rnpm`hyper::client::pool::PoolInner&lt;T&gt;::put (1 samples, 0.11%)</title><rect x="99.4589%" y="1029" width="0.1082%" height="15" fill="rgb(216,127,34)" fg:x="919" fg:w="1"/><text x="99.7089%" y="1039.50"></text></g><g><title>rnpm`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.11%)</title><rect x="99.4589%" y="1013" width="0.1082%" height="15" fill="rgb(234,116,52)" fg:x="919" fg:w="1"/><text x="99.7089%" y="1023.50"></text></g><g><title>rnpm`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="99.4589%" y="997" width="0.1082%" height="15" fill="rgb(222,124,15)" fg:x="919" fg:w="1"/><text x="99.7089%" y="1007.50"></text></g><g><title>rnpm`std::sys_common::backtrace::__rust_begin_short_backtrace (421 samples, 45.56%)</title><rect x="54.2208%" y="1189" width="45.5628%" height="15" fill="rgb(231,179,28)" fg:x="501" fg:w="421"/><text x="54.4708%" y="1199.50">rnpm`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rnpm`tokio::runtime::runtime::Runtime::block_on (335 samples, 36.26%)</title><rect x="63.5281%" y="1173" width="36.2554%" height="15" fill="rgb(226,93,45)" fg:x="587" fg:w="335"/><text x="63.7781%" y="1183.50">rnpm`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>rnpm`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (335 samples, 36.26%)</title><rect x="63.5281%" y="1157" width="36.2554%" height="15" fill="rgb(215,8,51)" fg:x="587" fg:w="335"/><text x="63.7781%" y="1167.50">rnpm`tokio::runtime::scheduler::current_thread::CurrentThre..</text></g><g><title>rnpm`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (335 samples, 36.26%)</title><rect x="63.5281%" y="1141" width="36.2554%" height="15" fill="rgb(223,106,5)" fg:x="587" fg:w="335"/><text x="63.7781%" y="1151.50">rnpm`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>rnpm`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.22%)</title><rect x="99.5671%" y="1125" width="0.2165%" height="15" fill="rgb(250,191,5)" fg:x="920" fg:w="2"/><text x="99.8171%" y="1135.50"></text></g><g><title>rnpm`core::ops::function::FnOnce::call_once{{vtable.shim}} (422 samples, 45.67%)</title><rect x="54.2208%" y="1205" width="45.6710%" height="15" fill="rgb(242,132,44)" fg:x="501" fg:w="422"/><text x="54.4708%" y="1215.50">rnpm`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>rnpm`tokio::runtime::builder::Builder::new_current_thread (1 samples, 0.11%)</title><rect x="99.7835%" y="1189" width="0.1082%" height="15" fill="rgb(251,152,29)" fg:x="922" fg:w="1"/><text x="100.0335%" y="1199.50"></text></g><g><title>all (924 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(218,179,5)" fg:x="0" fg:w="924"/><text x="0.2500%" y="1279.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (428 samples, 46.32%)</title><rect x="53.6797%" y="1253" width="46.3203%" height="15" fill="rgb(227,67,19)" fg:x="496" fg:w="428"/><text x="53.9297%" y="1263.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (427 samples, 46.21%)</title><rect x="53.7879%" y="1237" width="46.2121%" height="15" fill="rgb(233,119,31)" fg:x="497" fg:w="427"/><text x="54.0379%" y="1247.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>rnpm`std::sys::unix::thread::Thread::new::thread_start (423 samples, 45.78%)</title><rect x="54.2208%" y="1221" width="45.7792%" height="15" fill="rgb(241,120,22)" fg:x="501" fg:w="423"/><text x="54.4708%" y="1231.50">rnpm`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>rnpm`std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.11%)</title><rect x="99.8918%" y="1205" width="0.1082%" height="15" fill="rgb(224,102,30)" fg:x="923" fg:w="1"/><text x="100.1418%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.11%)</title><rect x="99.8918%" y="1189" width="0.1082%" height="15" fill="rgb(210,164,37)" fg:x="923" fg:w="1"/><text x="100.1418%" y="1199.50"></text></g></svg></svg>